# vectors and matrices
A = [2, 3, x];
B = [3, x, "string"];
C = [[1, 2, 3],
     [2 ,3, 4, 5]];
D = [[x, y, 3],
     [y, x, "string"]];
E = eye(4);
F = zeros(3.5);
G = ones("ones");

# range
A = B[3:4];
for i = 1:3.4 {
    break;
}

# negation
A = 1 - -4;
B = - "string" + - [2, 3, 4];

# binary expressions
A = 3 + 4 - 5.4;
B = "word" + "another word";
C = "error" + 404;
D = [4, 2, 0] - [[4, 2, 0]];

# matrix binary expressions
A = B .* [[2, 3, 4]];
B = [[2, 3, 4]]' .+ [[3], [4], [6]];
C = [[2, 2], [3, 3]] .- ones(2);
D = [2, 3, 4] .+ [5, 6, 7] .- [8, 9, 9];
D = [[2, 3, 4]] ./ [[2, 3], [x, 5]];
E = [[2, 3, 4]] .+ 6;

# transposition
A = B' .* [[2,3,4]]';
C = [2, 3, 4]' - "string"';

# slicing
A = B[2:3, x];
B = C["string", 3.5];


# loops
for i = 1:N {
    if(i <= 16)
        break;
    continue;
}
break;

# while and if conditions
while (k > 0) {
    if (l < 4)
        print 3;
}
if ("420" + "420") {
    while (16)
        A += 2;
}
HH += 3;
Q = [[1,2]];
H = Q[1:4, 2:5];
