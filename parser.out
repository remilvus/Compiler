Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statements_list
Rule 1     number -> INT
Rule 2     number -> FLOAT
Rule 3     expression -> ID
Rule 4     expression -> number
Rule 5     expression -> STRING
Rule 6     inner_table -> expression , expression
Rule 7     inner_table -> inner_table , expression
Rule 8     expression -> [ expression ]
Rule 9     expression -> [ inner_table ]
Rule 10    expression -> ZEROS ( expression )
Rule 11    expression -> EYE ( expression )
Rule 12    expression -> ONES ( expression )
Rule 13    range -> expression : expression
Rule 14    expression -> MINUS expression
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> expression PLUS_MAT expression
Rule 20    expression -> expression MINUS_MAT expression
Rule 21    expression -> expression TIMES_MAT expression
Rule 22    expression -> expression DIVIDE_MAT expression
Rule 23    expression -> expression TRANSPOSE
Rule 24    expression -> expression EQ expression
Rule 25    expression -> expression NE expression
Rule 26    expression -> expression GT expression
Rule 27    expression -> expression GE expression
Rule 28    expression -> expression LT expression
Rule 29    expression -> expression LE expression
Rule 30    statement -> ID ASSIGN expression ;
Rule 31    statement -> ID MINUS_ASSIGN expression ;
Rule 32    statement -> ID PLUS_ASSIGN expression ;
Rule 33    statement -> ID TIMES_ASSIGN expression ;
Rule 34    statement -> ID DIVIDE_ASSIGN expression ;
Rule 35    slice -> ID [ expression ]
Rule 36    slice -> ID [ range ]
Rule 37    slice -> ID [ expression , expression ]
Rule 38    slice -> ID [ expression , range ]
Rule 39    slice -> ID [ range , expression ]
Rule 40    slice -> ID [ range , range ]
Rule 41    statement -> slice ASSIGN expression ;
Rule 42    statement -> slice MINUS_ASSIGN expression ;
Rule 43    statement -> slice PLUS_ASSIGN expression ;
Rule 44    statement -> slice TIMES_ASSIGN expression ;
Rule 45    statement -> slice DIVIDE_ASSIGN expression ;
Rule 46    expression -> slice
Rule 47    statements_list -> statements_list statement
Rule 48    statements_list -> statements_list code_block
Rule 49    statements_list -> statement statement
Rule 50    statements_list -> statement code_block
Rule 51    statement -> RETURN ;
Rule 52    statement -> RETURN expression ;
Rule 53    code_block -> { statements_list }
Rule 54    code_block -> { statement }
Rule 55    statement -> BREAK ;
Rule 56    statement -> CONTINUE ;
Rule 57    statement -> FOR ID ASSIGN range code_block
Rule 58    statement -> FOR ID ASSIGN range statement
Rule 59    statement -> WHILE ( expression ) code_block
Rule 60    statement -> WHILE ( expression ) statement
Rule 61    statement -> IF ( expression ) statement
Rule 62    statement -> IF ( expression ) code_block
Rule 63    statement -> IF ( expression ) statement else_block
Rule 64    statement -> IF ( expression ) code_block else_block
Rule 65    else_block -> ELSE statement
Rule 66    else_block -> ELSE code_block
Rule 67    statement -> PRINT inner_table ;
Rule 68    statement -> PRINT expression ;

Terminals, with rules where they appear

(                    : 10 11 12 59 60 61 62 63 64
)                    : 10 11 12 59 60 61 62 63 64
,                    : 6 7 37 38 39 40
:                    : 13
;                    : 30 31 32 33 34 41 42 43 44 45 51 52 55 56 67 68
ASSIGN               : 30 41 57 58
BREAK                : 55
CONTINUE             : 56
DIVIDE               : 18
DIVIDE_ASSIGN        : 34 45
DIVIDE_MAT           : 22
ELSE                 : 65 66
EQ                   : 24
EYE                  : 11
FLOAT                : 2
FOR                  : 57 58
GE                   : 27
GT                   : 26
ID                   : 3 30 31 32 33 34 35 36 37 38 39 40 57 58
IF                   : 61 62 63 64
INT                  : 1
LE                   : 29
LT                   : 28
MINUS                : 14 16
MINUS_ASSIGN         : 31 42
MINUS_MAT            : 20
NE                   : 25
ONES                 : 12
PLUS                 : 15
PLUS_ASSIGN          : 32 43
PLUS_MAT             : 19
PRINT                : 67 68
RETURN               : 51 52
STRING               : 5
TIMES                : 17
TIMES_ASSIGN         : 33 44
TIMES_MAT            : 21
TRANSPOSE            : 23
WHILE                : 59 60
ZEROS                : 10
[                    : 8 9 35 36 37 38 39 40
]                    : 8 9 35 36 37 38 39 40
error                : 
{                    : 53 54
}                    : 53 54

Nonterminals, with rules where they appear

code_block           : 48 50 57 59 62 64 66
else_block           : 63 64
expression           : 6 6 7 8 10 11 12 13 13 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 24 24 25 25 26 26 27 27 28 28 29 29 30 31 32 33 34 35 37 37 38 39 41 42 43 44 45 52 59 60 61 62 63 64 68
inner_table          : 7 9 67
number               : 4
range                : 36 38 39 40 40 57 58
slice                : 41 42 43 44 45 46
statement            : 47 49 49 50 54 58 60 61 63 65
statements_list      : 47 48 53 0

Parsing method: LALR

state 0

    (0) S' -> . statements_list
    (47) statements_list -> . statements_list statement
    (48) statements_list -> . statements_list code_block
    (49) statements_list -> . statement statement
    (50) statements_list -> . statement code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    statements_list                shift and go to state 1
    statement                      shift and go to state 2
    slice                          shift and go to state 4

state 1

    (0) S' -> statements_list .
    (47) statements_list -> statements_list . statement
    (48) statements_list -> statements_list . code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 12
    code_block                     shift and go to state 13
    slice                          shift and go to state 4

state 2

    (49) statements_list -> statement . statement
    (50) statements_list -> statement . code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 15
    code_block                     shift and go to state 16
    slice                          shift and go to state 4

state 3

    (30) statement -> ID . ASSIGN expression ;
    (31) statement -> ID . MINUS_ASSIGN expression ;
    (32) statement -> ID . PLUS_ASSIGN expression ;
    (33) statement -> ID . TIMES_ASSIGN expression ;
    (34) statement -> ID . DIVIDE_ASSIGN expression ;
    (35) slice -> ID . [ expression ]
    (36) slice -> ID . [ range ]
    (37) slice -> ID . [ expression , expression ]
    (38) slice -> ID . [ expression , range ]
    (39) slice -> ID . [ range , expression ]
    (40) slice -> ID . [ range , range ]

    ASSIGN          shift and go to state 17
    MINUS_ASSIGN    shift and go to state 18
    PLUS_ASSIGN     shift and go to state 19
    TIMES_ASSIGN    shift and go to state 20
    DIVIDE_ASSIGN   shift and go to state 21
    [               shift and go to state 22


state 4

    (41) statement -> slice . ASSIGN expression ;
    (42) statement -> slice . MINUS_ASSIGN expression ;
    (43) statement -> slice . PLUS_ASSIGN expression ;
    (44) statement -> slice . TIMES_ASSIGN expression ;
    (45) statement -> slice . DIVIDE_ASSIGN expression ;

    ASSIGN          shift and go to state 23
    MINUS_ASSIGN    shift and go to state 24
    PLUS_ASSIGN     shift and go to state 25
    TIMES_ASSIGN    shift and go to state 26
    DIVIDE_ASSIGN   shift and go to state 27


state 5

    (51) statement -> RETURN . ;
    (52) statement -> RETURN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ;               shift and go to state 28
    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 29
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 6

    (55) statement -> BREAK . ;

    ;               shift and go to state 41


state 7

    (56) statement -> CONTINUE . ;

    ;               shift and go to state 42


state 8

    (57) statement -> FOR . ID ASSIGN range code_block
    (58) statement -> FOR . ID ASSIGN range statement

    ID              shift and go to state 43


state 9

    (59) statement -> WHILE . ( expression ) code_block
    (60) statement -> WHILE . ( expression ) statement

    (               shift and go to state 44


state 10

    (61) statement -> IF . ( expression ) statement
    (62) statement -> IF . ( expression ) code_block
    (63) statement -> IF . ( expression ) statement else_block
    (64) statement -> IF . ( expression ) code_block else_block

    (               shift and go to state 45


state 11

    (67) statement -> PRINT . inner_table ;
    (68) statement -> PRINT . expression ;
    (6) inner_table -> . expression , expression
    (7) inner_table -> . inner_table , expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    inner_table                    shift and go to state 46
    expression                     shift and go to state 47
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 12

    (47) statements_list -> statements_list statement .

    ID              reduce using rule 47 (statements_list -> statements_list statement .)
    RETURN          reduce using rule 47 (statements_list -> statements_list statement .)
    BREAK           reduce using rule 47 (statements_list -> statements_list statement .)
    CONTINUE        reduce using rule 47 (statements_list -> statements_list statement .)
    FOR             reduce using rule 47 (statements_list -> statements_list statement .)
    WHILE           reduce using rule 47 (statements_list -> statements_list statement .)
    IF              reduce using rule 47 (statements_list -> statements_list statement .)
    PRINT           reduce using rule 47 (statements_list -> statements_list statement .)
    {               reduce using rule 47 (statements_list -> statements_list statement .)
    $end            reduce using rule 47 (statements_list -> statements_list statement .)
    }               reduce using rule 47 (statements_list -> statements_list statement .)


state 13

    (48) statements_list -> statements_list code_block .

    ID              reduce using rule 48 (statements_list -> statements_list code_block .)
    RETURN          reduce using rule 48 (statements_list -> statements_list code_block .)
    BREAK           reduce using rule 48 (statements_list -> statements_list code_block .)
    CONTINUE        reduce using rule 48 (statements_list -> statements_list code_block .)
    FOR             reduce using rule 48 (statements_list -> statements_list code_block .)
    WHILE           reduce using rule 48 (statements_list -> statements_list code_block .)
    IF              reduce using rule 48 (statements_list -> statements_list code_block .)
    PRINT           reduce using rule 48 (statements_list -> statements_list code_block .)
    {               reduce using rule 48 (statements_list -> statements_list code_block .)
    $end            reduce using rule 48 (statements_list -> statements_list code_block .)
    }               reduce using rule 48 (statements_list -> statements_list code_block .)


state 14

    (53) code_block -> { . statements_list }
    (54) code_block -> { . statement }
    (47) statements_list -> . statements_list statement
    (48) statements_list -> . statements_list code_block
    (49) statements_list -> . statement statement
    (50) statements_list -> . statement code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    statements_list                shift and go to state 48
    statement                      shift and go to state 49
    slice                          shift and go to state 4

state 15

    (49) statements_list -> statement statement .

    ID              reduce using rule 49 (statements_list -> statement statement .)
    RETURN          reduce using rule 49 (statements_list -> statement statement .)
    BREAK           reduce using rule 49 (statements_list -> statement statement .)
    CONTINUE        reduce using rule 49 (statements_list -> statement statement .)
    FOR             reduce using rule 49 (statements_list -> statement statement .)
    WHILE           reduce using rule 49 (statements_list -> statement statement .)
    IF              reduce using rule 49 (statements_list -> statement statement .)
    PRINT           reduce using rule 49 (statements_list -> statement statement .)
    {               reduce using rule 49 (statements_list -> statement statement .)
    $end            reduce using rule 49 (statements_list -> statement statement .)
    }               reduce using rule 49 (statements_list -> statement statement .)


state 16

    (50) statements_list -> statement code_block .

    ID              reduce using rule 50 (statements_list -> statement code_block .)
    RETURN          reduce using rule 50 (statements_list -> statement code_block .)
    BREAK           reduce using rule 50 (statements_list -> statement code_block .)
    CONTINUE        reduce using rule 50 (statements_list -> statement code_block .)
    FOR             reduce using rule 50 (statements_list -> statement code_block .)
    WHILE           reduce using rule 50 (statements_list -> statement code_block .)
    IF              reduce using rule 50 (statements_list -> statement code_block .)
    PRINT           reduce using rule 50 (statements_list -> statement code_block .)
    {               reduce using rule 50 (statements_list -> statement code_block .)
    $end            reduce using rule 50 (statements_list -> statement code_block .)
    }               reduce using rule 50 (statements_list -> statement code_block .)


state 17

    (30) statement -> ID ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 50
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 18

    (31) statement -> ID MINUS_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 51
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 19

    (32) statement -> ID PLUS_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 52
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 20

    (33) statement -> ID TIMES_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 53
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 21

    (34) statement -> ID DIVIDE_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 54
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 22

    (35) slice -> ID [ . expression ]
    (36) slice -> ID [ . range ]
    (37) slice -> ID [ . expression , expression ]
    (38) slice -> ID [ . expression , range ]
    (39) slice -> ID [ . range , expression ]
    (40) slice -> ID [ . range , range ]
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (13) range -> . expression : expression
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 55
    range                          shift and go to state 56
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 23

    (41) statement -> slice ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    slice                          shift and go to state 38
    expression                     shift and go to state 57
    number                         shift and go to state 31

state 24

    (42) statement -> slice MINUS_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    slice                          shift and go to state 38
    expression                     shift and go to state 58
    number                         shift and go to state 31

state 25

    (43) statement -> slice PLUS_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    slice                          shift and go to state 38
    expression                     shift and go to state 59
    number                         shift and go to state 31

state 26

    (44) statement -> slice TIMES_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    slice                          shift and go to state 38
    expression                     shift and go to state 60
    number                         shift and go to state 31

state 27

    (45) statement -> slice DIVIDE_ASSIGN . expression ;
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    slice                          shift and go to state 38
    expression                     shift and go to state 61
    number                         shift and go to state 31

state 28

    (51) statement -> RETURN ; .

    ID              reduce using rule 51 (statement -> RETURN ; .)
    RETURN          reduce using rule 51 (statement -> RETURN ; .)
    BREAK           reduce using rule 51 (statement -> RETURN ; .)
    CONTINUE        reduce using rule 51 (statement -> RETURN ; .)
    FOR             reduce using rule 51 (statement -> RETURN ; .)
    WHILE           reduce using rule 51 (statement -> RETURN ; .)
    IF              reduce using rule 51 (statement -> RETURN ; .)
    PRINT           reduce using rule 51 (statement -> RETURN ; .)
    {               reduce using rule 51 (statement -> RETURN ; .)
    $end            reduce using rule 51 (statement -> RETURN ; .)
    }               reduce using rule 51 (statement -> RETURN ; .)
    ELSE            reduce using rule 51 (statement -> RETURN ; .)


state 29

    (52) statement -> RETURN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 62
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 30

    (3) expression -> ID .
    (35) slice -> ID . [ expression ]
    (36) slice -> ID . [ range ]
    (37) slice -> ID . [ expression , expression ]
    (38) slice -> ID . [ expression , range ]
    (39) slice -> ID . [ range , expression ]
    (40) slice -> ID . [ range , range ]

    ;               reduce using rule 3 (expression -> ID .)
    PLUS            reduce using rule 3 (expression -> ID .)
    MINUS           reduce using rule 3 (expression -> ID .)
    TIMES           reduce using rule 3 (expression -> ID .)
    DIVIDE          reduce using rule 3 (expression -> ID .)
    PLUS_MAT        reduce using rule 3 (expression -> ID .)
    MINUS_MAT       reduce using rule 3 (expression -> ID .)
    TIMES_MAT       reduce using rule 3 (expression -> ID .)
    DIVIDE_MAT      reduce using rule 3 (expression -> ID .)
    TRANSPOSE       reduce using rule 3 (expression -> ID .)
    EQ              reduce using rule 3 (expression -> ID .)
    NE              reduce using rule 3 (expression -> ID .)
    GT              reduce using rule 3 (expression -> ID .)
    GE              reduce using rule 3 (expression -> ID .)
    LT              reduce using rule 3 (expression -> ID .)
    LE              reduce using rule 3 (expression -> ID .)
    ,               reduce using rule 3 (expression -> ID .)
    ]               reduce using rule 3 (expression -> ID .)
    :               reduce using rule 3 (expression -> ID .)
    )               reduce using rule 3 (expression -> ID .)
    {               reduce using rule 3 (expression -> ID .)
    ID              reduce using rule 3 (expression -> ID .)
    RETURN          reduce using rule 3 (expression -> ID .)
    BREAK           reduce using rule 3 (expression -> ID .)
    CONTINUE        reduce using rule 3 (expression -> ID .)
    FOR             reduce using rule 3 (expression -> ID .)
    WHILE           reduce using rule 3 (expression -> ID .)
    IF              reduce using rule 3 (expression -> ID .)
    PRINT           reduce using rule 3 (expression -> ID .)
    [               shift and go to state 22


state 31

    (4) expression -> number .

    ;               reduce using rule 4 (expression -> number .)
    PLUS            reduce using rule 4 (expression -> number .)
    MINUS           reduce using rule 4 (expression -> number .)
    TIMES           reduce using rule 4 (expression -> number .)
    DIVIDE          reduce using rule 4 (expression -> number .)
    PLUS_MAT        reduce using rule 4 (expression -> number .)
    MINUS_MAT       reduce using rule 4 (expression -> number .)
    TIMES_MAT       reduce using rule 4 (expression -> number .)
    DIVIDE_MAT      reduce using rule 4 (expression -> number .)
    TRANSPOSE       reduce using rule 4 (expression -> number .)
    EQ              reduce using rule 4 (expression -> number .)
    NE              reduce using rule 4 (expression -> number .)
    GT              reduce using rule 4 (expression -> number .)
    GE              reduce using rule 4 (expression -> number .)
    LT              reduce using rule 4 (expression -> number .)
    LE              reduce using rule 4 (expression -> number .)
    ,               reduce using rule 4 (expression -> number .)
    ]               reduce using rule 4 (expression -> number .)
    :               reduce using rule 4 (expression -> number .)
    )               reduce using rule 4 (expression -> number .)
    {               reduce using rule 4 (expression -> number .)
    ID              reduce using rule 4 (expression -> number .)
    RETURN          reduce using rule 4 (expression -> number .)
    BREAK           reduce using rule 4 (expression -> number .)
    CONTINUE        reduce using rule 4 (expression -> number .)
    FOR             reduce using rule 4 (expression -> number .)
    WHILE           reduce using rule 4 (expression -> number .)
    IF              reduce using rule 4 (expression -> number .)
    PRINT           reduce using rule 4 (expression -> number .)


state 32

    (5) expression -> STRING .

    ;               reduce using rule 5 (expression -> STRING .)
    PLUS            reduce using rule 5 (expression -> STRING .)
    MINUS           reduce using rule 5 (expression -> STRING .)
    TIMES           reduce using rule 5 (expression -> STRING .)
    DIVIDE          reduce using rule 5 (expression -> STRING .)
    PLUS_MAT        reduce using rule 5 (expression -> STRING .)
    MINUS_MAT       reduce using rule 5 (expression -> STRING .)
    TIMES_MAT       reduce using rule 5 (expression -> STRING .)
    DIVIDE_MAT      reduce using rule 5 (expression -> STRING .)
    TRANSPOSE       reduce using rule 5 (expression -> STRING .)
    EQ              reduce using rule 5 (expression -> STRING .)
    NE              reduce using rule 5 (expression -> STRING .)
    GT              reduce using rule 5 (expression -> STRING .)
    GE              reduce using rule 5 (expression -> STRING .)
    LT              reduce using rule 5 (expression -> STRING .)
    LE              reduce using rule 5 (expression -> STRING .)
    ,               reduce using rule 5 (expression -> STRING .)
    ]               reduce using rule 5 (expression -> STRING .)
    :               reduce using rule 5 (expression -> STRING .)
    )               reduce using rule 5 (expression -> STRING .)
    {               reduce using rule 5 (expression -> STRING .)
    ID              reduce using rule 5 (expression -> STRING .)
    RETURN          reduce using rule 5 (expression -> STRING .)
    BREAK           reduce using rule 5 (expression -> STRING .)
    CONTINUE        reduce using rule 5 (expression -> STRING .)
    FOR             reduce using rule 5 (expression -> STRING .)
    WHILE           reduce using rule 5 (expression -> STRING .)
    IF              reduce using rule 5 (expression -> STRING .)
    PRINT           reduce using rule 5 (expression -> STRING .)


state 33

    (8) expression -> [ . expression ]
    (9) expression -> [ . inner_table ]
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (6) inner_table -> . expression , expression
    (7) inner_table -> . inner_table , expression
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 78
    inner_table                    shift and go to state 79
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 34

    (10) expression -> ZEROS . ( expression )

    (               shift and go to state 80


state 35

    (11) expression -> EYE . ( expression )

    (               shift and go to state 81


state 36

    (12) expression -> ONES . ( expression )

    (               shift and go to state 82


state 37

    (14) expression -> MINUS . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 83
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 38

    (46) expression -> slice .

    ;               reduce using rule 46 (expression -> slice .)
    PLUS            reduce using rule 46 (expression -> slice .)
    MINUS           reduce using rule 46 (expression -> slice .)
    TIMES           reduce using rule 46 (expression -> slice .)
    DIVIDE          reduce using rule 46 (expression -> slice .)
    PLUS_MAT        reduce using rule 46 (expression -> slice .)
    MINUS_MAT       reduce using rule 46 (expression -> slice .)
    TIMES_MAT       reduce using rule 46 (expression -> slice .)
    DIVIDE_MAT      reduce using rule 46 (expression -> slice .)
    TRANSPOSE       reduce using rule 46 (expression -> slice .)
    EQ              reduce using rule 46 (expression -> slice .)
    NE              reduce using rule 46 (expression -> slice .)
    GT              reduce using rule 46 (expression -> slice .)
    GE              reduce using rule 46 (expression -> slice .)
    LT              reduce using rule 46 (expression -> slice .)
    LE              reduce using rule 46 (expression -> slice .)
    ,               reduce using rule 46 (expression -> slice .)
    ]               reduce using rule 46 (expression -> slice .)
    :               reduce using rule 46 (expression -> slice .)
    )               reduce using rule 46 (expression -> slice .)
    {               reduce using rule 46 (expression -> slice .)
    ID              reduce using rule 46 (expression -> slice .)
    RETURN          reduce using rule 46 (expression -> slice .)
    BREAK           reduce using rule 46 (expression -> slice .)
    CONTINUE        reduce using rule 46 (expression -> slice .)
    FOR             reduce using rule 46 (expression -> slice .)
    WHILE           reduce using rule 46 (expression -> slice .)
    IF              reduce using rule 46 (expression -> slice .)
    PRINT           reduce using rule 46 (expression -> slice .)


state 39

    (1) number -> INT .

    ;               reduce using rule 1 (number -> INT .)
    PLUS            reduce using rule 1 (number -> INT .)
    MINUS           reduce using rule 1 (number -> INT .)
    TIMES           reduce using rule 1 (number -> INT .)
    DIVIDE          reduce using rule 1 (number -> INT .)
    PLUS_MAT        reduce using rule 1 (number -> INT .)
    MINUS_MAT       reduce using rule 1 (number -> INT .)
    TIMES_MAT       reduce using rule 1 (number -> INT .)
    DIVIDE_MAT      reduce using rule 1 (number -> INT .)
    TRANSPOSE       reduce using rule 1 (number -> INT .)
    EQ              reduce using rule 1 (number -> INT .)
    NE              reduce using rule 1 (number -> INT .)
    GT              reduce using rule 1 (number -> INT .)
    GE              reduce using rule 1 (number -> INT .)
    LT              reduce using rule 1 (number -> INT .)
    LE              reduce using rule 1 (number -> INT .)
    ,               reduce using rule 1 (number -> INT .)
    ]               reduce using rule 1 (number -> INT .)
    :               reduce using rule 1 (number -> INT .)
    )               reduce using rule 1 (number -> INT .)
    {               reduce using rule 1 (number -> INT .)
    ID              reduce using rule 1 (number -> INT .)
    RETURN          reduce using rule 1 (number -> INT .)
    BREAK           reduce using rule 1 (number -> INT .)
    CONTINUE        reduce using rule 1 (number -> INT .)
    FOR             reduce using rule 1 (number -> INT .)
    WHILE           reduce using rule 1 (number -> INT .)
    IF              reduce using rule 1 (number -> INT .)
    PRINT           reduce using rule 1 (number -> INT .)


state 40

    (2) number -> FLOAT .

    ;               reduce using rule 2 (number -> FLOAT .)
    PLUS            reduce using rule 2 (number -> FLOAT .)
    MINUS           reduce using rule 2 (number -> FLOAT .)
    TIMES           reduce using rule 2 (number -> FLOAT .)
    DIVIDE          reduce using rule 2 (number -> FLOAT .)
    PLUS_MAT        reduce using rule 2 (number -> FLOAT .)
    MINUS_MAT       reduce using rule 2 (number -> FLOAT .)
    TIMES_MAT       reduce using rule 2 (number -> FLOAT .)
    DIVIDE_MAT      reduce using rule 2 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 2 (number -> FLOAT .)
    EQ              reduce using rule 2 (number -> FLOAT .)
    NE              reduce using rule 2 (number -> FLOAT .)
    GT              reduce using rule 2 (number -> FLOAT .)
    GE              reduce using rule 2 (number -> FLOAT .)
    LT              reduce using rule 2 (number -> FLOAT .)
    LE              reduce using rule 2 (number -> FLOAT .)
    ,               reduce using rule 2 (number -> FLOAT .)
    ]               reduce using rule 2 (number -> FLOAT .)
    :               reduce using rule 2 (number -> FLOAT .)
    )               reduce using rule 2 (number -> FLOAT .)
    {               reduce using rule 2 (number -> FLOAT .)
    ID              reduce using rule 2 (number -> FLOAT .)
    RETURN          reduce using rule 2 (number -> FLOAT .)
    BREAK           reduce using rule 2 (number -> FLOAT .)
    CONTINUE        reduce using rule 2 (number -> FLOAT .)
    FOR             reduce using rule 2 (number -> FLOAT .)
    WHILE           reduce using rule 2 (number -> FLOAT .)
    IF              reduce using rule 2 (number -> FLOAT .)
    PRINT           reduce using rule 2 (number -> FLOAT .)


state 41

    (55) statement -> BREAK ; .

    ID              reduce using rule 55 (statement -> BREAK ; .)
    RETURN          reduce using rule 55 (statement -> BREAK ; .)
    BREAK           reduce using rule 55 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 55 (statement -> BREAK ; .)
    FOR             reduce using rule 55 (statement -> BREAK ; .)
    WHILE           reduce using rule 55 (statement -> BREAK ; .)
    IF              reduce using rule 55 (statement -> BREAK ; .)
    PRINT           reduce using rule 55 (statement -> BREAK ; .)
    {               reduce using rule 55 (statement -> BREAK ; .)
    $end            reduce using rule 55 (statement -> BREAK ; .)
    }               reduce using rule 55 (statement -> BREAK ; .)
    ELSE            reduce using rule 55 (statement -> BREAK ; .)


state 42

    (56) statement -> CONTINUE ; .

    ID              reduce using rule 56 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 56 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 56 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 56 (statement -> CONTINUE ; .)
    FOR             reduce using rule 56 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 56 (statement -> CONTINUE ; .)
    IF              reduce using rule 56 (statement -> CONTINUE ; .)
    PRINT           reduce using rule 56 (statement -> CONTINUE ; .)
    {               reduce using rule 56 (statement -> CONTINUE ; .)
    $end            reduce using rule 56 (statement -> CONTINUE ; .)
    }               reduce using rule 56 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 56 (statement -> CONTINUE ; .)


state 43

    (57) statement -> FOR ID . ASSIGN range code_block
    (58) statement -> FOR ID . ASSIGN range statement

    ASSIGN          shift and go to state 84


state 44

    (59) statement -> WHILE ( . expression ) code_block
    (60) statement -> WHILE ( . expression ) statement
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 85
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 45

    (61) statement -> IF ( . expression ) statement
    (62) statement -> IF ( . expression ) code_block
    (63) statement -> IF ( . expression ) statement else_block
    (64) statement -> IF ( . expression ) code_block else_block
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 86
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 46

    (67) statement -> PRINT inner_table . ;
    (7) inner_table -> inner_table . , expression

    ;               shift and go to state 87
    ,               shift and go to state 88


state 47

    (68) statement -> PRINT expression . ;
    (6) inner_table -> expression . , expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 89
    ,               shift and go to state 90
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 48

    (53) code_block -> { statements_list . }
    (47) statements_list -> statements_list . statement
    (48) statements_list -> statements_list . code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    }               shift and go to state 91
    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 12
    code_block                     shift and go to state 13
    slice                          shift and go to state 4

state 49

    (54) code_block -> { statement . }
    (49) statements_list -> statement . statement
    (50) statements_list -> statement . code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    }               shift and go to state 92
    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 15
    code_block                     shift and go to state 16
    slice                          shift and go to state 4

state 50

    (30) statement -> ID ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 93
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 51

    (31) statement -> ID MINUS_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 94
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 52

    (32) statement -> ID PLUS_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 95
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 53

    (33) statement -> ID TIMES_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 96
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 54

    (34) statement -> ID DIVIDE_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 97
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 55

    (35) slice -> ID [ expression . ]
    (37) slice -> ID [ expression . , expression ]
    (38) slice -> ID [ expression . , range ]
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (13) range -> expression . : expression

    ]               shift and go to state 98
    ,               shift and go to state 99
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77
    :               shift and go to state 100


state 56

    (36) slice -> ID [ range . ]
    (39) slice -> ID [ range . , expression ]
    (40) slice -> ID [ range . , range ]

    ]               shift and go to state 101
    ,               shift and go to state 102


state 57

    (41) statement -> slice ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 103
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 58

    (42) statement -> slice MINUS_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 104
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 59

    (43) statement -> slice PLUS_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 105
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 60

    (44) statement -> slice TIMES_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 106
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 61

    (45) statement -> slice DIVIDE_ASSIGN expression . ;
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               shift and go to state 107
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 62

    (52) statement -> RETURN expression ; .

    ID              reduce using rule 52 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 52 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 52 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 52 (statement -> RETURN expression ; .)
    FOR             reduce using rule 52 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 52 (statement -> RETURN expression ; .)
    IF              reduce using rule 52 (statement -> RETURN expression ; .)
    PRINT           reduce using rule 52 (statement -> RETURN expression ; .)
    {               reduce using rule 52 (statement -> RETURN expression ; .)
    $end            reduce using rule 52 (statement -> RETURN expression ; .)
    }               reduce using rule 52 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 52 (statement -> RETURN expression ; .)


state 63

    (15) expression -> expression PLUS . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 108
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 64

    (16) expression -> expression MINUS . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 109
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 65

    (17) expression -> expression TIMES . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 110
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 66

    (18) expression -> expression DIVIDE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 111
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 67

    (19) expression -> expression PLUS_MAT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 112
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 68

    (20) expression -> expression MINUS_MAT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 113
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 69

    (21) expression -> expression TIMES_MAT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 114
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 70

    (22) expression -> expression DIVIDE_MAT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 115
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 71

    (23) expression -> expression TRANSPOSE .

    ;               reduce using rule 23 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 23 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 23 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 23 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 23 (expression -> expression TRANSPOSE .)
    PLUS_MAT        reduce using rule 23 (expression -> expression TRANSPOSE .)
    MINUS_MAT       reduce using rule 23 (expression -> expression TRANSPOSE .)
    TIMES_MAT       reduce using rule 23 (expression -> expression TRANSPOSE .)
    DIVIDE_MAT      reduce using rule 23 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 23 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 23 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 23 (expression -> expression TRANSPOSE .)
    GT              reduce using rule 23 (expression -> expression TRANSPOSE .)
    GE              reduce using rule 23 (expression -> expression TRANSPOSE .)
    LT              reduce using rule 23 (expression -> expression TRANSPOSE .)
    LE              reduce using rule 23 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 23 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 23 (expression -> expression TRANSPOSE .)
    :               reduce using rule 23 (expression -> expression TRANSPOSE .)
    )               reduce using rule 23 (expression -> expression TRANSPOSE .)
    {               reduce using rule 23 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 23 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 23 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 23 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 23 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 23 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 23 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 23 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 23 (expression -> expression TRANSPOSE .)


state 72

    (24) expression -> expression EQ . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 116
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 73

    (25) expression -> expression NE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 117
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 74

    (26) expression -> expression GT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 118
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 75

    (27) expression -> expression GE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 119
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 76

    (28) expression -> expression LT . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 120
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 77

    (29) expression -> expression LE . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 121
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 78

    (8) expression -> [ expression . ]
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (6) inner_table -> expression . , expression

    ]               shift and go to state 122
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77
    ,               shift and go to state 90


state 79

    (9) expression -> [ inner_table . ]
    (7) inner_table -> inner_table . , expression

    ]               shift and go to state 123
    ,               shift and go to state 88


state 80

    (10) expression -> ZEROS ( . expression )
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 124
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 81

    (11) expression -> EYE ( . expression )
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 125
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 82

    (12) expression -> ONES ( . expression )
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 126
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 83

    (14) expression -> MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 14 (expression -> MINUS expression .)
    PLUS            reduce using rule 14 (expression -> MINUS expression .)
    MINUS           reduce using rule 14 (expression -> MINUS expression .)
    TRANSPOSE       reduce using rule 14 (expression -> MINUS expression .)
    EQ              reduce using rule 14 (expression -> MINUS expression .)
    NE              reduce using rule 14 (expression -> MINUS expression .)
    GT              reduce using rule 14 (expression -> MINUS expression .)
    GE              reduce using rule 14 (expression -> MINUS expression .)
    LT              reduce using rule 14 (expression -> MINUS expression .)
    LE              reduce using rule 14 (expression -> MINUS expression .)
    ,               reduce using rule 14 (expression -> MINUS expression .)
    ]               reduce using rule 14 (expression -> MINUS expression .)
    :               reduce using rule 14 (expression -> MINUS expression .)
    )               reduce using rule 14 (expression -> MINUS expression .)
    {               reduce using rule 14 (expression -> MINUS expression .)
    ID              reduce using rule 14 (expression -> MINUS expression .)
    RETURN          reduce using rule 14 (expression -> MINUS expression .)
    BREAK           reduce using rule 14 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 14 (expression -> MINUS expression .)
    FOR             reduce using rule 14 (expression -> MINUS expression .)
    WHILE           reduce using rule 14 (expression -> MINUS expression .)
    IF              reduce using rule 14 (expression -> MINUS expression .)
    PRINT           reduce using rule 14 (expression -> MINUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! TIMES           [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 14 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 84

    (57) statement -> FOR ID ASSIGN . range code_block
    (58) statement -> FOR ID ASSIGN . range statement
    (13) range -> . expression : expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    range                          shift and go to state 127
    expression                     shift and go to state 128
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 85

    (59) statement -> WHILE ( expression . ) code_block
    (60) statement -> WHILE ( expression . ) statement
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    )               shift and go to state 129
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 86

    (61) statement -> IF ( expression . ) statement
    (62) statement -> IF ( expression . ) code_block
    (63) statement -> IF ( expression . ) statement else_block
    (64) statement -> IF ( expression . ) code_block else_block
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    )               shift and go to state 130
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 87

    (67) statement -> PRINT inner_table ; .

    ID              reduce using rule 67 (statement -> PRINT inner_table ; .)
    RETURN          reduce using rule 67 (statement -> PRINT inner_table ; .)
    BREAK           reduce using rule 67 (statement -> PRINT inner_table ; .)
    CONTINUE        reduce using rule 67 (statement -> PRINT inner_table ; .)
    FOR             reduce using rule 67 (statement -> PRINT inner_table ; .)
    WHILE           reduce using rule 67 (statement -> PRINT inner_table ; .)
    IF              reduce using rule 67 (statement -> PRINT inner_table ; .)
    PRINT           reduce using rule 67 (statement -> PRINT inner_table ; .)
    {               reduce using rule 67 (statement -> PRINT inner_table ; .)
    $end            reduce using rule 67 (statement -> PRINT inner_table ; .)
    }               reduce using rule 67 (statement -> PRINT inner_table ; .)
    ELSE            reduce using rule 67 (statement -> PRINT inner_table ; .)


state 88

    (7) inner_table -> inner_table , . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 131
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 89

    (68) statement -> PRINT expression ; .

    ID              reduce using rule 68 (statement -> PRINT expression ; .)
    RETURN          reduce using rule 68 (statement -> PRINT expression ; .)
    BREAK           reduce using rule 68 (statement -> PRINT expression ; .)
    CONTINUE        reduce using rule 68 (statement -> PRINT expression ; .)
    FOR             reduce using rule 68 (statement -> PRINT expression ; .)
    WHILE           reduce using rule 68 (statement -> PRINT expression ; .)
    IF              reduce using rule 68 (statement -> PRINT expression ; .)
    PRINT           reduce using rule 68 (statement -> PRINT expression ; .)
    {               reduce using rule 68 (statement -> PRINT expression ; .)
    $end            reduce using rule 68 (statement -> PRINT expression ; .)
    }               reduce using rule 68 (statement -> PRINT expression ; .)
    ELSE            reduce using rule 68 (statement -> PRINT expression ; .)


state 90

    (6) inner_table -> expression , . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 132
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 91

    (53) code_block -> { statements_list } .

    ID              reduce using rule 53 (code_block -> { statements_list } .)
    RETURN          reduce using rule 53 (code_block -> { statements_list } .)
    BREAK           reduce using rule 53 (code_block -> { statements_list } .)
    CONTINUE        reduce using rule 53 (code_block -> { statements_list } .)
    FOR             reduce using rule 53 (code_block -> { statements_list } .)
    WHILE           reduce using rule 53 (code_block -> { statements_list } .)
    IF              reduce using rule 53 (code_block -> { statements_list } .)
    PRINT           reduce using rule 53 (code_block -> { statements_list } .)
    {               reduce using rule 53 (code_block -> { statements_list } .)
    $end            reduce using rule 53 (code_block -> { statements_list } .)
    }               reduce using rule 53 (code_block -> { statements_list } .)
    ELSE            reduce using rule 53 (code_block -> { statements_list } .)


state 92

    (54) code_block -> { statement } .

    ID              reduce using rule 54 (code_block -> { statement } .)
    RETURN          reduce using rule 54 (code_block -> { statement } .)
    BREAK           reduce using rule 54 (code_block -> { statement } .)
    CONTINUE        reduce using rule 54 (code_block -> { statement } .)
    FOR             reduce using rule 54 (code_block -> { statement } .)
    WHILE           reduce using rule 54 (code_block -> { statement } .)
    IF              reduce using rule 54 (code_block -> { statement } .)
    PRINT           reduce using rule 54 (code_block -> { statement } .)
    {               reduce using rule 54 (code_block -> { statement } .)
    $end            reduce using rule 54 (code_block -> { statement } .)
    }               reduce using rule 54 (code_block -> { statement } .)
    ELSE            reduce using rule 54 (code_block -> { statement } .)


state 93

    (30) statement -> ID ASSIGN expression ; .

    ID              reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    RETURN          reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    BREAK           reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    CONTINUE        reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    FOR             reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    WHILE           reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    IF              reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    PRINT           reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    {               reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    $end            reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    }               reduce using rule 30 (statement -> ID ASSIGN expression ; .)
    ELSE            reduce using rule 30 (statement -> ID ASSIGN expression ; .)


state 94

    (31) statement -> ID MINUS_ASSIGN expression ; .

    ID              reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    RETURN          reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    BREAK           reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    FOR             reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    WHILE           reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    IF              reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    PRINT           reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    {               reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    $end            reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    }               reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)
    ELSE            reduce using rule 31 (statement -> ID MINUS_ASSIGN expression ; .)


state 95

    (32) statement -> ID PLUS_ASSIGN expression ; .

    ID              reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    RETURN          reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    BREAK           reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    FOR             reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    WHILE           reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    IF              reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    PRINT           reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    {               reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    $end            reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    }               reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)
    ELSE            reduce using rule 32 (statement -> ID PLUS_ASSIGN expression ; .)


state 96

    (33) statement -> ID TIMES_ASSIGN expression ; .

    ID              reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    RETURN          reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    BREAK           reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    CONTINUE        reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    FOR             reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    WHILE           reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    IF              reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    PRINT           reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    {               reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    $end            reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    }               reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)
    ELSE            reduce using rule 33 (statement -> ID TIMES_ASSIGN expression ; .)


state 97

    (34) statement -> ID DIVIDE_ASSIGN expression ; .

    ID              reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    RETURN          reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    BREAK           reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    CONTINUE        reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    FOR             reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    WHILE           reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    IF              reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    PRINT           reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    {               reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    $end            reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    }               reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)
    ELSE            reduce using rule 34 (statement -> ID DIVIDE_ASSIGN expression ; .)


state 98

    (35) slice -> ID [ expression ] .

    ASSIGN          reduce using rule 35 (slice -> ID [ expression ] .)
    MINUS_ASSIGN    reduce using rule 35 (slice -> ID [ expression ] .)
    PLUS_ASSIGN     reduce using rule 35 (slice -> ID [ expression ] .)
    TIMES_ASSIGN    reduce using rule 35 (slice -> ID [ expression ] .)
    DIVIDE_ASSIGN   reduce using rule 35 (slice -> ID [ expression ] .)
    ;               reduce using rule 35 (slice -> ID [ expression ] .)
    PLUS            reduce using rule 35 (slice -> ID [ expression ] .)
    MINUS           reduce using rule 35 (slice -> ID [ expression ] .)
    TIMES           reduce using rule 35 (slice -> ID [ expression ] .)
    DIVIDE          reduce using rule 35 (slice -> ID [ expression ] .)
    PLUS_MAT        reduce using rule 35 (slice -> ID [ expression ] .)
    MINUS_MAT       reduce using rule 35 (slice -> ID [ expression ] .)
    TIMES_MAT       reduce using rule 35 (slice -> ID [ expression ] .)
    DIVIDE_MAT      reduce using rule 35 (slice -> ID [ expression ] .)
    TRANSPOSE       reduce using rule 35 (slice -> ID [ expression ] .)
    EQ              reduce using rule 35 (slice -> ID [ expression ] .)
    NE              reduce using rule 35 (slice -> ID [ expression ] .)
    GT              reduce using rule 35 (slice -> ID [ expression ] .)
    GE              reduce using rule 35 (slice -> ID [ expression ] .)
    LT              reduce using rule 35 (slice -> ID [ expression ] .)
    LE              reduce using rule 35 (slice -> ID [ expression ] .)
    ,               reduce using rule 35 (slice -> ID [ expression ] .)
    ]               reduce using rule 35 (slice -> ID [ expression ] .)
    :               reduce using rule 35 (slice -> ID [ expression ] .)
    )               reduce using rule 35 (slice -> ID [ expression ] .)
    {               reduce using rule 35 (slice -> ID [ expression ] .)
    ID              reduce using rule 35 (slice -> ID [ expression ] .)
    RETURN          reduce using rule 35 (slice -> ID [ expression ] .)
    BREAK           reduce using rule 35 (slice -> ID [ expression ] .)
    CONTINUE        reduce using rule 35 (slice -> ID [ expression ] .)
    FOR             reduce using rule 35 (slice -> ID [ expression ] .)
    WHILE           reduce using rule 35 (slice -> ID [ expression ] .)
    IF              reduce using rule 35 (slice -> ID [ expression ] .)
    PRINT           reduce using rule 35 (slice -> ID [ expression ] .)


state 99

    (37) slice -> ID [ expression , . expression ]
    (38) slice -> ID [ expression , . range ]
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (13) range -> . expression : expression
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 133
    range                          shift and go to state 134
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 100

    (13) range -> expression : . expression
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    expression                     shift and go to state 135
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 101

    (36) slice -> ID [ range ] .

    ASSIGN          reduce using rule 36 (slice -> ID [ range ] .)
    MINUS_ASSIGN    reduce using rule 36 (slice -> ID [ range ] .)
    PLUS_ASSIGN     reduce using rule 36 (slice -> ID [ range ] .)
    TIMES_ASSIGN    reduce using rule 36 (slice -> ID [ range ] .)
    DIVIDE_ASSIGN   reduce using rule 36 (slice -> ID [ range ] .)
    ;               reduce using rule 36 (slice -> ID [ range ] .)
    PLUS            reduce using rule 36 (slice -> ID [ range ] .)
    MINUS           reduce using rule 36 (slice -> ID [ range ] .)
    TIMES           reduce using rule 36 (slice -> ID [ range ] .)
    DIVIDE          reduce using rule 36 (slice -> ID [ range ] .)
    PLUS_MAT        reduce using rule 36 (slice -> ID [ range ] .)
    MINUS_MAT       reduce using rule 36 (slice -> ID [ range ] .)
    TIMES_MAT       reduce using rule 36 (slice -> ID [ range ] .)
    DIVIDE_MAT      reduce using rule 36 (slice -> ID [ range ] .)
    TRANSPOSE       reduce using rule 36 (slice -> ID [ range ] .)
    EQ              reduce using rule 36 (slice -> ID [ range ] .)
    NE              reduce using rule 36 (slice -> ID [ range ] .)
    GT              reduce using rule 36 (slice -> ID [ range ] .)
    GE              reduce using rule 36 (slice -> ID [ range ] .)
    LT              reduce using rule 36 (slice -> ID [ range ] .)
    LE              reduce using rule 36 (slice -> ID [ range ] .)
    ,               reduce using rule 36 (slice -> ID [ range ] .)
    ]               reduce using rule 36 (slice -> ID [ range ] .)
    :               reduce using rule 36 (slice -> ID [ range ] .)
    )               reduce using rule 36 (slice -> ID [ range ] .)
    {               reduce using rule 36 (slice -> ID [ range ] .)
    ID              reduce using rule 36 (slice -> ID [ range ] .)
    RETURN          reduce using rule 36 (slice -> ID [ range ] .)
    BREAK           reduce using rule 36 (slice -> ID [ range ] .)
    CONTINUE        reduce using rule 36 (slice -> ID [ range ] .)
    FOR             reduce using rule 36 (slice -> ID [ range ] .)
    WHILE           reduce using rule 36 (slice -> ID [ range ] .)
    IF              reduce using rule 36 (slice -> ID [ range ] .)
    PRINT           reduce using rule 36 (slice -> ID [ range ] .)


state 102

    (39) slice -> ID [ range , . expression ]
    (40) slice -> ID [ range , . range ]
    (3) expression -> . ID
    (4) expression -> . number
    (5) expression -> . STRING
    (8) expression -> . [ expression ]
    (9) expression -> . [ inner_table ]
    (10) expression -> . ZEROS ( expression )
    (11) expression -> . EYE ( expression )
    (12) expression -> . ONES ( expression )
    (14) expression -> . MINUS expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . expression PLUS_MAT expression
    (20) expression -> . expression MINUS_MAT expression
    (21) expression -> . expression TIMES_MAT expression
    (22) expression -> . expression DIVIDE_MAT expression
    (23) expression -> . expression TRANSPOSE
    (24) expression -> . expression EQ expression
    (25) expression -> . expression NE expression
    (26) expression -> . expression GT expression
    (27) expression -> . expression GE expression
    (28) expression -> . expression LT expression
    (29) expression -> . expression LE expression
    (46) expression -> . slice
    (13) range -> . expression : expression
    (1) number -> . INT
    (2) number -> . FLOAT
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 30
    STRING          shift and go to state 32
    [               shift and go to state 33
    ZEROS           shift and go to state 34
    EYE             shift and go to state 35
    ONES            shift and go to state 36
    MINUS           shift and go to state 37
    INT             shift and go to state 39
    FLOAT           shift and go to state 40

    range                          shift and go to state 136
    expression                     shift and go to state 137
    number                         shift and go to state 31
    slice                          shift and go to state 38

state 103

    (41) statement -> slice ASSIGN expression ; .

    ID              reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    RETURN          reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    BREAK           reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    CONTINUE        reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    FOR             reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    WHILE           reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    IF              reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    PRINT           reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    {               reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    $end            reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    }               reduce using rule 41 (statement -> slice ASSIGN expression ; .)
    ELSE            reduce using rule 41 (statement -> slice ASSIGN expression ; .)


state 104

    (42) statement -> slice MINUS_ASSIGN expression ; .

    ID              reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    RETURN          reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    BREAK           reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    FOR             reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    WHILE           reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    IF              reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    PRINT           reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    {               reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    $end            reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    }               reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)
    ELSE            reduce using rule 42 (statement -> slice MINUS_ASSIGN expression ; .)


state 105

    (43) statement -> slice PLUS_ASSIGN expression ; .

    ID              reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    RETURN          reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    BREAK           reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    FOR             reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    WHILE           reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    IF              reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    PRINT           reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    {               reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    $end            reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    }               reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)
    ELSE            reduce using rule 43 (statement -> slice PLUS_ASSIGN expression ; .)


state 106

    (44) statement -> slice TIMES_ASSIGN expression ; .

    ID              reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    RETURN          reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    BREAK           reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    CONTINUE        reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    FOR             reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    WHILE           reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    IF              reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    PRINT           reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    {               reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    $end            reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    }               reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)
    ELSE            reduce using rule 44 (statement -> slice TIMES_ASSIGN expression ; .)


state 107

    (45) statement -> slice DIVIDE_ASSIGN expression ; .

    ID              reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    RETURN          reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    BREAK           reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    CONTINUE        reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    FOR             reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    WHILE           reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    IF              reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    PRINT           reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    {               reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    $end            reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    }               reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)
    ELSE            reduce using rule 45 (statement -> slice DIVIDE_ASSIGN expression ; .)


state 108

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    TRANSPOSE       reduce using rule 15 (expression -> expression PLUS expression .)
    EQ              reduce using rule 15 (expression -> expression PLUS expression .)
    NE              reduce using rule 15 (expression -> expression PLUS expression .)
    GT              reduce using rule 15 (expression -> expression PLUS expression .)
    GE              reduce using rule 15 (expression -> expression PLUS expression .)
    LT              reduce using rule 15 (expression -> expression PLUS expression .)
    LE              reduce using rule 15 (expression -> expression PLUS expression .)
    ,               reduce using rule 15 (expression -> expression PLUS expression .)
    ]               reduce using rule 15 (expression -> expression PLUS expression .)
    :               reduce using rule 15 (expression -> expression PLUS expression .)
    )               reduce using rule 15 (expression -> expression PLUS expression .)
    {               reduce using rule 15 (expression -> expression PLUS expression .)
    ID              reduce using rule 15 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 15 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 15 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 15 (expression -> expression PLUS expression .)
    FOR             reduce using rule 15 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 15 (expression -> expression PLUS expression .)
    IF              reduce using rule 15 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 109

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    TRANSPOSE       reduce using rule 16 (expression -> expression MINUS expression .)
    EQ              reduce using rule 16 (expression -> expression MINUS expression .)
    NE              reduce using rule 16 (expression -> expression MINUS expression .)
    GT              reduce using rule 16 (expression -> expression MINUS expression .)
    GE              reduce using rule 16 (expression -> expression MINUS expression .)
    LT              reduce using rule 16 (expression -> expression MINUS expression .)
    LE              reduce using rule 16 (expression -> expression MINUS expression .)
    ,               reduce using rule 16 (expression -> expression MINUS expression .)
    ]               reduce using rule 16 (expression -> expression MINUS expression .)
    :               reduce using rule 16 (expression -> expression MINUS expression .)
    )               reduce using rule 16 (expression -> expression MINUS expression .)
    {               reduce using rule 16 (expression -> expression MINUS expression .)
    ID              reduce using rule 16 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 16 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 16 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 16 (expression -> expression MINUS expression .)
    FOR             reduce using rule 16 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 16 (expression -> expression MINUS expression .)
    IF              reduce using rule 16 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 110

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    TRANSPOSE       reduce using rule 17 (expression -> expression TIMES expression .)
    EQ              reduce using rule 17 (expression -> expression TIMES expression .)
    NE              reduce using rule 17 (expression -> expression TIMES expression .)
    GT              reduce using rule 17 (expression -> expression TIMES expression .)
    GE              reduce using rule 17 (expression -> expression TIMES expression .)
    LT              reduce using rule 17 (expression -> expression TIMES expression .)
    LE              reduce using rule 17 (expression -> expression TIMES expression .)
    ,               reduce using rule 17 (expression -> expression TIMES expression .)
    ]               reduce using rule 17 (expression -> expression TIMES expression .)
    :               reduce using rule 17 (expression -> expression TIMES expression .)
    )               reduce using rule 17 (expression -> expression TIMES expression .)
    {               reduce using rule 17 (expression -> expression TIMES expression .)
    ID              reduce using rule 17 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 17 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 17 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 17 (expression -> expression TIMES expression .)
    FOR             reduce using rule 17 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 17 (expression -> expression TIMES expression .)
    IF              reduce using rule 17 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS_MAT        [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! MINUS_MAT       [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! TIMES_MAT       [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 17 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 111

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    TRANSPOSE       reduce using rule 18 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 18 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 18 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 18 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 18 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 18 (expression -> expression DIVIDE expression .)
    :               reduce using rule 18 (expression -> expression DIVIDE expression .)
    )               reduce using rule 18 (expression -> expression DIVIDE expression .)
    {               reduce using rule 18 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 18 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 18 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 18 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 18 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 18 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 18 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS_MAT        [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! MINUS_MAT       [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! TIMES_MAT       [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 18 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 112

    (19) expression -> expression PLUS_MAT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    PLUS            reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    MINUS           reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    TIMES           reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    DIVIDE          reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    PLUS_MAT        reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    MINUS_MAT       reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    TRANSPOSE       reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    EQ              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    NE              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    GT              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    GE              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    LT              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    LE              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    ,               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    ]               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    :               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    )               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    {               reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    ID              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    RETURN          reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    BREAK           reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    CONTINUE        reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    FOR             reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    WHILE           reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    IF              reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    PRINT           reduce using rule 19 (expression -> expression PLUS_MAT expression .)
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! TIMES_MAT       [ reduce using rule 19 (expression -> expression PLUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 19 (expression -> expression PLUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS_MAT        [ shift and go to state 67 ]
  ! MINUS_MAT       [ shift and go to state 68 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 113

    (20) expression -> expression MINUS_MAT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    PLUS            reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    MINUS           reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    TIMES           reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    DIVIDE          reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    PLUS_MAT        reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    MINUS_MAT       reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    TRANSPOSE       reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    EQ              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    NE              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    GT              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    GE              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    LT              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    LE              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    ,               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    ]               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    :               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    )               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    {               reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    ID              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    RETURN          reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    BREAK           reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    CONTINUE        reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    FOR             reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    WHILE           reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    IF              reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    PRINT           reduce using rule 20 (expression -> expression MINUS_MAT expression .)
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! TIMES_MAT       [ reduce using rule 20 (expression -> expression MINUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 20 (expression -> expression MINUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS_MAT        [ shift and go to state 67 ]
  ! MINUS_MAT       [ shift and go to state 68 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 114

    (21) expression -> expression TIMES_MAT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    PLUS            reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    MINUS           reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    TIMES           reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    DIVIDE          reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    PLUS_MAT        reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    MINUS_MAT       reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    TIMES_MAT       reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    DIVIDE_MAT      reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    TRANSPOSE       reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    EQ              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    NE              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    GT              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    GE              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    LT              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    LE              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    ,               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    ]               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    :               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    )               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    {               reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    ID              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    RETURN          reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    BREAK           reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    CONTINUE        reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    FOR             reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    WHILE           reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    IF              reduce using rule 21 (expression -> expression TIMES_MAT expression .)
    PRINT           reduce using rule 21 (expression -> expression TIMES_MAT expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS_MAT        [ shift and go to state 67 ]
  ! MINUS_MAT       [ shift and go to state 68 ]
  ! TIMES_MAT       [ shift and go to state 69 ]
  ! DIVIDE_MAT      [ shift and go to state 70 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 115

    (22) expression -> expression DIVIDE_MAT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    PLUS            reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    TIMES           reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    PLUS_MAT        reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    MINUS_MAT       reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    TIMES_MAT       reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE_MAT      reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    TRANSPOSE       reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    EQ              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    NE              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    GT              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    GE              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    LT              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    LE              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    ,               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    ]               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    :               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    )               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    {               reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    ID              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    RETURN          reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    BREAK           reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    CONTINUE        reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    FOR             reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    WHILE           reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    IF              reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)
    PRINT           reduce using rule 22 (expression -> expression DIVIDE_MAT expression .)

  ! PLUS            [ shift and go to state 63 ]
  ! MINUS           [ shift and go to state 64 ]
  ! TIMES           [ shift and go to state 65 ]
  ! DIVIDE          [ shift and go to state 66 ]
  ! PLUS_MAT        [ shift and go to state 67 ]
  ! MINUS_MAT       [ shift and go to state 68 ]
  ! TIMES_MAT       [ shift and go to state 69 ]
  ! DIVIDE_MAT      [ shift and go to state 70 ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 116

    (24) expression -> expression EQ expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 24 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 24 (expression -> expression EQ expression .)
    EQ              reduce using rule 24 (expression -> expression EQ expression .)
    NE              reduce using rule 24 (expression -> expression EQ expression .)
    GT              reduce using rule 24 (expression -> expression EQ expression .)
    GE              reduce using rule 24 (expression -> expression EQ expression .)
    LT              reduce using rule 24 (expression -> expression EQ expression .)
    LE              reduce using rule 24 (expression -> expression EQ expression .)
    ,               reduce using rule 24 (expression -> expression EQ expression .)
    ]               reduce using rule 24 (expression -> expression EQ expression .)
    :               reduce using rule 24 (expression -> expression EQ expression .)
    )               reduce using rule 24 (expression -> expression EQ expression .)
    {               reduce using rule 24 (expression -> expression EQ expression .)
    ID              reduce using rule 24 (expression -> expression EQ expression .)
    RETURN          reduce using rule 24 (expression -> expression EQ expression .)
    BREAK           reduce using rule 24 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 24 (expression -> expression EQ expression .)
    FOR             reduce using rule 24 (expression -> expression EQ expression .)
    WHILE           reduce using rule 24 (expression -> expression EQ expression .)
    IF              reduce using rule 24 (expression -> expression EQ expression .)
    PRINT           reduce using rule 24 (expression -> expression EQ expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! PLUS_MAT        [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! MINUS_MAT       [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! TIMES_MAT       [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 24 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 117

    (25) expression -> expression NE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 25 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 25 (expression -> expression NE expression .)
    EQ              reduce using rule 25 (expression -> expression NE expression .)
    NE              reduce using rule 25 (expression -> expression NE expression .)
    GT              reduce using rule 25 (expression -> expression NE expression .)
    GE              reduce using rule 25 (expression -> expression NE expression .)
    LT              reduce using rule 25 (expression -> expression NE expression .)
    LE              reduce using rule 25 (expression -> expression NE expression .)
    ,               reduce using rule 25 (expression -> expression NE expression .)
    ]               reduce using rule 25 (expression -> expression NE expression .)
    :               reduce using rule 25 (expression -> expression NE expression .)
    )               reduce using rule 25 (expression -> expression NE expression .)
    {               reduce using rule 25 (expression -> expression NE expression .)
    ID              reduce using rule 25 (expression -> expression NE expression .)
    RETURN          reduce using rule 25 (expression -> expression NE expression .)
    BREAK           reduce using rule 25 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 25 (expression -> expression NE expression .)
    FOR             reduce using rule 25 (expression -> expression NE expression .)
    WHILE           reduce using rule 25 (expression -> expression NE expression .)
    IF              reduce using rule 25 (expression -> expression NE expression .)
    PRINT           reduce using rule 25 (expression -> expression NE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! PLUS_MAT        [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! MINUS_MAT       [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! TIMES_MAT       [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 25 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 118

    (26) expression -> expression GT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 26 (expression -> expression GT expression .)
    TRANSPOSE       reduce using rule 26 (expression -> expression GT expression .)
    EQ              reduce using rule 26 (expression -> expression GT expression .)
    NE              reduce using rule 26 (expression -> expression GT expression .)
    GT              reduce using rule 26 (expression -> expression GT expression .)
    GE              reduce using rule 26 (expression -> expression GT expression .)
    LT              reduce using rule 26 (expression -> expression GT expression .)
    LE              reduce using rule 26 (expression -> expression GT expression .)
    ,               reduce using rule 26 (expression -> expression GT expression .)
    ]               reduce using rule 26 (expression -> expression GT expression .)
    :               reduce using rule 26 (expression -> expression GT expression .)
    )               reduce using rule 26 (expression -> expression GT expression .)
    {               reduce using rule 26 (expression -> expression GT expression .)
    ID              reduce using rule 26 (expression -> expression GT expression .)
    RETURN          reduce using rule 26 (expression -> expression GT expression .)
    BREAK           reduce using rule 26 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 26 (expression -> expression GT expression .)
    FOR             reduce using rule 26 (expression -> expression GT expression .)
    WHILE           reduce using rule 26 (expression -> expression GT expression .)
    IF              reduce using rule 26 (expression -> expression GT expression .)
    PRINT           reduce using rule 26 (expression -> expression GT expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! PLUS_MAT        [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! MINUS_MAT       [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! TIMES_MAT       [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 26 (expression -> expression GT expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 119

    (27) expression -> expression GE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 27 (expression -> expression GE expression .)
    TRANSPOSE       reduce using rule 27 (expression -> expression GE expression .)
    EQ              reduce using rule 27 (expression -> expression GE expression .)
    NE              reduce using rule 27 (expression -> expression GE expression .)
    GT              reduce using rule 27 (expression -> expression GE expression .)
    GE              reduce using rule 27 (expression -> expression GE expression .)
    LT              reduce using rule 27 (expression -> expression GE expression .)
    LE              reduce using rule 27 (expression -> expression GE expression .)
    ,               reduce using rule 27 (expression -> expression GE expression .)
    ]               reduce using rule 27 (expression -> expression GE expression .)
    :               reduce using rule 27 (expression -> expression GE expression .)
    )               reduce using rule 27 (expression -> expression GE expression .)
    {               reduce using rule 27 (expression -> expression GE expression .)
    ID              reduce using rule 27 (expression -> expression GE expression .)
    RETURN          reduce using rule 27 (expression -> expression GE expression .)
    BREAK           reduce using rule 27 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression GE expression .)
    FOR             reduce using rule 27 (expression -> expression GE expression .)
    WHILE           reduce using rule 27 (expression -> expression GE expression .)
    IF              reduce using rule 27 (expression -> expression GE expression .)
    PRINT           reduce using rule 27 (expression -> expression GE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! PLUS_MAT        [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! MINUS_MAT       [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! TIMES_MAT       [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 27 (expression -> expression GE expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 120

    (28) expression -> expression LT expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 28 (expression -> expression LT expression .)
    TRANSPOSE       reduce using rule 28 (expression -> expression LT expression .)
    EQ              reduce using rule 28 (expression -> expression LT expression .)
    NE              reduce using rule 28 (expression -> expression LT expression .)
    GT              reduce using rule 28 (expression -> expression LT expression .)
    GE              reduce using rule 28 (expression -> expression LT expression .)
    LT              reduce using rule 28 (expression -> expression LT expression .)
    LE              reduce using rule 28 (expression -> expression LT expression .)
    ,               reduce using rule 28 (expression -> expression LT expression .)
    ]               reduce using rule 28 (expression -> expression LT expression .)
    :               reduce using rule 28 (expression -> expression LT expression .)
    )               reduce using rule 28 (expression -> expression LT expression .)
    {               reduce using rule 28 (expression -> expression LT expression .)
    ID              reduce using rule 28 (expression -> expression LT expression .)
    RETURN          reduce using rule 28 (expression -> expression LT expression .)
    BREAK           reduce using rule 28 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 28 (expression -> expression LT expression .)
    FOR             reduce using rule 28 (expression -> expression LT expression .)
    WHILE           reduce using rule 28 (expression -> expression LT expression .)
    IF              reduce using rule 28 (expression -> expression LT expression .)
    PRINT           reduce using rule 28 (expression -> expression LT expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! PLUS_MAT        [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! MINUS_MAT       [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! TIMES_MAT       [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 28 (expression -> expression LT expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 121

    (29) expression -> expression LE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 29 (expression -> expression LE expression .)
    TRANSPOSE       reduce using rule 29 (expression -> expression LE expression .)
    EQ              reduce using rule 29 (expression -> expression LE expression .)
    NE              reduce using rule 29 (expression -> expression LE expression .)
    GT              reduce using rule 29 (expression -> expression LE expression .)
    GE              reduce using rule 29 (expression -> expression LE expression .)
    LT              reduce using rule 29 (expression -> expression LE expression .)
    LE              reduce using rule 29 (expression -> expression LE expression .)
    ,               reduce using rule 29 (expression -> expression LE expression .)
    ]               reduce using rule 29 (expression -> expression LE expression .)
    :               reduce using rule 29 (expression -> expression LE expression .)
    )               reduce using rule 29 (expression -> expression LE expression .)
    {               reduce using rule 29 (expression -> expression LE expression .)
    ID              reduce using rule 29 (expression -> expression LE expression .)
    RETURN          reduce using rule 29 (expression -> expression LE expression .)
    BREAK           reduce using rule 29 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression LE expression .)
    FOR             reduce using rule 29 (expression -> expression LE expression .)
    WHILE           reduce using rule 29 (expression -> expression LE expression .)
    IF              reduce using rule 29 (expression -> expression LE expression .)
    PRINT           reduce using rule 29 (expression -> expression LE expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70

  ! PLUS            [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! PLUS_MAT        [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! MINUS_MAT       [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! TIMES_MAT       [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 29 (expression -> expression LE expression .) ]
  ! TRANSPOSE       [ shift and go to state 71 ]
  ! EQ              [ shift and go to state 72 ]
  ! NE              [ shift and go to state 73 ]
  ! GT              [ shift and go to state 74 ]
  ! GE              [ shift and go to state 75 ]
  ! LT              [ shift and go to state 76 ]
  ! LE              [ shift and go to state 77 ]


state 122

    (8) expression -> [ expression ] .

    ;               reduce using rule 8 (expression -> [ expression ] .)
    PLUS            reduce using rule 8 (expression -> [ expression ] .)
    MINUS           reduce using rule 8 (expression -> [ expression ] .)
    TIMES           reduce using rule 8 (expression -> [ expression ] .)
    DIVIDE          reduce using rule 8 (expression -> [ expression ] .)
    PLUS_MAT        reduce using rule 8 (expression -> [ expression ] .)
    MINUS_MAT       reduce using rule 8 (expression -> [ expression ] .)
    TIMES_MAT       reduce using rule 8 (expression -> [ expression ] .)
    DIVIDE_MAT      reduce using rule 8 (expression -> [ expression ] .)
    TRANSPOSE       reduce using rule 8 (expression -> [ expression ] .)
    EQ              reduce using rule 8 (expression -> [ expression ] .)
    NE              reduce using rule 8 (expression -> [ expression ] .)
    GT              reduce using rule 8 (expression -> [ expression ] .)
    GE              reduce using rule 8 (expression -> [ expression ] .)
    LT              reduce using rule 8 (expression -> [ expression ] .)
    LE              reduce using rule 8 (expression -> [ expression ] .)
    ,               reduce using rule 8 (expression -> [ expression ] .)
    ]               reduce using rule 8 (expression -> [ expression ] .)
    :               reduce using rule 8 (expression -> [ expression ] .)
    )               reduce using rule 8 (expression -> [ expression ] .)
    {               reduce using rule 8 (expression -> [ expression ] .)
    ID              reduce using rule 8 (expression -> [ expression ] .)
    RETURN          reduce using rule 8 (expression -> [ expression ] .)
    BREAK           reduce using rule 8 (expression -> [ expression ] .)
    CONTINUE        reduce using rule 8 (expression -> [ expression ] .)
    FOR             reduce using rule 8 (expression -> [ expression ] .)
    WHILE           reduce using rule 8 (expression -> [ expression ] .)
    IF              reduce using rule 8 (expression -> [ expression ] .)
    PRINT           reduce using rule 8 (expression -> [ expression ] .)


state 123

    (9) expression -> [ inner_table ] .

    ;               reduce using rule 9 (expression -> [ inner_table ] .)
    PLUS            reduce using rule 9 (expression -> [ inner_table ] .)
    MINUS           reduce using rule 9 (expression -> [ inner_table ] .)
    TIMES           reduce using rule 9 (expression -> [ inner_table ] .)
    DIVIDE          reduce using rule 9 (expression -> [ inner_table ] .)
    PLUS_MAT        reduce using rule 9 (expression -> [ inner_table ] .)
    MINUS_MAT       reduce using rule 9 (expression -> [ inner_table ] .)
    TIMES_MAT       reduce using rule 9 (expression -> [ inner_table ] .)
    DIVIDE_MAT      reduce using rule 9 (expression -> [ inner_table ] .)
    TRANSPOSE       reduce using rule 9 (expression -> [ inner_table ] .)
    EQ              reduce using rule 9 (expression -> [ inner_table ] .)
    NE              reduce using rule 9 (expression -> [ inner_table ] .)
    GT              reduce using rule 9 (expression -> [ inner_table ] .)
    GE              reduce using rule 9 (expression -> [ inner_table ] .)
    LT              reduce using rule 9 (expression -> [ inner_table ] .)
    LE              reduce using rule 9 (expression -> [ inner_table ] .)
    ,               reduce using rule 9 (expression -> [ inner_table ] .)
    ]               reduce using rule 9 (expression -> [ inner_table ] .)
    :               reduce using rule 9 (expression -> [ inner_table ] .)
    )               reduce using rule 9 (expression -> [ inner_table ] .)
    {               reduce using rule 9 (expression -> [ inner_table ] .)
    ID              reduce using rule 9 (expression -> [ inner_table ] .)
    RETURN          reduce using rule 9 (expression -> [ inner_table ] .)
    BREAK           reduce using rule 9 (expression -> [ inner_table ] .)
    CONTINUE        reduce using rule 9 (expression -> [ inner_table ] .)
    FOR             reduce using rule 9 (expression -> [ inner_table ] .)
    WHILE           reduce using rule 9 (expression -> [ inner_table ] .)
    IF              reduce using rule 9 (expression -> [ inner_table ] .)
    PRINT           reduce using rule 9 (expression -> [ inner_table ] .)


state 124

    (10) expression -> ZEROS ( expression . )
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    )               shift and go to state 138
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 125

    (11) expression -> EYE ( expression . )
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    )               shift and go to state 139
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 126

    (12) expression -> ONES ( expression . )
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    )               shift and go to state 140
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 127

    (57) statement -> FOR ID ASSIGN range . code_block
    (58) statement -> FOR ID ASSIGN range . statement
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    {               shift and go to state 14
    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    code_block                     shift and go to state 141
    statement                      shift and go to state 142
    slice                          shift and go to state 4

state 128

    (13) range -> expression . : expression
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    :               shift and go to state 100
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 129

    (59) statement -> WHILE ( expression ) . code_block
    (60) statement -> WHILE ( expression ) . statement
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    {               shift and go to state 14
    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11

    code_block                     shift and go to state 143
    statement                      shift and go to state 144
    slice                          shift and go to state 4

state 130

    (61) statement -> IF ( expression ) . statement
    (62) statement -> IF ( expression ) . code_block
    (63) statement -> IF ( expression ) . statement else_block
    (64) statement -> IF ( expression ) . code_block else_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 145
    code_block                     shift and go to state 146
    slice                          shift and go to state 4

state 131

    (7) inner_table -> inner_table , expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 7 (inner_table -> inner_table , expression .)
    ,               reduce using rule 7 (inner_table -> inner_table , expression .)
    ]               reduce using rule 7 (inner_table -> inner_table , expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 132

    (6) inner_table -> expression , expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ;               reduce using rule 6 (inner_table -> expression , expression .)
    ,               reduce using rule 6 (inner_table -> expression , expression .)
    ]               reduce using rule 6 (inner_table -> expression , expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 133

    (37) slice -> ID [ expression , expression . ]
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (13) range -> expression . : expression

    ]               shift and go to state 147
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77
    :               shift and go to state 100


state 134

    (38) slice -> ID [ expression , range . ]

    ]               shift and go to state 148


state 135

    (13) range -> expression : expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression

    ]               reduce using rule 13 (range -> expression : expression .)
    ,               reduce using rule 13 (range -> expression : expression .)
    {               reduce using rule 13 (range -> expression : expression .)
    ID              reduce using rule 13 (range -> expression : expression .)
    RETURN          reduce using rule 13 (range -> expression : expression .)
    BREAK           reduce using rule 13 (range -> expression : expression .)
    CONTINUE        reduce using rule 13 (range -> expression : expression .)
    FOR             reduce using rule 13 (range -> expression : expression .)
    WHILE           reduce using rule 13 (range -> expression : expression .)
    IF              reduce using rule 13 (range -> expression : expression .)
    PRINT           reduce using rule 13 (range -> expression : expression .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77


state 136

    (40) slice -> ID [ range , range . ]

    ]               shift and go to state 149


state 137

    (39) slice -> ID [ range , expression . ]
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression
    (19) expression -> expression . PLUS_MAT expression
    (20) expression -> expression . MINUS_MAT expression
    (21) expression -> expression . TIMES_MAT expression
    (22) expression -> expression . DIVIDE_MAT expression
    (23) expression -> expression . TRANSPOSE
    (24) expression -> expression . EQ expression
    (25) expression -> expression . NE expression
    (26) expression -> expression . GT expression
    (27) expression -> expression . GE expression
    (28) expression -> expression . LT expression
    (29) expression -> expression . LE expression
    (13) range -> expression . : expression

    ]               shift and go to state 150
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    PLUS_MAT        shift and go to state 67
    MINUS_MAT       shift and go to state 68
    TIMES_MAT       shift and go to state 69
    DIVIDE_MAT      shift and go to state 70
    TRANSPOSE       shift and go to state 71
    EQ              shift and go to state 72
    NE              shift and go to state 73
    GT              shift and go to state 74
    GE              shift and go to state 75
    LT              shift and go to state 76
    LE              shift and go to state 77
    :               shift and go to state 100


state 138

    (10) expression -> ZEROS ( expression ) .

    ;               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    PLUS            reduce using rule 10 (expression -> ZEROS ( expression ) .)
    MINUS           reduce using rule 10 (expression -> ZEROS ( expression ) .)
    TIMES           reduce using rule 10 (expression -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 10 (expression -> ZEROS ( expression ) .)
    PLUS_MAT        reduce using rule 10 (expression -> ZEROS ( expression ) .)
    MINUS_MAT       reduce using rule 10 (expression -> ZEROS ( expression ) .)
    TIMES_MAT       reduce using rule 10 (expression -> ZEROS ( expression ) .)
    DIVIDE_MAT      reduce using rule 10 (expression -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 10 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    NE              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    GT              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    GE              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    LT              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    LE              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 10 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 10 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 10 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 10 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 10 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 10 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 10 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 10 (expression -> ZEROS ( expression ) .)


state 139

    (11) expression -> EYE ( expression ) .

    ;               reduce using rule 11 (expression -> EYE ( expression ) .)
    PLUS            reduce using rule 11 (expression -> EYE ( expression ) .)
    MINUS           reduce using rule 11 (expression -> EYE ( expression ) .)
    TIMES           reduce using rule 11 (expression -> EYE ( expression ) .)
    DIVIDE          reduce using rule 11 (expression -> EYE ( expression ) .)
    PLUS_MAT        reduce using rule 11 (expression -> EYE ( expression ) .)
    MINUS_MAT       reduce using rule 11 (expression -> EYE ( expression ) .)
    TIMES_MAT       reduce using rule 11 (expression -> EYE ( expression ) .)
    DIVIDE_MAT      reduce using rule 11 (expression -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 11 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 11 (expression -> EYE ( expression ) .)
    NE              reduce using rule 11 (expression -> EYE ( expression ) .)
    GT              reduce using rule 11 (expression -> EYE ( expression ) .)
    GE              reduce using rule 11 (expression -> EYE ( expression ) .)
    LT              reduce using rule 11 (expression -> EYE ( expression ) .)
    LE              reduce using rule 11 (expression -> EYE ( expression ) .)
    ,               reduce using rule 11 (expression -> EYE ( expression ) .)
    ]               reduce using rule 11 (expression -> EYE ( expression ) .)
    :               reduce using rule 11 (expression -> EYE ( expression ) .)
    )               reduce using rule 11 (expression -> EYE ( expression ) .)
    {               reduce using rule 11 (expression -> EYE ( expression ) .)
    ID              reduce using rule 11 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 11 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 11 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 11 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 11 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 11 (expression -> EYE ( expression ) .)
    IF              reduce using rule 11 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 11 (expression -> EYE ( expression ) .)


state 140

    (12) expression -> ONES ( expression ) .

    ;               reduce using rule 12 (expression -> ONES ( expression ) .)
    PLUS            reduce using rule 12 (expression -> ONES ( expression ) .)
    MINUS           reduce using rule 12 (expression -> ONES ( expression ) .)
    TIMES           reduce using rule 12 (expression -> ONES ( expression ) .)
    DIVIDE          reduce using rule 12 (expression -> ONES ( expression ) .)
    PLUS_MAT        reduce using rule 12 (expression -> ONES ( expression ) .)
    MINUS_MAT       reduce using rule 12 (expression -> ONES ( expression ) .)
    TIMES_MAT       reduce using rule 12 (expression -> ONES ( expression ) .)
    DIVIDE_MAT      reduce using rule 12 (expression -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 12 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 12 (expression -> ONES ( expression ) .)
    NE              reduce using rule 12 (expression -> ONES ( expression ) .)
    GT              reduce using rule 12 (expression -> ONES ( expression ) .)
    GE              reduce using rule 12 (expression -> ONES ( expression ) .)
    LT              reduce using rule 12 (expression -> ONES ( expression ) .)
    LE              reduce using rule 12 (expression -> ONES ( expression ) .)
    ,               reduce using rule 12 (expression -> ONES ( expression ) .)
    ]               reduce using rule 12 (expression -> ONES ( expression ) .)
    :               reduce using rule 12 (expression -> ONES ( expression ) .)
    )               reduce using rule 12 (expression -> ONES ( expression ) .)
    {               reduce using rule 12 (expression -> ONES ( expression ) .)
    ID              reduce using rule 12 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 12 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 12 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 12 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 12 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 12 (expression -> ONES ( expression ) .)
    IF              reduce using rule 12 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 12 (expression -> ONES ( expression ) .)


state 141

    (57) statement -> FOR ID ASSIGN range code_block .

    ID              reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    RETURN          reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    BREAK           reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    CONTINUE        reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    FOR             reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    WHILE           reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    IF              reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    PRINT           reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    {               reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    $end            reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    }               reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)
    ELSE            reduce using rule 57 (statement -> FOR ID ASSIGN range code_block .)


state 142

    (58) statement -> FOR ID ASSIGN range statement .

    ID              reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    RETURN          reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    BREAK           reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    CONTINUE        reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    FOR             reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    WHILE           reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    IF              reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    PRINT           reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    {               reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    $end            reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    }               reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)
    ELSE            reduce using rule 58 (statement -> FOR ID ASSIGN range statement .)


state 143

    (59) statement -> WHILE ( expression ) code_block .

    ID              reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    RETURN          reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    BREAK           reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    CONTINUE        reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    FOR             reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    WHILE           reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    IF              reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    PRINT           reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    {               reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    $end            reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    }               reduce using rule 59 (statement -> WHILE ( expression ) code_block .)
    ELSE            reduce using rule 59 (statement -> WHILE ( expression ) code_block .)


state 144

    (60) statement -> WHILE ( expression ) statement .

    ID              reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    PRINT           reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    {               reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    $end            reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    }               reduce using rule 60 (statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 60 (statement -> WHILE ( expression ) statement .)


state 145

    (61) statement -> IF ( expression ) statement .
    (63) statement -> IF ( expression ) statement . else_block
    (65) else_block -> . ELSE statement
    (66) else_block -> . ELSE code_block

    ID              reduce using rule 61 (statement -> IF ( expression ) statement .)
    RETURN          reduce using rule 61 (statement -> IF ( expression ) statement .)
    BREAK           reduce using rule 61 (statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 61 (statement -> IF ( expression ) statement .)
    FOR             reduce using rule 61 (statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 61 (statement -> IF ( expression ) statement .)
    IF              reduce using rule 61 (statement -> IF ( expression ) statement .)
    PRINT           reduce using rule 61 (statement -> IF ( expression ) statement .)
    {               reduce using rule 61 (statement -> IF ( expression ) statement .)
    $end            reduce using rule 61 (statement -> IF ( expression ) statement .)
    }               reduce using rule 61 (statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 152

  ! ELSE            [ reduce using rule 61 (statement -> IF ( expression ) statement .) ]

    else_block                     shift and go to state 151

state 146

    (62) statement -> IF ( expression ) code_block .
    (64) statement -> IF ( expression ) code_block . else_block
    (65) else_block -> . ELSE statement
    (66) else_block -> . ELSE code_block

    ID              reduce using rule 62 (statement -> IF ( expression ) code_block .)
    RETURN          reduce using rule 62 (statement -> IF ( expression ) code_block .)
    BREAK           reduce using rule 62 (statement -> IF ( expression ) code_block .)
    CONTINUE        reduce using rule 62 (statement -> IF ( expression ) code_block .)
    FOR             reduce using rule 62 (statement -> IF ( expression ) code_block .)
    WHILE           reduce using rule 62 (statement -> IF ( expression ) code_block .)
    IF              reduce using rule 62 (statement -> IF ( expression ) code_block .)
    PRINT           reduce using rule 62 (statement -> IF ( expression ) code_block .)
    {               reduce using rule 62 (statement -> IF ( expression ) code_block .)
    $end            reduce using rule 62 (statement -> IF ( expression ) code_block .)
    }               reduce using rule 62 (statement -> IF ( expression ) code_block .)
    ELSE            shift and go to state 152

  ! ELSE            [ reduce using rule 62 (statement -> IF ( expression ) code_block .) ]

    else_block                     shift and go to state 153

state 147

    (37) slice -> ID [ expression , expression ] .

    ASSIGN          reduce using rule 37 (slice -> ID [ expression , expression ] .)
    MINUS_ASSIGN    reduce using rule 37 (slice -> ID [ expression , expression ] .)
    PLUS_ASSIGN     reduce using rule 37 (slice -> ID [ expression , expression ] .)
    TIMES_ASSIGN    reduce using rule 37 (slice -> ID [ expression , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 37 (slice -> ID [ expression , expression ] .)
    ;               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    PLUS            reduce using rule 37 (slice -> ID [ expression , expression ] .)
    MINUS           reduce using rule 37 (slice -> ID [ expression , expression ] .)
    TIMES           reduce using rule 37 (slice -> ID [ expression , expression ] .)
    DIVIDE          reduce using rule 37 (slice -> ID [ expression , expression ] .)
    PLUS_MAT        reduce using rule 37 (slice -> ID [ expression , expression ] .)
    MINUS_MAT       reduce using rule 37 (slice -> ID [ expression , expression ] .)
    TIMES_MAT       reduce using rule 37 (slice -> ID [ expression , expression ] .)
    DIVIDE_MAT      reduce using rule 37 (slice -> ID [ expression , expression ] .)
    TRANSPOSE       reduce using rule 37 (slice -> ID [ expression , expression ] .)
    EQ              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    NE              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    GT              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    GE              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    LT              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    LE              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    ,               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    ]               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    :               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    )               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    {               reduce using rule 37 (slice -> ID [ expression , expression ] .)
    ID              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    RETURN          reduce using rule 37 (slice -> ID [ expression , expression ] .)
    BREAK           reduce using rule 37 (slice -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 37 (slice -> ID [ expression , expression ] .)
    FOR             reduce using rule 37 (slice -> ID [ expression , expression ] .)
    WHILE           reduce using rule 37 (slice -> ID [ expression , expression ] .)
    IF              reduce using rule 37 (slice -> ID [ expression , expression ] .)
    PRINT           reduce using rule 37 (slice -> ID [ expression , expression ] .)


state 148

    (38) slice -> ID [ expression , range ] .

    ASSIGN          reduce using rule 38 (slice -> ID [ expression , range ] .)
    MINUS_ASSIGN    reduce using rule 38 (slice -> ID [ expression , range ] .)
    PLUS_ASSIGN     reduce using rule 38 (slice -> ID [ expression , range ] .)
    TIMES_ASSIGN    reduce using rule 38 (slice -> ID [ expression , range ] .)
    DIVIDE_ASSIGN   reduce using rule 38 (slice -> ID [ expression , range ] .)
    ;               reduce using rule 38 (slice -> ID [ expression , range ] .)
    PLUS            reduce using rule 38 (slice -> ID [ expression , range ] .)
    MINUS           reduce using rule 38 (slice -> ID [ expression , range ] .)
    TIMES           reduce using rule 38 (slice -> ID [ expression , range ] .)
    DIVIDE          reduce using rule 38 (slice -> ID [ expression , range ] .)
    PLUS_MAT        reduce using rule 38 (slice -> ID [ expression , range ] .)
    MINUS_MAT       reduce using rule 38 (slice -> ID [ expression , range ] .)
    TIMES_MAT       reduce using rule 38 (slice -> ID [ expression , range ] .)
    DIVIDE_MAT      reduce using rule 38 (slice -> ID [ expression , range ] .)
    TRANSPOSE       reduce using rule 38 (slice -> ID [ expression , range ] .)
    EQ              reduce using rule 38 (slice -> ID [ expression , range ] .)
    NE              reduce using rule 38 (slice -> ID [ expression , range ] .)
    GT              reduce using rule 38 (slice -> ID [ expression , range ] .)
    GE              reduce using rule 38 (slice -> ID [ expression , range ] .)
    LT              reduce using rule 38 (slice -> ID [ expression , range ] .)
    LE              reduce using rule 38 (slice -> ID [ expression , range ] .)
    ,               reduce using rule 38 (slice -> ID [ expression , range ] .)
    ]               reduce using rule 38 (slice -> ID [ expression , range ] .)
    :               reduce using rule 38 (slice -> ID [ expression , range ] .)
    )               reduce using rule 38 (slice -> ID [ expression , range ] .)
    {               reduce using rule 38 (slice -> ID [ expression , range ] .)
    ID              reduce using rule 38 (slice -> ID [ expression , range ] .)
    RETURN          reduce using rule 38 (slice -> ID [ expression , range ] .)
    BREAK           reduce using rule 38 (slice -> ID [ expression , range ] .)
    CONTINUE        reduce using rule 38 (slice -> ID [ expression , range ] .)
    FOR             reduce using rule 38 (slice -> ID [ expression , range ] .)
    WHILE           reduce using rule 38 (slice -> ID [ expression , range ] .)
    IF              reduce using rule 38 (slice -> ID [ expression , range ] .)
    PRINT           reduce using rule 38 (slice -> ID [ expression , range ] .)


state 149

    (40) slice -> ID [ range , range ] .

    ASSIGN          reduce using rule 40 (slice -> ID [ range , range ] .)
    MINUS_ASSIGN    reduce using rule 40 (slice -> ID [ range , range ] .)
    PLUS_ASSIGN     reduce using rule 40 (slice -> ID [ range , range ] .)
    TIMES_ASSIGN    reduce using rule 40 (slice -> ID [ range , range ] .)
    DIVIDE_ASSIGN   reduce using rule 40 (slice -> ID [ range , range ] .)
    ;               reduce using rule 40 (slice -> ID [ range , range ] .)
    PLUS            reduce using rule 40 (slice -> ID [ range , range ] .)
    MINUS           reduce using rule 40 (slice -> ID [ range , range ] .)
    TIMES           reduce using rule 40 (slice -> ID [ range , range ] .)
    DIVIDE          reduce using rule 40 (slice -> ID [ range , range ] .)
    PLUS_MAT        reduce using rule 40 (slice -> ID [ range , range ] .)
    MINUS_MAT       reduce using rule 40 (slice -> ID [ range , range ] .)
    TIMES_MAT       reduce using rule 40 (slice -> ID [ range , range ] .)
    DIVIDE_MAT      reduce using rule 40 (slice -> ID [ range , range ] .)
    TRANSPOSE       reduce using rule 40 (slice -> ID [ range , range ] .)
    EQ              reduce using rule 40 (slice -> ID [ range , range ] .)
    NE              reduce using rule 40 (slice -> ID [ range , range ] .)
    GT              reduce using rule 40 (slice -> ID [ range , range ] .)
    GE              reduce using rule 40 (slice -> ID [ range , range ] .)
    LT              reduce using rule 40 (slice -> ID [ range , range ] .)
    LE              reduce using rule 40 (slice -> ID [ range , range ] .)
    ,               reduce using rule 40 (slice -> ID [ range , range ] .)
    ]               reduce using rule 40 (slice -> ID [ range , range ] .)
    :               reduce using rule 40 (slice -> ID [ range , range ] .)
    )               reduce using rule 40 (slice -> ID [ range , range ] .)
    {               reduce using rule 40 (slice -> ID [ range , range ] .)
    ID              reduce using rule 40 (slice -> ID [ range , range ] .)
    RETURN          reduce using rule 40 (slice -> ID [ range , range ] .)
    BREAK           reduce using rule 40 (slice -> ID [ range , range ] .)
    CONTINUE        reduce using rule 40 (slice -> ID [ range , range ] .)
    FOR             reduce using rule 40 (slice -> ID [ range , range ] .)
    WHILE           reduce using rule 40 (slice -> ID [ range , range ] .)
    IF              reduce using rule 40 (slice -> ID [ range , range ] .)
    PRINT           reduce using rule 40 (slice -> ID [ range , range ] .)


state 150

    (39) slice -> ID [ range , expression ] .

    ASSIGN          reduce using rule 39 (slice -> ID [ range , expression ] .)
    MINUS_ASSIGN    reduce using rule 39 (slice -> ID [ range , expression ] .)
    PLUS_ASSIGN     reduce using rule 39 (slice -> ID [ range , expression ] .)
    TIMES_ASSIGN    reduce using rule 39 (slice -> ID [ range , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 39 (slice -> ID [ range , expression ] .)
    ;               reduce using rule 39 (slice -> ID [ range , expression ] .)
    PLUS            reduce using rule 39 (slice -> ID [ range , expression ] .)
    MINUS           reduce using rule 39 (slice -> ID [ range , expression ] .)
    TIMES           reduce using rule 39 (slice -> ID [ range , expression ] .)
    DIVIDE          reduce using rule 39 (slice -> ID [ range , expression ] .)
    PLUS_MAT        reduce using rule 39 (slice -> ID [ range , expression ] .)
    MINUS_MAT       reduce using rule 39 (slice -> ID [ range , expression ] .)
    TIMES_MAT       reduce using rule 39 (slice -> ID [ range , expression ] .)
    DIVIDE_MAT      reduce using rule 39 (slice -> ID [ range , expression ] .)
    TRANSPOSE       reduce using rule 39 (slice -> ID [ range , expression ] .)
    EQ              reduce using rule 39 (slice -> ID [ range , expression ] .)
    NE              reduce using rule 39 (slice -> ID [ range , expression ] .)
    GT              reduce using rule 39 (slice -> ID [ range , expression ] .)
    GE              reduce using rule 39 (slice -> ID [ range , expression ] .)
    LT              reduce using rule 39 (slice -> ID [ range , expression ] .)
    LE              reduce using rule 39 (slice -> ID [ range , expression ] .)
    ,               reduce using rule 39 (slice -> ID [ range , expression ] .)
    ]               reduce using rule 39 (slice -> ID [ range , expression ] .)
    :               reduce using rule 39 (slice -> ID [ range , expression ] .)
    )               reduce using rule 39 (slice -> ID [ range , expression ] .)
    {               reduce using rule 39 (slice -> ID [ range , expression ] .)
    ID              reduce using rule 39 (slice -> ID [ range , expression ] .)
    RETURN          reduce using rule 39 (slice -> ID [ range , expression ] .)
    BREAK           reduce using rule 39 (slice -> ID [ range , expression ] .)
    CONTINUE        reduce using rule 39 (slice -> ID [ range , expression ] .)
    FOR             reduce using rule 39 (slice -> ID [ range , expression ] .)
    WHILE           reduce using rule 39 (slice -> ID [ range , expression ] .)
    IF              reduce using rule 39 (slice -> ID [ range , expression ] .)
    PRINT           reduce using rule 39 (slice -> ID [ range , expression ] .)


state 151

    (63) statement -> IF ( expression ) statement else_block .

    ID              reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    RETURN          reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    BREAK           reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    CONTINUE        reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    FOR             reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    WHILE           reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    IF              reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    PRINT           reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    {               reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    $end            reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    }               reduce using rule 63 (statement -> IF ( expression ) statement else_block .)
    ELSE            reduce using rule 63 (statement -> IF ( expression ) statement else_block .)


state 152

    (65) else_block -> ELSE . statement
    (66) else_block -> ELSE . code_block
    (30) statement -> . ID ASSIGN expression ;
    (31) statement -> . ID MINUS_ASSIGN expression ;
    (32) statement -> . ID PLUS_ASSIGN expression ;
    (33) statement -> . ID TIMES_ASSIGN expression ;
    (34) statement -> . ID DIVIDE_ASSIGN expression ;
    (41) statement -> . slice ASSIGN expression ;
    (42) statement -> . slice MINUS_ASSIGN expression ;
    (43) statement -> . slice PLUS_ASSIGN expression ;
    (44) statement -> . slice TIMES_ASSIGN expression ;
    (45) statement -> . slice DIVIDE_ASSIGN expression ;
    (51) statement -> . RETURN ;
    (52) statement -> . RETURN expression ;
    (55) statement -> . BREAK ;
    (56) statement -> . CONTINUE ;
    (57) statement -> . FOR ID ASSIGN range code_block
    (58) statement -> . FOR ID ASSIGN range statement
    (59) statement -> . WHILE ( expression ) code_block
    (60) statement -> . WHILE ( expression ) statement
    (61) statement -> . IF ( expression ) statement
    (62) statement -> . IF ( expression ) code_block
    (63) statement -> . IF ( expression ) statement else_block
    (64) statement -> . IF ( expression ) code_block else_block
    (67) statement -> . PRINT inner_table ;
    (68) statement -> . PRINT expression ;
    (53) code_block -> . { statements_list }
    (54) code_block -> . { statement }
    (35) slice -> . ID [ expression ]
    (36) slice -> . ID [ range ]
    (37) slice -> . ID [ expression , expression ]
    (38) slice -> . ID [ expression , range ]
    (39) slice -> . ID [ range , expression ]
    (40) slice -> . ID [ range , range ]

    ID              shift and go to state 3
    RETURN          shift and go to state 5
    BREAK           shift and go to state 6
    CONTINUE        shift and go to state 7
    FOR             shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    {               shift and go to state 14

    statement                      shift and go to state 154
    code_block                     shift and go to state 155
    slice                          shift and go to state 4

state 153

    (64) statement -> IF ( expression ) code_block else_block .

    ID              reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    RETURN          reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    BREAK           reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    CONTINUE        reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    FOR             reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    WHILE           reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    IF              reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    PRINT           reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    {               reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    $end            reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    }               reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)
    ELSE            reduce using rule 64 (statement -> IF ( expression ) code_block else_block .)


state 154

    (65) else_block -> ELSE statement .

    ID              reduce using rule 65 (else_block -> ELSE statement .)
    RETURN          reduce using rule 65 (else_block -> ELSE statement .)
    BREAK           reduce using rule 65 (else_block -> ELSE statement .)
    CONTINUE        reduce using rule 65 (else_block -> ELSE statement .)
    FOR             reduce using rule 65 (else_block -> ELSE statement .)
    WHILE           reduce using rule 65 (else_block -> ELSE statement .)
    IF              reduce using rule 65 (else_block -> ELSE statement .)
    PRINT           reduce using rule 65 (else_block -> ELSE statement .)
    {               reduce using rule 65 (else_block -> ELSE statement .)
    $end            reduce using rule 65 (else_block -> ELSE statement .)
    }               reduce using rule 65 (else_block -> ELSE statement .)
    ELSE            reduce using rule 65 (else_block -> ELSE statement .)


state 155

    (66) else_block -> ELSE code_block .

    ID              reduce using rule 66 (else_block -> ELSE code_block .)
    RETURN          reduce using rule 66 (else_block -> ELSE code_block .)
    BREAK           reduce using rule 66 (else_block -> ELSE code_block .)
    CONTINUE        reduce using rule 66 (else_block -> ELSE code_block .)
    FOR             reduce using rule 66 (else_block -> ELSE code_block .)
    WHILE           reduce using rule 66 (else_block -> ELSE code_block .)
    IF              reduce using rule 66 (else_block -> ELSE code_block .)
    PRINT           reduce using rule 66 (else_block -> ELSE code_block .)
    {               reduce using rule 66 (else_block -> ELSE code_block .)
    $end            reduce using rule 66 (else_block -> ELSE code_block .)
    }               reduce using rule 66 (else_block -> ELSE code_block .)
    ELSE            reduce using rule 66 (else_block -> ELSE code_block .)

