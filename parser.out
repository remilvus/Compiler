Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements_list
Rule 2     program -> statement
Rule 3     program -> empty
Rule 4     empty -> <empty>
Rule 5     number -> INT
Rule 6     number -> FLOAT
Rule 7     expression -> ID
Rule 8     expression -> number
Rule 9     expression -> STRING
Rule 10    inner_table -> expression , expression
Rule 11    inner_table -> inner_table , expression
Rule 12    expression -> [ expression ]
Rule 13    expression -> [ inner_table ]
Rule 14    expression -> ZEROS ( expression )
Rule 15    expression -> EYE ( expression )
Rule 16    expression -> ONES ( expression )
Rule 17    range -> expression : expression
Rule 18    expression -> MINUS expression
Rule 19    expression -> expression PLUS expression
Rule 20    expression -> expression MINUS expression
Rule 21    expression -> expression TIMES expression
Rule 22    expression -> expression DIVIDE expression
Rule 23    expression -> expression PLUS_MAT expression
Rule 24    expression -> expression MINUS_MAT expression
Rule 25    expression -> expression TIMES_MAT expression
Rule 26    expression -> expression DIVIDE_MAT expression
Rule 27    expression -> expression TRANSPOSE
Rule 28    expression -> expression EQ expression
Rule 29    expression -> expression NE expression
Rule 30    expression -> expression GT expression
Rule 31    expression -> expression GE expression
Rule 32    expression -> expression LT expression
Rule 33    expression -> expression LE expression
Rule 34    statement -> ID ASSIGN expression ;
Rule 35    statement -> ID MINUS_ASSIGN expression ;
Rule 36    statement -> ID PLUS_ASSIGN expression ;
Rule 37    statement -> ID TIMES_ASSIGN expression ;
Rule 38    statement -> ID DIVIDE_ASSIGN expression ;
Rule 39    slice -> ID [ expression ]
Rule 40    slice -> ID [ range ]
Rule 41    slice -> ID [ expression , expression ]
Rule 42    slice -> ID [ expression , range ]
Rule 43    slice -> ID [ range , expression ]
Rule 44    slice -> ID [ range , range ]
Rule 45    statement -> slice ASSIGN expression ;
Rule 46    statement -> slice MINUS_ASSIGN expression ;
Rule 47    statement -> slice PLUS_ASSIGN expression ;
Rule 48    statement -> slice TIMES_ASSIGN expression ;
Rule 49    statement -> slice DIVIDE_ASSIGN expression ;
Rule 50    expression -> slice
Rule 51    statements_list -> statements_list statement
Rule 52    statements_list -> statements_list code_block
Rule 53    statements_list -> statement statement
Rule 54    statements_list -> statement code_block
Rule 55    statement -> RETURN ;
Rule 56    statement -> RETURN expression ;
Rule 57    code_block -> { statements_list }
Rule 58    code_block -> { statement }
Rule 59    statement -> BREAK ;
Rule 60    statement -> CONTINUE ;
Rule 61    statement -> FOR ID ASSIGN range code_block
Rule 62    statement -> FOR ID ASSIGN range statement
Rule 63    statement -> WHILE ( expression ) code_block
Rule 64    statement -> WHILE ( expression ) statement
Rule 65    statement -> IF ( expression ) statement
Rule 66    statement -> IF ( expression ) code_block
Rule 67    statement -> IF ( expression ) statement else_block
Rule 68    statement -> IF ( expression ) code_block else_block
Rule 69    else_block -> ELSE statement
Rule 70    else_block -> ELSE code_block
Rule 71    statement -> PRINT inner_table ;
Rule 72    statement -> PRINT expression ;

Terminals, with rules where they appear

(                    : 14 15 16 63 64 65 66 67 68
)                    : 14 15 16 63 64 65 66 67 68
,                    : 10 11 41 42 43 44
:                    : 17
;                    : 34 35 36 37 38 45 46 47 48 49 55 56 59 60 71 72
ASSIGN               : 34 45 61 62
BREAK                : 59
CONTINUE             : 60
DIVIDE               : 22
DIVIDE_ASSIGN        : 38 49
DIVIDE_MAT           : 26
ELSE                 : 69 70
EQ                   : 28
EYE                  : 15
FLOAT                : 6
FOR                  : 61 62
GE                   : 31
GT                   : 30
ID                   : 7 34 35 36 37 38 39 40 41 42 43 44 61 62
IF                   : 65 66 67 68
INT                  : 5
LE                   : 33
LT                   : 32
MINUS                : 18 20
MINUS_ASSIGN         : 35 46
MINUS_MAT            : 24
NE                   : 29
ONES                 : 16
PLUS                 : 19
PLUS_ASSIGN          : 36 47
PLUS_MAT             : 23
PRINT                : 71 72
RETURN               : 55 56
STRING               : 9
TIMES                : 21
TIMES_ASSIGN         : 37 48
TIMES_MAT            : 25
TRANSPOSE            : 27
WHILE                : 63 64
ZEROS                : 14
[                    : 12 13 39 40 41 42 43 44
]                    : 12 13 39 40 41 42 43 44
error                : 
{                    : 57 58
}                    : 57 58

Nonterminals, with rules where they appear

code_block           : 52 54 61 63 66 68 70
else_block           : 67 68
empty                : 3
expression           : 10 10 11 12 14 15 16 17 17 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 26 26 27 28 28 29 29 30 30 31 31 32 32 33 33 34 35 36 37 38 39 41 41 42 43 45 46 47 48 49 56 63 64 65 66 67 68 72
inner_table          : 11 13 71
number               : 8
program              : 0
range                : 40 42 43 44 44 61 62
slice                : 45 46 47 48 49 50
statement            : 2 51 53 53 54 58 62 64 65 67 69
statements_list      : 1 51 52 57

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements_list
    (2) program -> . statement
    (3) program -> . empty
    (51) statements_list -> . statements_list statement
    (52) statements_list -> . statements_list code_block
    (53) statements_list -> . statement statement
    (54) statements_list -> . statement code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (4) empty -> .
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    $end            reduce using rule 4 (empty -> .)

    program                        shift and go to state 1
    statements_list                shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    slice                          shift and go to state 6

state 1

    (0) S' -> program .



state 2

    (1) program -> statements_list .
    (51) statements_list -> statements_list . statement
    (52) statements_list -> statements_list . code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    $end            reduce using rule 1 (program -> statements_list .)
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 14
    code_block                     shift and go to state 15
    slice                          shift and go to state 6

state 3

    (2) program -> statement .
    (53) statements_list -> statement . statement
    (54) statements_list -> statement . code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    $end            reduce using rule 2 (program -> statement .)
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 17
    code_block                     shift and go to state 18
    slice                          shift and go to state 6

state 4

    (3) program -> empty .

    $end            reduce using rule 3 (program -> empty .)


state 5

    (34) statement -> ID . ASSIGN expression ;
    (35) statement -> ID . MINUS_ASSIGN expression ;
    (36) statement -> ID . PLUS_ASSIGN expression ;
    (37) statement -> ID . TIMES_ASSIGN expression ;
    (38) statement -> ID . DIVIDE_ASSIGN expression ;
    (39) slice -> ID . [ expression ]
    (40) slice -> ID . [ range ]
    (41) slice -> ID . [ expression , expression ]
    (42) slice -> ID . [ expression , range ]
    (43) slice -> ID . [ range , expression ]
    (44) slice -> ID . [ range , range ]

    ASSIGN          shift and go to state 19
    MINUS_ASSIGN    shift and go to state 20
    PLUS_ASSIGN     shift and go to state 21
    TIMES_ASSIGN    shift and go to state 22
    DIVIDE_ASSIGN   shift and go to state 23
    [               shift and go to state 24


state 6

    (45) statement -> slice . ASSIGN expression ;
    (46) statement -> slice . MINUS_ASSIGN expression ;
    (47) statement -> slice . PLUS_ASSIGN expression ;
    (48) statement -> slice . TIMES_ASSIGN expression ;
    (49) statement -> slice . DIVIDE_ASSIGN expression ;

    ASSIGN          shift and go to state 25
    MINUS_ASSIGN    shift and go to state 26
    PLUS_ASSIGN     shift and go to state 27
    TIMES_ASSIGN    shift and go to state 28
    DIVIDE_ASSIGN   shift and go to state 29


state 7

    (55) statement -> RETURN . ;
    (56) statement -> RETURN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ;               shift and go to state 30
    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 31
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 8

    (59) statement -> BREAK . ;

    ;               shift and go to state 43


state 9

    (60) statement -> CONTINUE . ;

    ;               shift and go to state 44


state 10

    (61) statement -> FOR . ID ASSIGN range code_block
    (62) statement -> FOR . ID ASSIGN range statement

    ID              shift and go to state 45


state 11

    (63) statement -> WHILE . ( expression ) code_block
    (64) statement -> WHILE . ( expression ) statement

    (               shift and go to state 46


state 12

    (65) statement -> IF . ( expression ) statement
    (66) statement -> IF . ( expression ) code_block
    (67) statement -> IF . ( expression ) statement else_block
    (68) statement -> IF . ( expression ) code_block else_block

    (               shift and go to state 47


state 13

    (71) statement -> PRINT . inner_table ;
    (72) statement -> PRINT . expression ;
    (10) inner_table -> . expression , expression
    (11) inner_table -> . inner_table , expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    inner_table                    shift and go to state 48
    expression                     shift and go to state 49
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 14

    (51) statements_list -> statements_list statement .

    ID              reduce using rule 51 (statements_list -> statements_list statement .)
    RETURN          reduce using rule 51 (statements_list -> statements_list statement .)
    BREAK           reduce using rule 51 (statements_list -> statements_list statement .)
    CONTINUE        reduce using rule 51 (statements_list -> statements_list statement .)
    FOR             reduce using rule 51 (statements_list -> statements_list statement .)
    WHILE           reduce using rule 51 (statements_list -> statements_list statement .)
    IF              reduce using rule 51 (statements_list -> statements_list statement .)
    PRINT           reduce using rule 51 (statements_list -> statements_list statement .)
    {               reduce using rule 51 (statements_list -> statements_list statement .)
    $end            reduce using rule 51 (statements_list -> statements_list statement .)
    }               reduce using rule 51 (statements_list -> statements_list statement .)


state 15

    (52) statements_list -> statements_list code_block .

    ID              reduce using rule 52 (statements_list -> statements_list code_block .)
    RETURN          reduce using rule 52 (statements_list -> statements_list code_block .)
    BREAK           reduce using rule 52 (statements_list -> statements_list code_block .)
    CONTINUE        reduce using rule 52 (statements_list -> statements_list code_block .)
    FOR             reduce using rule 52 (statements_list -> statements_list code_block .)
    WHILE           reduce using rule 52 (statements_list -> statements_list code_block .)
    IF              reduce using rule 52 (statements_list -> statements_list code_block .)
    PRINT           reduce using rule 52 (statements_list -> statements_list code_block .)
    {               reduce using rule 52 (statements_list -> statements_list code_block .)
    $end            reduce using rule 52 (statements_list -> statements_list code_block .)
    }               reduce using rule 52 (statements_list -> statements_list code_block .)


state 16

    (57) code_block -> { . statements_list }
    (58) code_block -> { . statement }
    (51) statements_list -> . statements_list statement
    (52) statements_list -> . statements_list code_block
    (53) statements_list -> . statement statement
    (54) statements_list -> . statement code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    statements_list                shift and go to state 50
    statement                      shift and go to state 51
    slice                          shift and go to state 6

state 17

    (53) statements_list -> statement statement .

    ID              reduce using rule 53 (statements_list -> statement statement .)
    RETURN          reduce using rule 53 (statements_list -> statement statement .)
    BREAK           reduce using rule 53 (statements_list -> statement statement .)
    CONTINUE        reduce using rule 53 (statements_list -> statement statement .)
    FOR             reduce using rule 53 (statements_list -> statement statement .)
    WHILE           reduce using rule 53 (statements_list -> statement statement .)
    IF              reduce using rule 53 (statements_list -> statement statement .)
    PRINT           reduce using rule 53 (statements_list -> statement statement .)
    {               reduce using rule 53 (statements_list -> statement statement .)
    $end            reduce using rule 53 (statements_list -> statement statement .)
    }               reduce using rule 53 (statements_list -> statement statement .)


state 18

    (54) statements_list -> statement code_block .

    ID              reduce using rule 54 (statements_list -> statement code_block .)
    RETURN          reduce using rule 54 (statements_list -> statement code_block .)
    BREAK           reduce using rule 54 (statements_list -> statement code_block .)
    CONTINUE        reduce using rule 54 (statements_list -> statement code_block .)
    FOR             reduce using rule 54 (statements_list -> statement code_block .)
    WHILE           reduce using rule 54 (statements_list -> statement code_block .)
    IF              reduce using rule 54 (statements_list -> statement code_block .)
    PRINT           reduce using rule 54 (statements_list -> statement code_block .)
    {               reduce using rule 54 (statements_list -> statement code_block .)
    $end            reduce using rule 54 (statements_list -> statement code_block .)
    }               reduce using rule 54 (statements_list -> statement code_block .)


state 19

    (34) statement -> ID ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 52
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 20

    (35) statement -> ID MINUS_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 53
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 21

    (36) statement -> ID PLUS_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 54
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 22

    (37) statement -> ID TIMES_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 55
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 23

    (38) statement -> ID DIVIDE_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 56
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 24

    (39) slice -> ID [ . expression ]
    (40) slice -> ID [ . range ]
    (41) slice -> ID [ . expression , expression ]
    (42) slice -> ID [ . expression , range ]
    (43) slice -> ID [ . range , expression ]
    (44) slice -> ID [ . range , range ]
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (17) range -> . expression : expression
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 57
    range                          shift and go to state 58
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 25

    (45) statement -> slice ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    slice                          shift and go to state 40
    expression                     shift and go to state 59
    number                         shift and go to state 33

state 26

    (46) statement -> slice MINUS_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    slice                          shift and go to state 40
    expression                     shift and go to state 60
    number                         shift and go to state 33

state 27

    (47) statement -> slice PLUS_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    slice                          shift and go to state 40
    expression                     shift and go to state 61
    number                         shift and go to state 33

state 28

    (48) statement -> slice TIMES_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    slice                          shift and go to state 40
    expression                     shift and go to state 62
    number                         shift and go to state 33

state 29

    (49) statement -> slice DIVIDE_ASSIGN . expression ;
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    slice                          shift and go to state 40
    expression                     shift and go to state 63
    number                         shift and go to state 33

state 30

    (55) statement -> RETURN ; .

    ID              reduce using rule 55 (statement -> RETURN ; .)
    RETURN          reduce using rule 55 (statement -> RETURN ; .)
    BREAK           reduce using rule 55 (statement -> RETURN ; .)
    CONTINUE        reduce using rule 55 (statement -> RETURN ; .)
    FOR             reduce using rule 55 (statement -> RETURN ; .)
    WHILE           reduce using rule 55 (statement -> RETURN ; .)
    IF              reduce using rule 55 (statement -> RETURN ; .)
    PRINT           reduce using rule 55 (statement -> RETURN ; .)
    {               reduce using rule 55 (statement -> RETURN ; .)
    $end            reduce using rule 55 (statement -> RETURN ; .)
    }               reduce using rule 55 (statement -> RETURN ; .)
    ELSE            reduce using rule 55 (statement -> RETURN ; .)


state 31

    (56) statement -> RETURN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 64
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 32

    (7) expression -> ID .
    (39) slice -> ID . [ expression ]
    (40) slice -> ID . [ range ]
    (41) slice -> ID . [ expression , expression ]
    (42) slice -> ID . [ expression , range ]
    (43) slice -> ID . [ range , expression ]
    (44) slice -> ID . [ range , range ]

    ;               reduce using rule 7 (expression -> ID .)
    PLUS            reduce using rule 7 (expression -> ID .)
    MINUS           reduce using rule 7 (expression -> ID .)
    TIMES           reduce using rule 7 (expression -> ID .)
    DIVIDE          reduce using rule 7 (expression -> ID .)
    PLUS_MAT        reduce using rule 7 (expression -> ID .)
    MINUS_MAT       reduce using rule 7 (expression -> ID .)
    TIMES_MAT       reduce using rule 7 (expression -> ID .)
    DIVIDE_MAT      reduce using rule 7 (expression -> ID .)
    TRANSPOSE       reduce using rule 7 (expression -> ID .)
    EQ              reduce using rule 7 (expression -> ID .)
    NE              reduce using rule 7 (expression -> ID .)
    GT              reduce using rule 7 (expression -> ID .)
    GE              reduce using rule 7 (expression -> ID .)
    LT              reduce using rule 7 (expression -> ID .)
    LE              reduce using rule 7 (expression -> ID .)
    ,               reduce using rule 7 (expression -> ID .)
    ]               reduce using rule 7 (expression -> ID .)
    :               reduce using rule 7 (expression -> ID .)
    )               reduce using rule 7 (expression -> ID .)
    {               reduce using rule 7 (expression -> ID .)
    ID              reduce using rule 7 (expression -> ID .)
    RETURN          reduce using rule 7 (expression -> ID .)
    BREAK           reduce using rule 7 (expression -> ID .)
    CONTINUE        reduce using rule 7 (expression -> ID .)
    FOR             reduce using rule 7 (expression -> ID .)
    WHILE           reduce using rule 7 (expression -> ID .)
    IF              reduce using rule 7 (expression -> ID .)
    PRINT           reduce using rule 7 (expression -> ID .)
    [               shift and go to state 24


state 33

    (8) expression -> number .

    ;               reduce using rule 8 (expression -> number .)
    PLUS            reduce using rule 8 (expression -> number .)
    MINUS           reduce using rule 8 (expression -> number .)
    TIMES           reduce using rule 8 (expression -> number .)
    DIVIDE          reduce using rule 8 (expression -> number .)
    PLUS_MAT        reduce using rule 8 (expression -> number .)
    MINUS_MAT       reduce using rule 8 (expression -> number .)
    TIMES_MAT       reduce using rule 8 (expression -> number .)
    DIVIDE_MAT      reduce using rule 8 (expression -> number .)
    TRANSPOSE       reduce using rule 8 (expression -> number .)
    EQ              reduce using rule 8 (expression -> number .)
    NE              reduce using rule 8 (expression -> number .)
    GT              reduce using rule 8 (expression -> number .)
    GE              reduce using rule 8 (expression -> number .)
    LT              reduce using rule 8 (expression -> number .)
    LE              reduce using rule 8 (expression -> number .)
    ,               reduce using rule 8 (expression -> number .)
    ]               reduce using rule 8 (expression -> number .)
    :               reduce using rule 8 (expression -> number .)
    )               reduce using rule 8 (expression -> number .)
    {               reduce using rule 8 (expression -> number .)
    ID              reduce using rule 8 (expression -> number .)
    RETURN          reduce using rule 8 (expression -> number .)
    BREAK           reduce using rule 8 (expression -> number .)
    CONTINUE        reduce using rule 8 (expression -> number .)
    FOR             reduce using rule 8 (expression -> number .)
    WHILE           reduce using rule 8 (expression -> number .)
    IF              reduce using rule 8 (expression -> number .)
    PRINT           reduce using rule 8 (expression -> number .)


state 34

    (9) expression -> STRING .

    ;               reduce using rule 9 (expression -> STRING .)
    PLUS            reduce using rule 9 (expression -> STRING .)
    MINUS           reduce using rule 9 (expression -> STRING .)
    TIMES           reduce using rule 9 (expression -> STRING .)
    DIVIDE          reduce using rule 9 (expression -> STRING .)
    PLUS_MAT        reduce using rule 9 (expression -> STRING .)
    MINUS_MAT       reduce using rule 9 (expression -> STRING .)
    TIMES_MAT       reduce using rule 9 (expression -> STRING .)
    DIVIDE_MAT      reduce using rule 9 (expression -> STRING .)
    TRANSPOSE       reduce using rule 9 (expression -> STRING .)
    EQ              reduce using rule 9 (expression -> STRING .)
    NE              reduce using rule 9 (expression -> STRING .)
    GT              reduce using rule 9 (expression -> STRING .)
    GE              reduce using rule 9 (expression -> STRING .)
    LT              reduce using rule 9 (expression -> STRING .)
    LE              reduce using rule 9 (expression -> STRING .)
    ,               reduce using rule 9 (expression -> STRING .)
    ]               reduce using rule 9 (expression -> STRING .)
    :               reduce using rule 9 (expression -> STRING .)
    )               reduce using rule 9 (expression -> STRING .)
    {               reduce using rule 9 (expression -> STRING .)
    ID              reduce using rule 9 (expression -> STRING .)
    RETURN          reduce using rule 9 (expression -> STRING .)
    BREAK           reduce using rule 9 (expression -> STRING .)
    CONTINUE        reduce using rule 9 (expression -> STRING .)
    FOR             reduce using rule 9 (expression -> STRING .)
    WHILE           reduce using rule 9 (expression -> STRING .)
    IF              reduce using rule 9 (expression -> STRING .)
    PRINT           reduce using rule 9 (expression -> STRING .)


state 35

    (12) expression -> [ . expression ]
    (13) expression -> [ . inner_table ]
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (10) inner_table -> . expression , expression
    (11) inner_table -> . inner_table , expression
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 80
    inner_table                    shift and go to state 81
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 36

    (14) expression -> ZEROS . ( expression )

    (               shift and go to state 82


state 37

    (15) expression -> EYE . ( expression )

    (               shift and go to state 83


state 38

    (16) expression -> ONES . ( expression )

    (               shift and go to state 84


state 39

    (18) expression -> MINUS . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 85
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 40

    (50) expression -> slice .

    ;               reduce using rule 50 (expression -> slice .)
    PLUS            reduce using rule 50 (expression -> slice .)
    MINUS           reduce using rule 50 (expression -> slice .)
    TIMES           reduce using rule 50 (expression -> slice .)
    DIVIDE          reduce using rule 50 (expression -> slice .)
    PLUS_MAT        reduce using rule 50 (expression -> slice .)
    MINUS_MAT       reduce using rule 50 (expression -> slice .)
    TIMES_MAT       reduce using rule 50 (expression -> slice .)
    DIVIDE_MAT      reduce using rule 50 (expression -> slice .)
    TRANSPOSE       reduce using rule 50 (expression -> slice .)
    EQ              reduce using rule 50 (expression -> slice .)
    NE              reduce using rule 50 (expression -> slice .)
    GT              reduce using rule 50 (expression -> slice .)
    GE              reduce using rule 50 (expression -> slice .)
    LT              reduce using rule 50 (expression -> slice .)
    LE              reduce using rule 50 (expression -> slice .)
    ,               reduce using rule 50 (expression -> slice .)
    ]               reduce using rule 50 (expression -> slice .)
    :               reduce using rule 50 (expression -> slice .)
    )               reduce using rule 50 (expression -> slice .)
    {               reduce using rule 50 (expression -> slice .)
    ID              reduce using rule 50 (expression -> slice .)
    RETURN          reduce using rule 50 (expression -> slice .)
    BREAK           reduce using rule 50 (expression -> slice .)
    CONTINUE        reduce using rule 50 (expression -> slice .)
    FOR             reduce using rule 50 (expression -> slice .)
    WHILE           reduce using rule 50 (expression -> slice .)
    IF              reduce using rule 50 (expression -> slice .)
    PRINT           reduce using rule 50 (expression -> slice .)


state 41

    (5) number -> INT .

    ;               reduce using rule 5 (number -> INT .)
    PLUS            reduce using rule 5 (number -> INT .)
    MINUS           reduce using rule 5 (number -> INT .)
    TIMES           reduce using rule 5 (number -> INT .)
    DIVIDE          reduce using rule 5 (number -> INT .)
    PLUS_MAT        reduce using rule 5 (number -> INT .)
    MINUS_MAT       reduce using rule 5 (number -> INT .)
    TIMES_MAT       reduce using rule 5 (number -> INT .)
    DIVIDE_MAT      reduce using rule 5 (number -> INT .)
    TRANSPOSE       reduce using rule 5 (number -> INT .)
    EQ              reduce using rule 5 (number -> INT .)
    NE              reduce using rule 5 (number -> INT .)
    GT              reduce using rule 5 (number -> INT .)
    GE              reduce using rule 5 (number -> INT .)
    LT              reduce using rule 5 (number -> INT .)
    LE              reduce using rule 5 (number -> INT .)
    ,               reduce using rule 5 (number -> INT .)
    ]               reduce using rule 5 (number -> INT .)
    :               reduce using rule 5 (number -> INT .)
    )               reduce using rule 5 (number -> INT .)
    {               reduce using rule 5 (number -> INT .)
    ID              reduce using rule 5 (number -> INT .)
    RETURN          reduce using rule 5 (number -> INT .)
    BREAK           reduce using rule 5 (number -> INT .)
    CONTINUE        reduce using rule 5 (number -> INT .)
    FOR             reduce using rule 5 (number -> INT .)
    WHILE           reduce using rule 5 (number -> INT .)
    IF              reduce using rule 5 (number -> INT .)
    PRINT           reduce using rule 5 (number -> INT .)


state 42

    (6) number -> FLOAT .

    ;               reduce using rule 6 (number -> FLOAT .)
    PLUS            reduce using rule 6 (number -> FLOAT .)
    MINUS           reduce using rule 6 (number -> FLOAT .)
    TIMES           reduce using rule 6 (number -> FLOAT .)
    DIVIDE          reduce using rule 6 (number -> FLOAT .)
    PLUS_MAT        reduce using rule 6 (number -> FLOAT .)
    MINUS_MAT       reduce using rule 6 (number -> FLOAT .)
    TIMES_MAT       reduce using rule 6 (number -> FLOAT .)
    DIVIDE_MAT      reduce using rule 6 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 6 (number -> FLOAT .)
    EQ              reduce using rule 6 (number -> FLOAT .)
    NE              reduce using rule 6 (number -> FLOAT .)
    GT              reduce using rule 6 (number -> FLOAT .)
    GE              reduce using rule 6 (number -> FLOAT .)
    LT              reduce using rule 6 (number -> FLOAT .)
    LE              reduce using rule 6 (number -> FLOAT .)
    ,               reduce using rule 6 (number -> FLOAT .)
    ]               reduce using rule 6 (number -> FLOAT .)
    :               reduce using rule 6 (number -> FLOAT .)
    )               reduce using rule 6 (number -> FLOAT .)
    {               reduce using rule 6 (number -> FLOAT .)
    ID              reduce using rule 6 (number -> FLOAT .)
    RETURN          reduce using rule 6 (number -> FLOAT .)
    BREAK           reduce using rule 6 (number -> FLOAT .)
    CONTINUE        reduce using rule 6 (number -> FLOAT .)
    FOR             reduce using rule 6 (number -> FLOAT .)
    WHILE           reduce using rule 6 (number -> FLOAT .)
    IF              reduce using rule 6 (number -> FLOAT .)
    PRINT           reduce using rule 6 (number -> FLOAT .)


state 43

    (59) statement -> BREAK ; .

    ID              reduce using rule 59 (statement -> BREAK ; .)
    RETURN          reduce using rule 59 (statement -> BREAK ; .)
    BREAK           reduce using rule 59 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 59 (statement -> BREAK ; .)
    FOR             reduce using rule 59 (statement -> BREAK ; .)
    WHILE           reduce using rule 59 (statement -> BREAK ; .)
    IF              reduce using rule 59 (statement -> BREAK ; .)
    PRINT           reduce using rule 59 (statement -> BREAK ; .)
    {               reduce using rule 59 (statement -> BREAK ; .)
    $end            reduce using rule 59 (statement -> BREAK ; .)
    }               reduce using rule 59 (statement -> BREAK ; .)
    ELSE            reduce using rule 59 (statement -> BREAK ; .)


state 44

    (60) statement -> CONTINUE ; .

    ID              reduce using rule 60 (statement -> CONTINUE ; .)
    RETURN          reduce using rule 60 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 60 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 60 (statement -> CONTINUE ; .)
    FOR             reduce using rule 60 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 60 (statement -> CONTINUE ; .)
    IF              reduce using rule 60 (statement -> CONTINUE ; .)
    PRINT           reduce using rule 60 (statement -> CONTINUE ; .)
    {               reduce using rule 60 (statement -> CONTINUE ; .)
    $end            reduce using rule 60 (statement -> CONTINUE ; .)
    }               reduce using rule 60 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 60 (statement -> CONTINUE ; .)


state 45

    (61) statement -> FOR ID . ASSIGN range code_block
    (62) statement -> FOR ID . ASSIGN range statement

    ASSIGN          shift and go to state 86


state 46

    (63) statement -> WHILE ( . expression ) code_block
    (64) statement -> WHILE ( . expression ) statement
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 87
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 47

    (65) statement -> IF ( . expression ) statement
    (66) statement -> IF ( . expression ) code_block
    (67) statement -> IF ( . expression ) statement else_block
    (68) statement -> IF ( . expression ) code_block else_block
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 88
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 48

    (71) statement -> PRINT inner_table . ;
    (11) inner_table -> inner_table . , expression

    ;               shift and go to state 89
    ,               shift and go to state 90


state 49

    (72) statement -> PRINT expression . ;
    (10) inner_table -> expression . , expression
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 91
    ,               shift and go to state 92
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 50

    (57) code_block -> { statements_list . }
    (51) statements_list -> statements_list . statement
    (52) statements_list -> statements_list . code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    }               shift and go to state 93
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 14
    code_block                     shift and go to state 15
    slice                          shift and go to state 6

state 51

    (58) code_block -> { statement . }
    (53) statements_list -> statement . statement
    (54) statements_list -> statement . code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    }               shift and go to state 94
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 17
    code_block                     shift and go to state 18
    slice                          shift and go to state 6

state 52

    (34) statement -> ID ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 95
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 53

    (35) statement -> ID MINUS_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 96
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 54

    (36) statement -> ID PLUS_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 97
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 55

    (37) statement -> ID TIMES_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 98
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 56

    (38) statement -> ID DIVIDE_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 99
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 57

    (39) slice -> ID [ expression . ]
    (41) slice -> ID [ expression . , expression ]
    (42) slice -> ID [ expression . , range ]
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (17) range -> expression . : expression

    ]               shift and go to state 100
    ,               shift and go to state 101
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    :               shift and go to state 102


state 58

    (40) slice -> ID [ range . ]
    (43) slice -> ID [ range . , expression ]
    (44) slice -> ID [ range . , range ]

    ]               shift and go to state 103
    ,               shift and go to state 104


state 59

    (45) statement -> slice ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 105
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 60

    (46) statement -> slice MINUS_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 106
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 61

    (47) statement -> slice PLUS_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 107
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 62

    (48) statement -> slice TIMES_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 108
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 63

    (49) statement -> slice DIVIDE_ASSIGN expression . ;
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               shift and go to state 109
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 64

    (56) statement -> RETURN expression ; .

    ID              reduce using rule 56 (statement -> RETURN expression ; .)
    RETURN          reduce using rule 56 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 56 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 56 (statement -> RETURN expression ; .)
    FOR             reduce using rule 56 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 56 (statement -> RETURN expression ; .)
    IF              reduce using rule 56 (statement -> RETURN expression ; .)
    PRINT           reduce using rule 56 (statement -> RETURN expression ; .)
    {               reduce using rule 56 (statement -> RETURN expression ; .)
    $end            reduce using rule 56 (statement -> RETURN expression ; .)
    }               reduce using rule 56 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 56 (statement -> RETURN expression ; .)


state 65

    (19) expression -> expression PLUS . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 110
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 66

    (20) expression -> expression MINUS . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 111
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 67

    (21) expression -> expression TIMES . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 112
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 68

    (22) expression -> expression DIVIDE . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 113
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 69

    (23) expression -> expression PLUS_MAT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 114
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 70

    (24) expression -> expression MINUS_MAT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 115
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 71

    (25) expression -> expression TIMES_MAT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 116
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 72

    (26) expression -> expression DIVIDE_MAT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 117
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 73

    (27) expression -> expression TRANSPOSE .

    ;               reduce using rule 27 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 27 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 27 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 27 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 27 (expression -> expression TRANSPOSE .)
    PLUS_MAT        reduce using rule 27 (expression -> expression TRANSPOSE .)
    MINUS_MAT       reduce using rule 27 (expression -> expression TRANSPOSE .)
    TIMES_MAT       reduce using rule 27 (expression -> expression TRANSPOSE .)
    DIVIDE_MAT      reduce using rule 27 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 27 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 27 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 27 (expression -> expression TRANSPOSE .)
    GT              reduce using rule 27 (expression -> expression TRANSPOSE .)
    GE              reduce using rule 27 (expression -> expression TRANSPOSE .)
    LT              reduce using rule 27 (expression -> expression TRANSPOSE .)
    LE              reduce using rule 27 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 27 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 27 (expression -> expression TRANSPOSE .)
    :               reduce using rule 27 (expression -> expression TRANSPOSE .)
    )               reduce using rule 27 (expression -> expression TRANSPOSE .)
    {               reduce using rule 27 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 27 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 27 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 27 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 27 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 27 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 27 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 27 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 27 (expression -> expression TRANSPOSE .)


state 74

    (28) expression -> expression EQ . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 118
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 75

    (29) expression -> expression NE . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 119
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 76

    (30) expression -> expression GT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 120
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 77

    (31) expression -> expression GE . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 121
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 78

    (32) expression -> expression LT . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 122
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 79

    (33) expression -> expression LE . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 123
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 80

    (12) expression -> [ expression . ]
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (10) inner_table -> expression . , expression

    ]               shift and go to state 124
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    ,               shift and go to state 92


state 81

    (13) expression -> [ inner_table . ]
    (11) inner_table -> inner_table . , expression

    ]               shift and go to state 125
    ,               shift and go to state 90


state 82

    (14) expression -> ZEROS ( . expression )
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 126
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 83

    (15) expression -> EYE ( . expression )
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 127
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 84

    (16) expression -> ONES ( . expression )
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 128
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 85

    (18) expression -> MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 18 (expression -> MINUS expression .)
    PLUS            reduce using rule 18 (expression -> MINUS expression .)
    MINUS           reduce using rule 18 (expression -> MINUS expression .)
    TRANSPOSE       reduce using rule 18 (expression -> MINUS expression .)
    EQ              reduce using rule 18 (expression -> MINUS expression .)
    NE              reduce using rule 18 (expression -> MINUS expression .)
    GT              reduce using rule 18 (expression -> MINUS expression .)
    GE              reduce using rule 18 (expression -> MINUS expression .)
    LT              reduce using rule 18 (expression -> MINUS expression .)
    LE              reduce using rule 18 (expression -> MINUS expression .)
    ,               reduce using rule 18 (expression -> MINUS expression .)
    ]               reduce using rule 18 (expression -> MINUS expression .)
    :               reduce using rule 18 (expression -> MINUS expression .)
    )               reduce using rule 18 (expression -> MINUS expression .)
    {               reduce using rule 18 (expression -> MINUS expression .)
    ID              reduce using rule 18 (expression -> MINUS expression .)
    RETURN          reduce using rule 18 (expression -> MINUS expression .)
    BREAK           reduce using rule 18 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 18 (expression -> MINUS expression .)
    FOR             reduce using rule 18 (expression -> MINUS expression .)
    WHILE           reduce using rule 18 (expression -> MINUS expression .)
    IF              reduce using rule 18 (expression -> MINUS expression .)
    PRINT           reduce using rule 18 (expression -> MINUS expression .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! TIMES           [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 18 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 86

    (61) statement -> FOR ID ASSIGN . range code_block
    (62) statement -> FOR ID ASSIGN . range statement
    (17) range -> . expression : expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    range                          shift and go to state 129
    expression                     shift and go to state 130
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 87

    (63) statement -> WHILE ( expression . ) code_block
    (64) statement -> WHILE ( expression . ) statement
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    )               shift and go to state 131
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 88

    (65) statement -> IF ( expression . ) statement
    (66) statement -> IF ( expression . ) code_block
    (67) statement -> IF ( expression . ) statement else_block
    (68) statement -> IF ( expression . ) code_block else_block
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    )               shift and go to state 132
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 89

    (71) statement -> PRINT inner_table ; .

    ID              reduce using rule 71 (statement -> PRINT inner_table ; .)
    RETURN          reduce using rule 71 (statement -> PRINT inner_table ; .)
    BREAK           reduce using rule 71 (statement -> PRINT inner_table ; .)
    CONTINUE        reduce using rule 71 (statement -> PRINT inner_table ; .)
    FOR             reduce using rule 71 (statement -> PRINT inner_table ; .)
    WHILE           reduce using rule 71 (statement -> PRINT inner_table ; .)
    IF              reduce using rule 71 (statement -> PRINT inner_table ; .)
    PRINT           reduce using rule 71 (statement -> PRINT inner_table ; .)
    {               reduce using rule 71 (statement -> PRINT inner_table ; .)
    $end            reduce using rule 71 (statement -> PRINT inner_table ; .)
    }               reduce using rule 71 (statement -> PRINT inner_table ; .)
    ELSE            reduce using rule 71 (statement -> PRINT inner_table ; .)


state 90

    (11) inner_table -> inner_table , . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 133
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 91

    (72) statement -> PRINT expression ; .

    ID              reduce using rule 72 (statement -> PRINT expression ; .)
    RETURN          reduce using rule 72 (statement -> PRINT expression ; .)
    BREAK           reduce using rule 72 (statement -> PRINT expression ; .)
    CONTINUE        reduce using rule 72 (statement -> PRINT expression ; .)
    FOR             reduce using rule 72 (statement -> PRINT expression ; .)
    WHILE           reduce using rule 72 (statement -> PRINT expression ; .)
    IF              reduce using rule 72 (statement -> PRINT expression ; .)
    PRINT           reduce using rule 72 (statement -> PRINT expression ; .)
    {               reduce using rule 72 (statement -> PRINT expression ; .)
    $end            reduce using rule 72 (statement -> PRINT expression ; .)
    }               reduce using rule 72 (statement -> PRINT expression ; .)
    ELSE            reduce using rule 72 (statement -> PRINT expression ; .)


state 92

    (10) inner_table -> expression , . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 134
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 93

    (57) code_block -> { statements_list } .

    ID              reduce using rule 57 (code_block -> { statements_list } .)
    RETURN          reduce using rule 57 (code_block -> { statements_list } .)
    BREAK           reduce using rule 57 (code_block -> { statements_list } .)
    CONTINUE        reduce using rule 57 (code_block -> { statements_list } .)
    FOR             reduce using rule 57 (code_block -> { statements_list } .)
    WHILE           reduce using rule 57 (code_block -> { statements_list } .)
    IF              reduce using rule 57 (code_block -> { statements_list } .)
    PRINT           reduce using rule 57 (code_block -> { statements_list } .)
    {               reduce using rule 57 (code_block -> { statements_list } .)
    $end            reduce using rule 57 (code_block -> { statements_list } .)
    }               reduce using rule 57 (code_block -> { statements_list } .)
    ELSE            reduce using rule 57 (code_block -> { statements_list } .)


state 94

    (58) code_block -> { statement } .

    ID              reduce using rule 58 (code_block -> { statement } .)
    RETURN          reduce using rule 58 (code_block -> { statement } .)
    BREAK           reduce using rule 58 (code_block -> { statement } .)
    CONTINUE        reduce using rule 58 (code_block -> { statement } .)
    FOR             reduce using rule 58 (code_block -> { statement } .)
    WHILE           reduce using rule 58 (code_block -> { statement } .)
    IF              reduce using rule 58 (code_block -> { statement } .)
    PRINT           reduce using rule 58 (code_block -> { statement } .)
    {               reduce using rule 58 (code_block -> { statement } .)
    $end            reduce using rule 58 (code_block -> { statement } .)
    }               reduce using rule 58 (code_block -> { statement } .)
    ELSE            reduce using rule 58 (code_block -> { statement } .)


state 95

    (34) statement -> ID ASSIGN expression ; .

    ID              reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    RETURN          reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    BREAK           reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    CONTINUE        reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    FOR             reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    WHILE           reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    IF              reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    PRINT           reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    {               reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    $end            reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    }               reduce using rule 34 (statement -> ID ASSIGN expression ; .)
    ELSE            reduce using rule 34 (statement -> ID ASSIGN expression ; .)


state 96

    (35) statement -> ID MINUS_ASSIGN expression ; .

    ID              reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    RETURN          reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    BREAK           reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    FOR             reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    WHILE           reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    IF              reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    PRINT           reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    {               reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    $end            reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    }               reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)
    ELSE            reduce using rule 35 (statement -> ID MINUS_ASSIGN expression ; .)


state 97

    (36) statement -> ID PLUS_ASSIGN expression ; .

    ID              reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    RETURN          reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    BREAK           reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    FOR             reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    WHILE           reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    IF              reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    PRINT           reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    {               reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    $end            reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    }               reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)
    ELSE            reduce using rule 36 (statement -> ID PLUS_ASSIGN expression ; .)


state 98

    (37) statement -> ID TIMES_ASSIGN expression ; .

    ID              reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    RETURN          reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    BREAK           reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    CONTINUE        reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    FOR             reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    WHILE           reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    IF              reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    PRINT           reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    {               reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    $end            reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    }               reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)
    ELSE            reduce using rule 37 (statement -> ID TIMES_ASSIGN expression ; .)


state 99

    (38) statement -> ID DIVIDE_ASSIGN expression ; .

    ID              reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    RETURN          reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    BREAK           reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    CONTINUE        reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    FOR             reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    WHILE           reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    IF              reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    PRINT           reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    {               reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    $end            reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    }               reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)
    ELSE            reduce using rule 38 (statement -> ID DIVIDE_ASSIGN expression ; .)


state 100

    (39) slice -> ID [ expression ] .

    ASSIGN          reduce using rule 39 (slice -> ID [ expression ] .)
    MINUS_ASSIGN    reduce using rule 39 (slice -> ID [ expression ] .)
    PLUS_ASSIGN     reduce using rule 39 (slice -> ID [ expression ] .)
    TIMES_ASSIGN    reduce using rule 39 (slice -> ID [ expression ] .)
    DIVIDE_ASSIGN   reduce using rule 39 (slice -> ID [ expression ] .)
    ;               reduce using rule 39 (slice -> ID [ expression ] .)
    PLUS            reduce using rule 39 (slice -> ID [ expression ] .)
    MINUS           reduce using rule 39 (slice -> ID [ expression ] .)
    TIMES           reduce using rule 39 (slice -> ID [ expression ] .)
    DIVIDE          reduce using rule 39 (slice -> ID [ expression ] .)
    PLUS_MAT        reduce using rule 39 (slice -> ID [ expression ] .)
    MINUS_MAT       reduce using rule 39 (slice -> ID [ expression ] .)
    TIMES_MAT       reduce using rule 39 (slice -> ID [ expression ] .)
    DIVIDE_MAT      reduce using rule 39 (slice -> ID [ expression ] .)
    TRANSPOSE       reduce using rule 39 (slice -> ID [ expression ] .)
    EQ              reduce using rule 39 (slice -> ID [ expression ] .)
    NE              reduce using rule 39 (slice -> ID [ expression ] .)
    GT              reduce using rule 39 (slice -> ID [ expression ] .)
    GE              reduce using rule 39 (slice -> ID [ expression ] .)
    LT              reduce using rule 39 (slice -> ID [ expression ] .)
    LE              reduce using rule 39 (slice -> ID [ expression ] .)
    ,               reduce using rule 39 (slice -> ID [ expression ] .)
    ]               reduce using rule 39 (slice -> ID [ expression ] .)
    :               reduce using rule 39 (slice -> ID [ expression ] .)
    )               reduce using rule 39 (slice -> ID [ expression ] .)
    {               reduce using rule 39 (slice -> ID [ expression ] .)
    ID              reduce using rule 39 (slice -> ID [ expression ] .)
    RETURN          reduce using rule 39 (slice -> ID [ expression ] .)
    BREAK           reduce using rule 39 (slice -> ID [ expression ] .)
    CONTINUE        reduce using rule 39 (slice -> ID [ expression ] .)
    FOR             reduce using rule 39 (slice -> ID [ expression ] .)
    WHILE           reduce using rule 39 (slice -> ID [ expression ] .)
    IF              reduce using rule 39 (slice -> ID [ expression ] .)
    PRINT           reduce using rule 39 (slice -> ID [ expression ] .)


state 101

    (41) slice -> ID [ expression , . expression ]
    (42) slice -> ID [ expression , . range ]
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (17) range -> . expression : expression
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 135
    range                          shift and go to state 136
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 102

    (17) range -> expression : . expression
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    expression                     shift and go to state 137
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 103

    (40) slice -> ID [ range ] .

    ASSIGN          reduce using rule 40 (slice -> ID [ range ] .)
    MINUS_ASSIGN    reduce using rule 40 (slice -> ID [ range ] .)
    PLUS_ASSIGN     reduce using rule 40 (slice -> ID [ range ] .)
    TIMES_ASSIGN    reduce using rule 40 (slice -> ID [ range ] .)
    DIVIDE_ASSIGN   reduce using rule 40 (slice -> ID [ range ] .)
    ;               reduce using rule 40 (slice -> ID [ range ] .)
    PLUS            reduce using rule 40 (slice -> ID [ range ] .)
    MINUS           reduce using rule 40 (slice -> ID [ range ] .)
    TIMES           reduce using rule 40 (slice -> ID [ range ] .)
    DIVIDE          reduce using rule 40 (slice -> ID [ range ] .)
    PLUS_MAT        reduce using rule 40 (slice -> ID [ range ] .)
    MINUS_MAT       reduce using rule 40 (slice -> ID [ range ] .)
    TIMES_MAT       reduce using rule 40 (slice -> ID [ range ] .)
    DIVIDE_MAT      reduce using rule 40 (slice -> ID [ range ] .)
    TRANSPOSE       reduce using rule 40 (slice -> ID [ range ] .)
    EQ              reduce using rule 40 (slice -> ID [ range ] .)
    NE              reduce using rule 40 (slice -> ID [ range ] .)
    GT              reduce using rule 40 (slice -> ID [ range ] .)
    GE              reduce using rule 40 (slice -> ID [ range ] .)
    LT              reduce using rule 40 (slice -> ID [ range ] .)
    LE              reduce using rule 40 (slice -> ID [ range ] .)
    ,               reduce using rule 40 (slice -> ID [ range ] .)
    ]               reduce using rule 40 (slice -> ID [ range ] .)
    :               reduce using rule 40 (slice -> ID [ range ] .)
    )               reduce using rule 40 (slice -> ID [ range ] .)
    {               reduce using rule 40 (slice -> ID [ range ] .)
    ID              reduce using rule 40 (slice -> ID [ range ] .)
    RETURN          reduce using rule 40 (slice -> ID [ range ] .)
    BREAK           reduce using rule 40 (slice -> ID [ range ] .)
    CONTINUE        reduce using rule 40 (slice -> ID [ range ] .)
    FOR             reduce using rule 40 (slice -> ID [ range ] .)
    WHILE           reduce using rule 40 (slice -> ID [ range ] .)
    IF              reduce using rule 40 (slice -> ID [ range ] .)
    PRINT           reduce using rule 40 (slice -> ID [ range ] .)


state 104

    (43) slice -> ID [ range , . expression ]
    (44) slice -> ID [ range , . range ]
    (7) expression -> . ID
    (8) expression -> . number
    (9) expression -> . STRING
    (12) expression -> . [ expression ]
    (13) expression -> . [ inner_table ]
    (14) expression -> . ZEROS ( expression )
    (15) expression -> . EYE ( expression )
    (16) expression -> . ONES ( expression )
    (18) expression -> . MINUS expression
    (19) expression -> . expression PLUS expression
    (20) expression -> . expression MINUS expression
    (21) expression -> . expression TIMES expression
    (22) expression -> . expression DIVIDE expression
    (23) expression -> . expression PLUS_MAT expression
    (24) expression -> . expression MINUS_MAT expression
    (25) expression -> . expression TIMES_MAT expression
    (26) expression -> . expression DIVIDE_MAT expression
    (27) expression -> . expression TRANSPOSE
    (28) expression -> . expression EQ expression
    (29) expression -> . expression NE expression
    (30) expression -> . expression GT expression
    (31) expression -> . expression GE expression
    (32) expression -> . expression LT expression
    (33) expression -> . expression LE expression
    (50) expression -> . slice
    (17) range -> . expression : expression
    (5) number -> . INT
    (6) number -> . FLOAT
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 32
    STRING          shift and go to state 34
    [               shift and go to state 35
    ZEROS           shift and go to state 36
    EYE             shift and go to state 37
    ONES            shift and go to state 38
    MINUS           shift and go to state 39
    INT             shift and go to state 41
    FLOAT           shift and go to state 42

    range                          shift and go to state 138
    expression                     shift and go to state 139
    number                         shift and go to state 33
    slice                          shift and go to state 40

state 105

    (45) statement -> slice ASSIGN expression ; .

    ID              reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    RETURN          reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    BREAK           reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    CONTINUE        reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    FOR             reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    WHILE           reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    IF              reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    PRINT           reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    {               reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    $end            reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    }               reduce using rule 45 (statement -> slice ASSIGN expression ; .)
    ELSE            reduce using rule 45 (statement -> slice ASSIGN expression ; .)


state 106

    (46) statement -> slice MINUS_ASSIGN expression ; .

    ID              reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    RETURN          reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    BREAK           reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    FOR             reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    WHILE           reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    IF              reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    PRINT           reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    {               reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    $end            reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    }               reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)
    ELSE            reduce using rule 46 (statement -> slice MINUS_ASSIGN expression ; .)


state 107

    (47) statement -> slice PLUS_ASSIGN expression ; .

    ID              reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    RETURN          reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    BREAK           reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    FOR             reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    WHILE           reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    IF              reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    PRINT           reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    {               reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    $end            reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    }               reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)
    ELSE            reduce using rule 47 (statement -> slice PLUS_ASSIGN expression ; .)


state 108

    (48) statement -> slice TIMES_ASSIGN expression ; .

    ID              reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    RETURN          reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    BREAK           reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    CONTINUE        reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    FOR             reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    WHILE           reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    IF              reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    PRINT           reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    {               reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    $end            reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    }               reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)
    ELSE            reduce using rule 48 (statement -> slice TIMES_ASSIGN expression ; .)


state 109

    (49) statement -> slice DIVIDE_ASSIGN expression ; .

    ID              reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    RETURN          reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    BREAK           reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    CONTINUE        reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    FOR             reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    WHILE           reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    IF              reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    PRINT           reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    {               reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    $end            reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    }               reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)
    ELSE            reduce using rule 49 (statement -> slice DIVIDE_ASSIGN expression ; .)


state 110

    (19) expression -> expression PLUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 19 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 19 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 19 (expression -> expression PLUS expression .)
    TRANSPOSE       reduce using rule 19 (expression -> expression PLUS expression .)
    EQ              reduce using rule 19 (expression -> expression PLUS expression .)
    NE              reduce using rule 19 (expression -> expression PLUS expression .)
    GT              reduce using rule 19 (expression -> expression PLUS expression .)
    GE              reduce using rule 19 (expression -> expression PLUS expression .)
    LT              reduce using rule 19 (expression -> expression PLUS expression .)
    LE              reduce using rule 19 (expression -> expression PLUS expression .)
    ,               reduce using rule 19 (expression -> expression PLUS expression .)
    ]               reduce using rule 19 (expression -> expression PLUS expression .)
    :               reduce using rule 19 (expression -> expression PLUS expression .)
    )               reduce using rule 19 (expression -> expression PLUS expression .)
    {               reduce using rule 19 (expression -> expression PLUS expression .)
    ID              reduce using rule 19 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 19 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 19 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 19 (expression -> expression PLUS expression .)
    FOR             reduce using rule 19 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 19 (expression -> expression PLUS expression .)
    IF              reduce using rule 19 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 19 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! TIMES           [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 19 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 111

    (20) expression -> expression MINUS expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 20 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 20 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 20 (expression -> expression MINUS expression .)
    TRANSPOSE       reduce using rule 20 (expression -> expression MINUS expression .)
    EQ              reduce using rule 20 (expression -> expression MINUS expression .)
    NE              reduce using rule 20 (expression -> expression MINUS expression .)
    GT              reduce using rule 20 (expression -> expression MINUS expression .)
    GE              reduce using rule 20 (expression -> expression MINUS expression .)
    LT              reduce using rule 20 (expression -> expression MINUS expression .)
    LE              reduce using rule 20 (expression -> expression MINUS expression .)
    ,               reduce using rule 20 (expression -> expression MINUS expression .)
    ]               reduce using rule 20 (expression -> expression MINUS expression .)
    :               reduce using rule 20 (expression -> expression MINUS expression .)
    )               reduce using rule 20 (expression -> expression MINUS expression .)
    {               reduce using rule 20 (expression -> expression MINUS expression .)
    ID              reduce using rule 20 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 20 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 20 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 20 (expression -> expression MINUS expression .)
    FOR             reduce using rule 20 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 20 (expression -> expression MINUS expression .)
    IF              reduce using rule 20 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 20 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! TIMES           [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 20 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 112

    (21) expression -> expression TIMES expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 21 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 21 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 21 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 21 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 21 (expression -> expression TIMES expression .)
    TRANSPOSE       reduce using rule 21 (expression -> expression TIMES expression .)
    EQ              reduce using rule 21 (expression -> expression TIMES expression .)
    NE              reduce using rule 21 (expression -> expression TIMES expression .)
    GT              reduce using rule 21 (expression -> expression TIMES expression .)
    GE              reduce using rule 21 (expression -> expression TIMES expression .)
    LT              reduce using rule 21 (expression -> expression TIMES expression .)
    LE              reduce using rule 21 (expression -> expression TIMES expression .)
    ,               reduce using rule 21 (expression -> expression TIMES expression .)
    ]               reduce using rule 21 (expression -> expression TIMES expression .)
    :               reduce using rule 21 (expression -> expression TIMES expression .)
    )               reduce using rule 21 (expression -> expression TIMES expression .)
    {               reduce using rule 21 (expression -> expression TIMES expression .)
    ID              reduce using rule 21 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 21 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 21 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 21 (expression -> expression TIMES expression .)
    FOR             reduce using rule 21 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 21 (expression -> expression TIMES expression .)
    IF              reduce using rule 21 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 21 (expression -> expression TIMES expression .)
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS_MAT        [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! MINUS_MAT       [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! TIMES_MAT       [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 21 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 113

    (22) expression -> expression DIVIDE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 22 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 22 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 22 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 22 (expression -> expression DIVIDE expression .)
    TRANSPOSE       reduce using rule 22 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 22 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 22 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 22 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 22 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 22 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 22 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 22 (expression -> expression DIVIDE expression .)
    :               reduce using rule 22 (expression -> expression DIVIDE expression .)
    )               reduce using rule 22 (expression -> expression DIVIDE expression .)
    {               reduce using rule 22 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 22 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 22 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 22 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 22 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 22 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 22 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 22 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 22 (expression -> expression DIVIDE expression .)
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS_MAT        [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! MINUS_MAT       [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! TIMES_MAT       [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 22 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 114

    (23) expression -> expression PLUS_MAT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    PLUS            reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    TIMES           reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    DIVIDE          reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    PLUS_MAT        reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    MINUS_MAT       reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    TRANSPOSE       reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    EQ              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    NE              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    GT              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    GE              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    LT              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    LE              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    ,               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    ]               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    :               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    )               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    {               reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    ID              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    RETURN          reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    BREAK           reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    CONTINUE        reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    FOR             reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    WHILE           reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    IF              reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    PRINT           reduce using rule 23 (expression -> expression PLUS_MAT expression .)
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! TIMES_MAT       [ reduce using rule 23 (expression -> expression PLUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 23 (expression -> expression PLUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! PLUS_MAT        [ shift and go to state 69 ]
  ! MINUS_MAT       [ shift and go to state 70 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 115

    (24) expression -> expression MINUS_MAT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    PLUS            reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    TIMES           reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    DIVIDE          reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    PLUS_MAT        reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    MINUS_MAT       reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    TRANSPOSE       reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    EQ              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    NE              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    GT              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    GE              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    LT              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    LE              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    ,               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    ]               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    :               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    )               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    {               reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    ID              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    RETURN          reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    BREAK           reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    CONTINUE        reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    FOR             reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    WHILE           reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    IF              reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    PRINT           reduce using rule 24 (expression -> expression MINUS_MAT expression .)
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! TIMES_MAT       [ reduce using rule 24 (expression -> expression MINUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 24 (expression -> expression MINUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! PLUS_MAT        [ shift and go to state 69 ]
  ! MINUS_MAT       [ shift and go to state 70 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 116

    (25) expression -> expression TIMES_MAT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    PLUS            reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    MINUS           reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    TIMES           reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    DIVIDE          reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    PLUS_MAT        reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    MINUS_MAT       reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    TIMES_MAT       reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    DIVIDE_MAT      reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    TRANSPOSE       reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    EQ              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    NE              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    GT              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    GE              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    LT              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    LE              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    ,               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    ]               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    :               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    )               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    {               reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    ID              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    RETURN          reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    BREAK           reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    CONTINUE        reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    FOR             reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    WHILE           reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    IF              reduce using rule 25 (expression -> expression TIMES_MAT expression .)
    PRINT           reduce using rule 25 (expression -> expression TIMES_MAT expression .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! PLUS_MAT        [ shift and go to state 69 ]
  ! MINUS_MAT       [ shift and go to state 70 ]
  ! TIMES_MAT       [ shift and go to state 71 ]
  ! DIVIDE_MAT      [ shift and go to state 72 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 117

    (26) expression -> expression DIVIDE_MAT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    PLUS            reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    TIMES           reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE          reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    PLUS_MAT        reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    MINUS_MAT       reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    TIMES_MAT       reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE_MAT      reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    TRANSPOSE       reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    EQ              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    NE              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    GT              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    GE              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    LT              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    LE              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    ,               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    ]               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    :               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    )               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    {               reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    ID              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    RETURN          reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    BREAK           reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    CONTINUE        reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    FOR             reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    WHILE           reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    IF              reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)
    PRINT           reduce using rule 26 (expression -> expression DIVIDE_MAT expression .)

  ! PLUS            [ shift and go to state 65 ]
  ! MINUS           [ shift and go to state 66 ]
  ! TIMES           [ shift and go to state 67 ]
  ! DIVIDE          [ shift and go to state 68 ]
  ! PLUS_MAT        [ shift and go to state 69 ]
  ! MINUS_MAT       [ shift and go to state 70 ]
  ! TIMES_MAT       [ shift and go to state 71 ]
  ! DIVIDE_MAT      [ shift and go to state 72 ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 118

    (28) expression -> expression EQ expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 28 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 28 (expression -> expression EQ expression .)
    EQ              reduce using rule 28 (expression -> expression EQ expression .)
    NE              reduce using rule 28 (expression -> expression EQ expression .)
    GT              reduce using rule 28 (expression -> expression EQ expression .)
    GE              reduce using rule 28 (expression -> expression EQ expression .)
    LT              reduce using rule 28 (expression -> expression EQ expression .)
    LE              reduce using rule 28 (expression -> expression EQ expression .)
    ,               reduce using rule 28 (expression -> expression EQ expression .)
    ]               reduce using rule 28 (expression -> expression EQ expression .)
    :               reduce using rule 28 (expression -> expression EQ expression .)
    )               reduce using rule 28 (expression -> expression EQ expression .)
    {               reduce using rule 28 (expression -> expression EQ expression .)
    ID              reduce using rule 28 (expression -> expression EQ expression .)
    RETURN          reduce using rule 28 (expression -> expression EQ expression .)
    BREAK           reduce using rule 28 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 28 (expression -> expression EQ expression .)
    FOR             reduce using rule 28 (expression -> expression EQ expression .)
    WHILE           reduce using rule 28 (expression -> expression EQ expression .)
    IF              reduce using rule 28 (expression -> expression EQ expression .)
    PRINT           reduce using rule 28 (expression -> expression EQ expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! PLUS_MAT        [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! MINUS_MAT       [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! TIMES_MAT       [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 28 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 119

    (29) expression -> expression NE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 29 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 29 (expression -> expression NE expression .)
    EQ              reduce using rule 29 (expression -> expression NE expression .)
    NE              reduce using rule 29 (expression -> expression NE expression .)
    GT              reduce using rule 29 (expression -> expression NE expression .)
    GE              reduce using rule 29 (expression -> expression NE expression .)
    LT              reduce using rule 29 (expression -> expression NE expression .)
    LE              reduce using rule 29 (expression -> expression NE expression .)
    ,               reduce using rule 29 (expression -> expression NE expression .)
    ]               reduce using rule 29 (expression -> expression NE expression .)
    :               reduce using rule 29 (expression -> expression NE expression .)
    )               reduce using rule 29 (expression -> expression NE expression .)
    {               reduce using rule 29 (expression -> expression NE expression .)
    ID              reduce using rule 29 (expression -> expression NE expression .)
    RETURN          reduce using rule 29 (expression -> expression NE expression .)
    BREAK           reduce using rule 29 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression NE expression .)
    FOR             reduce using rule 29 (expression -> expression NE expression .)
    WHILE           reduce using rule 29 (expression -> expression NE expression .)
    IF              reduce using rule 29 (expression -> expression NE expression .)
    PRINT           reduce using rule 29 (expression -> expression NE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! PLUS_MAT        [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! MINUS_MAT       [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! TIMES_MAT       [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 29 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 120

    (30) expression -> expression GT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 30 (expression -> expression GT expression .)
    TRANSPOSE       reduce using rule 30 (expression -> expression GT expression .)
    EQ              reduce using rule 30 (expression -> expression GT expression .)
    NE              reduce using rule 30 (expression -> expression GT expression .)
    GT              reduce using rule 30 (expression -> expression GT expression .)
    GE              reduce using rule 30 (expression -> expression GT expression .)
    LT              reduce using rule 30 (expression -> expression GT expression .)
    LE              reduce using rule 30 (expression -> expression GT expression .)
    ,               reduce using rule 30 (expression -> expression GT expression .)
    ]               reduce using rule 30 (expression -> expression GT expression .)
    :               reduce using rule 30 (expression -> expression GT expression .)
    )               reduce using rule 30 (expression -> expression GT expression .)
    {               reduce using rule 30 (expression -> expression GT expression .)
    ID              reduce using rule 30 (expression -> expression GT expression .)
    RETURN          reduce using rule 30 (expression -> expression GT expression .)
    BREAK           reduce using rule 30 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 30 (expression -> expression GT expression .)
    FOR             reduce using rule 30 (expression -> expression GT expression .)
    WHILE           reduce using rule 30 (expression -> expression GT expression .)
    IF              reduce using rule 30 (expression -> expression GT expression .)
    PRINT           reduce using rule 30 (expression -> expression GT expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! PLUS_MAT        [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! MINUS_MAT       [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! TIMES_MAT       [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 30 (expression -> expression GT expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 121

    (31) expression -> expression GE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 31 (expression -> expression GE expression .)
    TRANSPOSE       reduce using rule 31 (expression -> expression GE expression .)
    EQ              reduce using rule 31 (expression -> expression GE expression .)
    NE              reduce using rule 31 (expression -> expression GE expression .)
    GT              reduce using rule 31 (expression -> expression GE expression .)
    GE              reduce using rule 31 (expression -> expression GE expression .)
    LT              reduce using rule 31 (expression -> expression GE expression .)
    LE              reduce using rule 31 (expression -> expression GE expression .)
    ,               reduce using rule 31 (expression -> expression GE expression .)
    ]               reduce using rule 31 (expression -> expression GE expression .)
    :               reduce using rule 31 (expression -> expression GE expression .)
    )               reduce using rule 31 (expression -> expression GE expression .)
    {               reduce using rule 31 (expression -> expression GE expression .)
    ID              reduce using rule 31 (expression -> expression GE expression .)
    RETURN          reduce using rule 31 (expression -> expression GE expression .)
    BREAK           reduce using rule 31 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 31 (expression -> expression GE expression .)
    FOR             reduce using rule 31 (expression -> expression GE expression .)
    WHILE           reduce using rule 31 (expression -> expression GE expression .)
    IF              reduce using rule 31 (expression -> expression GE expression .)
    PRINT           reduce using rule 31 (expression -> expression GE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! PLUS_MAT        [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! MINUS_MAT       [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! TIMES_MAT       [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 31 (expression -> expression GE expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 122

    (32) expression -> expression LT expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 32 (expression -> expression LT expression .)
    TRANSPOSE       reduce using rule 32 (expression -> expression LT expression .)
    EQ              reduce using rule 32 (expression -> expression LT expression .)
    NE              reduce using rule 32 (expression -> expression LT expression .)
    GT              reduce using rule 32 (expression -> expression LT expression .)
    GE              reduce using rule 32 (expression -> expression LT expression .)
    LT              reduce using rule 32 (expression -> expression LT expression .)
    LE              reduce using rule 32 (expression -> expression LT expression .)
    ,               reduce using rule 32 (expression -> expression LT expression .)
    ]               reduce using rule 32 (expression -> expression LT expression .)
    :               reduce using rule 32 (expression -> expression LT expression .)
    )               reduce using rule 32 (expression -> expression LT expression .)
    {               reduce using rule 32 (expression -> expression LT expression .)
    ID              reduce using rule 32 (expression -> expression LT expression .)
    RETURN          reduce using rule 32 (expression -> expression LT expression .)
    BREAK           reduce using rule 32 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 32 (expression -> expression LT expression .)
    FOR             reduce using rule 32 (expression -> expression LT expression .)
    WHILE           reduce using rule 32 (expression -> expression LT expression .)
    IF              reduce using rule 32 (expression -> expression LT expression .)
    PRINT           reduce using rule 32 (expression -> expression LT expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! PLUS_MAT        [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! MINUS_MAT       [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! TIMES_MAT       [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 32 (expression -> expression LT expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 123

    (33) expression -> expression LE expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 33 (expression -> expression LE expression .)
    TRANSPOSE       reduce using rule 33 (expression -> expression LE expression .)
    EQ              reduce using rule 33 (expression -> expression LE expression .)
    NE              reduce using rule 33 (expression -> expression LE expression .)
    GT              reduce using rule 33 (expression -> expression LE expression .)
    GE              reduce using rule 33 (expression -> expression LE expression .)
    LT              reduce using rule 33 (expression -> expression LE expression .)
    LE              reduce using rule 33 (expression -> expression LE expression .)
    ,               reduce using rule 33 (expression -> expression LE expression .)
    ]               reduce using rule 33 (expression -> expression LE expression .)
    :               reduce using rule 33 (expression -> expression LE expression .)
    )               reduce using rule 33 (expression -> expression LE expression .)
    {               reduce using rule 33 (expression -> expression LE expression .)
    ID              reduce using rule 33 (expression -> expression LE expression .)
    RETURN          reduce using rule 33 (expression -> expression LE expression .)
    BREAK           reduce using rule 33 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 33 (expression -> expression LE expression .)
    FOR             reduce using rule 33 (expression -> expression LE expression .)
    WHILE           reduce using rule 33 (expression -> expression LE expression .)
    IF              reduce using rule 33 (expression -> expression LE expression .)
    PRINT           reduce using rule 33 (expression -> expression LE expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72

  ! PLUS            [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! PLUS_MAT        [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! MINUS_MAT       [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! TIMES_MAT       [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 33 (expression -> expression LE expression .) ]
  ! TRANSPOSE       [ shift and go to state 73 ]
  ! EQ              [ shift and go to state 74 ]
  ! NE              [ shift and go to state 75 ]
  ! GT              [ shift and go to state 76 ]
  ! GE              [ shift and go to state 77 ]
  ! LT              [ shift and go to state 78 ]
  ! LE              [ shift and go to state 79 ]


state 124

    (12) expression -> [ expression ] .

    ;               reduce using rule 12 (expression -> [ expression ] .)
    PLUS            reduce using rule 12 (expression -> [ expression ] .)
    MINUS           reduce using rule 12 (expression -> [ expression ] .)
    TIMES           reduce using rule 12 (expression -> [ expression ] .)
    DIVIDE          reduce using rule 12 (expression -> [ expression ] .)
    PLUS_MAT        reduce using rule 12 (expression -> [ expression ] .)
    MINUS_MAT       reduce using rule 12 (expression -> [ expression ] .)
    TIMES_MAT       reduce using rule 12 (expression -> [ expression ] .)
    DIVIDE_MAT      reduce using rule 12 (expression -> [ expression ] .)
    TRANSPOSE       reduce using rule 12 (expression -> [ expression ] .)
    EQ              reduce using rule 12 (expression -> [ expression ] .)
    NE              reduce using rule 12 (expression -> [ expression ] .)
    GT              reduce using rule 12 (expression -> [ expression ] .)
    GE              reduce using rule 12 (expression -> [ expression ] .)
    LT              reduce using rule 12 (expression -> [ expression ] .)
    LE              reduce using rule 12 (expression -> [ expression ] .)
    ,               reduce using rule 12 (expression -> [ expression ] .)
    ]               reduce using rule 12 (expression -> [ expression ] .)
    :               reduce using rule 12 (expression -> [ expression ] .)
    )               reduce using rule 12 (expression -> [ expression ] .)
    {               reduce using rule 12 (expression -> [ expression ] .)
    ID              reduce using rule 12 (expression -> [ expression ] .)
    RETURN          reduce using rule 12 (expression -> [ expression ] .)
    BREAK           reduce using rule 12 (expression -> [ expression ] .)
    CONTINUE        reduce using rule 12 (expression -> [ expression ] .)
    FOR             reduce using rule 12 (expression -> [ expression ] .)
    WHILE           reduce using rule 12 (expression -> [ expression ] .)
    IF              reduce using rule 12 (expression -> [ expression ] .)
    PRINT           reduce using rule 12 (expression -> [ expression ] .)


state 125

    (13) expression -> [ inner_table ] .

    ;               reduce using rule 13 (expression -> [ inner_table ] .)
    PLUS            reduce using rule 13 (expression -> [ inner_table ] .)
    MINUS           reduce using rule 13 (expression -> [ inner_table ] .)
    TIMES           reduce using rule 13 (expression -> [ inner_table ] .)
    DIVIDE          reduce using rule 13 (expression -> [ inner_table ] .)
    PLUS_MAT        reduce using rule 13 (expression -> [ inner_table ] .)
    MINUS_MAT       reduce using rule 13 (expression -> [ inner_table ] .)
    TIMES_MAT       reduce using rule 13 (expression -> [ inner_table ] .)
    DIVIDE_MAT      reduce using rule 13 (expression -> [ inner_table ] .)
    TRANSPOSE       reduce using rule 13 (expression -> [ inner_table ] .)
    EQ              reduce using rule 13 (expression -> [ inner_table ] .)
    NE              reduce using rule 13 (expression -> [ inner_table ] .)
    GT              reduce using rule 13 (expression -> [ inner_table ] .)
    GE              reduce using rule 13 (expression -> [ inner_table ] .)
    LT              reduce using rule 13 (expression -> [ inner_table ] .)
    LE              reduce using rule 13 (expression -> [ inner_table ] .)
    ,               reduce using rule 13 (expression -> [ inner_table ] .)
    ]               reduce using rule 13 (expression -> [ inner_table ] .)
    :               reduce using rule 13 (expression -> [ inner_table ] .)
    )               reduce using rule 13 (expression -> [ inner_table ] .)
    {               reduce using rule 13 (expression -> [ inner_table ] .)
    ID              reduce using rule 13 (expression -> [ inner_table ] .)
    RETURN          reduce using rule 13 (expression -> [ inner_table ] .)
    BREAK           reduce using rule 13 (expression -> [ inner_table ] .)
    CONTINUE        reduce using rule 13 (expression -> [ inner_table ] .)
    FOR             reduce using rule 13 (expression -> [ inner_table ] .)
    WHILE           reduce using rule 13 (expression -> [ inner_table ] .)
    IF              reduce using rule 13 (expression -> [ inner_table ] .)
    PRINT           reduce using rule 13 (expression -> [ inner_table ] .)


state 126

    (14) expression -> ZEROS ( expression . )
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    )               shift and go to state 140
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 127

    (15) expression -> EYE ( expression . )
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    )               shift and go to state 141
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 128

    (16) expression -> ONES ( expression . )
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    )               shift and go to state 142
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 129

    (61) statement -> FOR ID ASSIGN range . code_block
    (62) statement -> FOR ID ASSIGN range . statement
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    {               shift and go to state 16
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    code_block                     shift and go to state 143
    statement                      shift and go to state 144
    slice                          shift and go to state 6

state 130

    (17) range -> expression . : expression
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    :               shift and go to state 102
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 131

    (63) statement -> WHILE ( expression ) . code_block
    (64) statement -> WHILE ( expression ) . statement
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    {               shift and go to state 16
    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13

    code_block                     shift and go to state 145
    statement                      shift and go to state 146
    slice                          shift and go to state 6

state 132

    (65) statement -> IF ( expression ) . statement
    (66) statement -> IF ( expression ) . code_block
    (67) statement -> IF ( expression ) . statement else_block
    (68) statement -> IF ( expression ) . code_block else_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 147
    code_block                     shift and go to state 148
    slice                          shift and go to state 6

state 133

    (11) inner_table -> inner_table , expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 11 (inner_table -> inner_table , expression .)
    ,               reduce using rule 11 (inner_table -> inner_table , expression .)
    ]               reduce using rule 11 (inner_table -> inner_table , expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 134

    (10) inner_table -> expression , expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ;               reduce using rule 10 (inner_table -> expression , expression .)
    ,               reduce using rule 10 (inner_table -> expression , expression .)
    ]               reduce using rule 10 (inner_table -> expression , expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 135

    (41) slice -> ID [ expression , expression . ]
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (17) range -> expression . : expression

    ]               shift and go to state 149
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    :               shift and go to state 102


state 136

    (42) slice -> ID [ expression , range . ]

    ]               shift and go to state 150


state 137

    (17) range -> expression : expression .
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression

    ]               reduce using rule 17 (range -> expression : expression .)
    ,               reduce using rule 17 (range -> expression : expression .)
    {               reduce using rule 17 (range -> expression : expression .)
    ID              reduce using rule 17 (range -> expression : expression .)
    RETURN          reduce using rule 17 (range -> expression : expression .)
    BREAK           reduce using rule 17 (range -> expression : expression .)
    CONTINUE        reduce using rule 17 (range -> expression : expression .)
    FOR             reduce using rule 17 (range -> expression : expression .)
    WHILE           reduce using rule 17 (range -> expression : expression .)
    IF              reduce using rule 17 (range -> expression : expression .)
    PRINT           reduce using rule 17 (range -> expression : expression .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79


state 138

    (44) slice -> ID [ range , range . ]

    ]               shift and go to state 151


state 139

    (43) slice -> ID [ range , expression . ]
    (19) expression -> expression . PLUS expression
    (20) expression -> expression . MINUS expression
    (21) expression -> expression . TIMES expression
    (22) expression -> expression . DIVIDE expression
    (23) expression -> expression . PLUS_MAT expression
    (24) expression -> expression . MINUS_MAT expression
    (25) expression -> expression . TIMES_MAT expression
    (26) expression -> expression . DIVIDE_MAT expression
    (27) expression -> expression . TRANSPOSE
    (28) expression -> expression . EQ expression
    (29) expression -> expression . NE expression
    (30) expression -> expression . GT expression
    (31) expression -> expression . GE expression
    (32) expression -> expression . LT expression
    (33) expression -> expression . LE expression
    (17) range -> expression . : expression

    ]               shift and go to state 152
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    PLUS_MAT        shift and go to state 69
    MINUS_MAT       shift and go to state 70
    TIMES_MAT       shift and go to state 71
    DIVIDE_MAT      shift and go to state 72
    TRANSPOSE       shift and go to state 73
    EQ              shift and go to state 74
    NE              shift and go to state 75
    GT              shift and go to state 76
    GE              shift and go to state 77
    LT              shift and go to state 78
    LE              shift and go to state 79
    :               shift and go to state 102


state 140

    (14) expression -> ZEROS ( expression ) .

    ;               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    PLUS            reduce using rule 14 (expression -> ZEROS ( expression ) .)
    MINUS           reduce using rule 14 (expression -> ZEROS ( expression ) .)
    TIMES           reduce using rule 14 (expression -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 14 (expression -> ZEROS ( expression ) .)
    PLUS_MAT        reduce using rule 14 (expression -> ZEROS ( expression ) .)
    MINUS_MAT       reduce using rule 14 (expression -> ZEROS ( expression ) .)
    TIMES_MAT       reduce using rule 14 (expression -> ZEROS ( expression ) .)
    DIVIDE_MAT      reduce using rule 14 (expression -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 14 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    NE              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    GT              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    GE              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    LT              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    LE              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 14 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 14 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 14 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 14 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 14 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 14 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 14 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 14 (expression -> ZEROS ( expression ) .)


state 141

    (15) expression -> EYE ( expression ) .

    ;               reduce using rule 15 (expression -> EYE ( expression ) .)
    PLUS            reduce using rule 15 (expression -> EYE ( expression ) .)
    MINUS           reduce using rule 15 (expression -> EYE ( expression ) .)
    TIMES           reduce using rule 15 (expression -> EYE ( expression ) .)
    DIVIDE          reduce using rule 15 (expression -> EYE ( expression ) .)
    PLUS_MAT        reduce using rule 15 (expression -> EYE ( expression ) .)
    MINUS_MAT       reduce using rule 15 (expression -> EYE ( expression ) .)
    TIMES_MAT       reduce using rule 15 (expression -> EYE ( expression ) .)
    DIVIDE_MAT      reduce using rule 15 (expression -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 15 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 15 (expression -> EYE ( expression ) .)
    NE              reduce using rule 15 (expression -> EYE ( expression ) .)
    GT              reduce using rule 15 (expression -> EYE ( expression ) .)
    GE              reduce using rule 15 (expression -> EYE ( expression ) .)
    LT              reduce using rule 15 (expression -> EYE ( expression ) .)
    LE              reduce using rule 15 (expression -> EYE ( expression ) .)
    ,               reduce using rule 15 (expression -> EYE ( expression ) .)
    ]               reduce using rule 15 (expression -> EYE ( expression ) .)
    :               reduce using rule 15 (expression -> EYE ( expression ) .)
    )               reduce using rule 15 (expression -> EYE ( expression ) .)
    {               reduce using rule 15 (expression -> EYE ( expression ) .)
    ID              reduce using rule 15 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 15 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 15 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 15 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 15 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 15 (expression -> EYE ( expression ) .)
    IF              reduce using rule 15 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 15 (expression -> EYE ( expression ) .)


state 142

    (16) expression -> ONES ( expression ) .

    ;               reduce using rule 16 (expression -> ONES ( expression ) .)
    PLUS            reduce using rule 16 (expression -> ONES ( expression ) .)
    MINUS           reduce using rule 16 (expression -> ONES ( expression ) .)
    TIMES           reduce using rule 16 (expression -> ONES ( expression ) .)
    DIVIDE          reduce using rule 16 (expression -> ONES ( expression ) .)
    PLUS_MAT        reduce using rule 16 (expression -> ONES ( expression ) .)
    MINUS_MAT       reduce using rule 16 (expression -> ONES ( expression ) .)
    TIMES_MAT       reduce using rule 16 (expression -> ONES ( expression ) .)
    DIVIDE_MAT      reduce using rule 16 (expression -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 16 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 16 (expression -> ONES ( expression ) .)
    NE              reduce using rule 16 (expression -> ONES ( expression ) .)
    GT              reduce using rule 16 (expression -> ONES ( expression ) .)
    GE              reduce using rule 16 (expression -> ONES ( expression ) .)
    LT              reduce using rule 16 (expression -> ONES ( expression ) .)
    LE              reduce using rule 16 (expression -> ONES ( expression ) .)
    ,               reduce using rule 16 (expression -> ONES ( expression ) .)
    ]               reduce using rule 16 (expression -> ONES ( expression ) .)
    :               reduce using rule 16 (expression -> ONES ( expression ) .)
    )               reduce using rule 16 (expression -> ONES ( expression ) .)
    {               reduce using rule 16 (expression -> ONES ( expression ) .)
    ID              reduce using rule 16 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 16 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 16 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 16 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 16 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 16 (expression -> ONES ( expression ) .)
    IF              reduce using rule 16 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 16 (expression -> ONES ( expression ) .)


state 143

    (61) statement -> FOR ID ASSIGN range code_block .

    ID              reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    RETURN          reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    BREAK           reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    CONTINUE        reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    FOR             reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    WHILE           reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    IF              reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    PRINT           reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    {               reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    $end            reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    }               reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)
    ELSE            reduce using rule 61 (statement -> FOR ID ASSIGN range code_block .)


state 144

    (62) statement -> FOR ID ASSIGN range statement .

    ID              reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    RETURN          reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    BREAK           reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    CONTINUE        reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    FOR             reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    WHILE           reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    IF              reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    PRINT           reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    {               reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    $end            reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    }               reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)
    ELSE            reduce using rule 62 (statement -> FOR ID ASSIGN range statement .)


state 145

    (63) statement -> WHILE ( expression ) code_block .

    ID              reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    RETURN          reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    BREAK           reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    CONTINUE        reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    FOR             reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    WHILE           reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    IF              reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    PRINT           reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    {               reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    $end            reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    }               reduce using rule 63 (statement -> WHILE ( expression ) code_block .)
    ELSE            reduce using rule 63 (statement -> WHILE ( expression ) code_block .)


state 146

    (64) statement -> WHILE ( expression ) statement .

    ID              reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    PRINT           reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    {               reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    $end            reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    }               reduce using rule 64 (statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 64 (statement -> WHILE ( expression ) statement .)


state 147

    (65) statement -> IF ( expression ) statement .
    (67) statement -> IF ( expression ) statement . else_block
    (69) else_block -> . ELSE statement
    (70) else_block -> . ELSE code_block

    ID              reduce using rule 65 (statement -> IF ( expression ) statement .)
    RETURN          reduce using rule 65 (statement -> IF ( expression ) statement .)
    BREAK           reduce using rule 65 (statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 65 (statement -> IF ( expression ) statement .)
    FOR             reduce using rule 65 (statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 65 (statement -> IF ( expression ) statement .)
    IF              reduce using rule 65 (statement -> IF ( expression ) statement .)
    PRINT           reduce using rule 65 (statement -> IF ( expression ) statement .)
    {               reduce using rule 65 (statement -> IF ( expression ) statement .)
    $end            reduce using rule 65 (statement -> IF ( expression ) statement .)
    }               reduce using rule 65 (statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 65 (statement -> IF ( expression ) statement .) ]

    else_block                     shift and go to state 153

state 148

    (66) statement -> IF ( expression ) code_block .
    (68) statement -> IF ( expression ) code_block . else_block
    (69) else_block -> . ELSE statement
    (70) else_block -> . ELSE code_block

    ID              reduce using rule 66 (statement -> IF ( expression ) code_block .)
    RETURN          reduce using rule 66 (statement -> IF ( expression ) code_block .)
    BREAK           reduce using rule 66 (statement -> IF ( expression ) code_block .)
    CONTINUE        reduce using rule 66 (statement -> IF ( expression ) code_block .)
    FOR             reduce using rule 66 (statement -> IF ( expression ) code_block .)
    WHILE           reduce using rule 66 (statement -> IF ( expression ) code_block .)
    IF              reduce using rule 66 (statement -> IF ( expression ) code_block .)
    PRINT           reduce using rule 66 (statement -> IF ( expression ) code_block .)
    {               reduce using rule 66 (statement -> IF ( expression ) code_block .)
    $end            reduce using rule 66 (statement -> IF ( expression ) code_block .)
    }               reduce using rule 66 (statement -> IF ( expression ) code_block .)
    ELSE            shift and go to state 154

  ! ELSE            [ reduce using rule 66 (statement -> IF ( expression ) code_block .) ]

    else_block                     shift and go to state 155

state 149

    (41) slice -> ID [ expression , expression ] .

    ASSIGN          reduce using rule 41 (slice -> ID [ expression , expression ] .)
    MINUS_ASSIGN    reduce using rule 41 (slice -> ID [ expression , expression ] .)
    PLUS_ASSIGN     reduce using rule 41 (slice -> ID [ expression , expression ] .)
    TIMES_ASSIGN    reduce using rule 41 (slice -> ID [ expression , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 41 (slice -> ID [ expression , expression ] .)
    ;               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    PLUS            reduce using rule 41 (slice -> ID [ expression , expression ] .)
    MINUS           reduce using rule 41 (slice -> ID [ expression , expression ] .)
    TIMES           reduce using rule 41 (slice -> ID [ expression , expression ] .)
    DIVIDE          reduce using rule 41 (slice -> ID [ expression , expression ] .)
    PLUS_MAT        reduce using rule 41 (slice -> ID [ expression , expression ] .)
    MINUS_MAT       reduce using rule 41 (slice -> ID [ expression , expression ] .)
    TIMES_MAT       reduce using rule 41 (slice -> ID [ expression , expression ] .)
    DIVIDE_MAT      reduce using rule 41 (slice -> ID [ expression , expression ] .)
    TRANSPOSE       reduce using rule 41 (slice -> ID [ expression , expression ] .)
    EQ              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    NE              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    GT              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    GE              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    LT              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    LE              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    ,               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    ]               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    :               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    )               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    {               reduce using rule 41 (slice -> ID [ expression , expression ] .)
    ID              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    RETURN          reduce using rule 41 (slice -> ID [ expression , expression ] .)
    BREAK           reduce using rule 41 (slice -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 41 (slice -> ID [ expression , expression ] .)
    FOR             reduce using rule 41 (slice -> ID [ expression , expression ] .)
    WHILE           reduce using rule 41 (slice -> ID [ expression , expression ] .)
    IF              reduce using rule 41 (slice -> ID [ expression , expression ] .)
    PRINT           reduce using rule 41 (slice -> ID [ expression , expression ] .)


state 150

    (42) slice -> ID [ expression , range ] .

    ASSIGN          reduce using rule 42 (slice -> ID [ expression , range ] .)
    MINUS_ASSIGN    reduce using rule 42 (slice -> ID [ expression , range ] .)
    PLUS_ASSIGN     reduce using rule 42 (slice -> ID [ expression , range ] .)
    TIMES_ASSIGN    reduce using rule 42 (slice -> ID [ expression , range ] .)
    DIVIDE_ASSIGN   reduce using rule 42 (slice -> ID [ expression , range ] .)
    ;               reduce using rule 42 (slice -> ID [ expression , range ] .)
    PLUS            reduce using rule 42 (slice -> ID [ expression , range ] .)
    MINUS           reduce using rule 42 (slice -> ID [ expression , range ] .)
    TIMES           reduce using rule 42 (slice -> ID [ expression , range ] .)
    DIVIDE          reduce using rule 42 (slice -> ID [ expression , range ] .)
    PLUS_MAT        reduce using rule 42 (slice -> ID [ expression , range ] .)
    MINUS_MAT       reduce using rule 42 (slice -> ID [ expression , range ] .)
    TIMES_MAT       reduce using rule 42 (slice -> ID [ expression , range ] .)
    DIVIDE_MAT      reduce using rule 42 (slice -> ID [ expression , range ] .)
    TRANSPOSE       reduce using rule 42 (slice -> ID [ expression , range ] .)
    EQ              reduce using rule 42 (slice -> ID [ expression , range ] .)
    NE              reduce using rule 42 (slice -> ID [ expression , range ] .)
    GT              reduce using rule 42 (slice -> ID [ expression , range ] .)
    GE              reduce using rule 42 (slice -> ID [ expression , range ] .)
    LT              reduce using rule 42 (slice -> ID [ expression , range ] .)
    LE              reduce using rule 42 (slice -> ID [ expression , range ] .)
    ,               reduce using rule 42 (slice -> ID [ expression , range ] .)
    ]               reduce using rule 42 (slice -> ID [ expression , range ] .)
    :               reduce using rule 42 (slice -> ID [ expression , range ] .)
    )               reduce using rule 42 (slice -> ID [ expression , range ] .)
    {               reduce using rule 42 (slice -> ID [ expression , range ] .)
    ID              reduce using rule 42 (slice -> ID [ expression , range ] .)
    RETURN          reduce using rule 42 (slice -> ID [ expression , range ] .)
    BREAK           reduce using rule 42 (slice -> ID [ expression , range ] .)
    CONTINUE        reduce using rule 42 (slice -> ID [ expression , range ] .)
    FOR             reduce using rule 42 (slice -> ID [ expression , range ] .)
    WHILE           reduce using rule 42 (slice -> ID [ expression , range ] .)
    IF              reduce using rule 42 (slice -> ID [ expression , range ] .)
    PRINT           reduce using rule 42 (slice -> ID [ expression , range ] .)


state 151

    (44) slice -> ID [ range , range ] .

    ASSIGN          reduce using rule 44 (slice -> ID [ range , range ] .)
    MINUS_ASSIGN    reduce using rule 44 (slice -> ID [ range , range ] .)
    PLUS_ASSIGN     reduce using rule 44 (slice -> ID [ range , range ] .)
    TIMES_ASSIGN    reduce using rule 44 (slice -> ID [ range , range ] .)
    DIVIDE_ASSIGN   reduce using rule 44 (slice -> ID [ range , range ] .)
    ;               reduce using rule 44 (slice -> ID [ range , range ] .)
    PLUS            reduce using rule 44 (slice -> ID [ range , range ] .)
    MINUS           reduce using rule 44 (slice -> ID [ range , range ] .)
    TIMES           reduce using rule 44 (slice -> ID [ range , range ] .)
    DIVIDE          reduce using rule 44 (slice -> ID [ range , range ] .)
    PLUS_MAT        reduce using rule 44 (slice -> ID [ range , range ] .)
    MINUS_MAT       reduce using rule 44 (slice -> ID [ range , range ] .)
    TIMES_MAT       reduce using rule 44 (slice -> ID [ range , range ] .)
    DIVIDE_MAT      reduce using rule 44 (slice -> ID [ range , range ] .)
    TRANSPOSE       reduce using rule 44 (slice -> ID [ range , range ] .)
    EQ              reduce using rule 44 (slice -> ID [ range , range ] .)
    NE              reduce using rule 44 (slice -> ID [ range , range ] .)
    GT              reduce using rule 44 (slice -> ID [ range , range ] .)
    GE              reduce using rule 44 (slice -> ID [ range , range ] .)
    LT              reduce using rule 44 (slice -> ID [ range , range ] .)
    LE              reduce using rule 44 (slice -> ID [ range , range ] .)
    ,               reduce using rule 44 (slice -> ID [ range , range ] .)
    ]               reduce using rule 44 (slice -> ID [ range , range ] .)
    :               reduce using rule 44 (slice -> ID [ range , range ] .)
    )               reduce using rule 44 (slice -> ID [ range , range ] .)
    {               reduce using rule 44 (slice -> ID [ range , range ] .)
    ID              reduce using rule 44 (slice -> ID [ range , range ] .)
    RETURN          reduce using rule 44 (slice -> ID [ range , range ] .)
    BREAK           reduce using rule 44 (slice -> ID [ range , range ] .)
    CONTINUE        reduce using rule 44 (slice -> ID [ range , range ] .)
    FOR             reduce using rule 44 (slice -> ID [ range , range ] .)
    WHILE           reduce using rule 44 (slice -> ID [ range , range ] .)
    IF              reduce using rule 44 (slice -> ID [ range , range ] .)
    PRINT           reduce using rule 44 (slice -> ID [ range , range ] .)


state 152

    (43) slice -> ID [ range , expression ] .

    ASSIGN          reduce using rule 43 (slice -> ID [ range , expression ] .)
    MINUS_ASSIGN    reduce using rule 43 (slice -> ID [ range , expression ] .)
    PLUS_ASSIGN     reduce using rule 43 (slice -> ID [ range , expression ] .)
    TIMES_ASSIGN    reduce using rule 43 (slice -> ID [ range , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 43 (slice -> ID [ range , expression ] .)
    ;               reduce using rule 43 (slice -> ID [ range , expression ] .)
    PLUS            reduce using rule 43 (slice -> ID [ range , expression ] .)
    MINUS           reduce using rule 43 (slice -> ID [ range , expression ] .)
    TIMES           reduce using rule 43 (slice -> ID [ range , expression ] .)
    DIVIDE          reduce using rule 43 (slice -> ID [ range , expression ] .)
    PLUS_MAT        reduce using rule 43 (slice -> ID [ range , expression ] .)
    MINUS_MAT       reduce using rule 43 (slice -> ID [ range , expression ] .)
    TIMES_MAT       reduce using rule 43 (slice -> ID [ range , expression ] .)
    DIVIDE_MAT      reduce using rule 43 (slice -> ID [ range , expression ] .)
    TRANSPOSE       reduce using rule 43 (slice -> ID [ range , expression ] .)
    EQ              reduce using rule 43 (slice -> ID [ range , expression ] .)
    NE              reduce using rule 43 (slice -> ID [ range , expression ] .)
    GT              reduce using rule 43 (slice -> ID [ range , expression ] .)
    GE              reduce using rule 43 (slice -> ID [ range , expression ] .)
    LT              reduce using rule 43 (slice -> ID [ range , expression ] .)
    LE              reduce using rule 43 (slice -> ID [ range , expression ] .)
    ,               reduce using rule 43 (slice -> ID [ range , expression ] .)
    ]               reduce using rule 43 (slice -> ID [ range , expression ] .)
    :               reduce using rule 43 (slice -> ID [ range , expression ] .)
    )               reduce using rule 43 (slice -> ID [ range , expression ] .)
    {               reduce using rule 43 (slice -> ID [ range , expression ] .)
    ID              reduce using rule 43 (slice -> ID [ range , expression ] .)
    RETURN          reduce using rule 43 (slice -> ID [ range , expression ] .)
    BREAK           reduce using rule 43 (slice -> ID [ range , expression ] .)
    CONTINUE        reduce using rule 43 (slice -> ID [ range , expression ] .)
    FOR             reduce using rule 43 (slice -> ID [ range , expression ] .)
    WHILE           reduce using rule 43 (slice -> ID [ range , expression ] .)
    IF              reduce using rule 43 (slice -> ID [ range , expression ] .)
    PRINT           reduce using rule 43 (slice -> ID [ range , expression ] .)


state 153

    (67) statement -> IF ( expression ) statement else_block .

    ID              reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    RETURN          reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    BREAK           reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    CONTINUE        reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    FOR             reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    WHILE           reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    IF              reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    PRINT           reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    {               reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    $end            reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    }               reduce using rule 67 (statement -> IF ( expression ) statement else_block .)
    ELSE            reduce using rule 67 (statement -> IF ( expression ) statement else_block .)


state 154

    (69) else_block -> ELSE . statement
    (70) else_block -> ELSE . code_block
    (34) statement -> . ID ASSIGN expression ;
    (35) statement -> . ID MINUS_ASSIGN expression ;
    (36) statement -> . ID PLUS_ASSIGN expression ;
    (37) statement -> . ID TIMES_ASSIGN expression ;
    (38) statement -> . ID DIVIDE_ASSIGN expression ;
    (45) statement -> . slice ASSIGN expression ;
    (46) statement -> . slice MINUS_ASSIGN expression ;
    (47) statement -> . slice PLUS_ASSIGN expression ;
    (48) statement -> . slice TIMES_ASSIGN expression ;
    (49) statement -> . slice DIVIDE_ASSIGN expression ;
    (55) statement -> . RETURN ;
    (56) statement -> . RETURN expression ;
    (59) statement -> . BREAK ;
    (60) statement -> . CONTINUE ;
    (61) statement -> . FOR ID ASSIGN range code_block
    (62) statement -> . FOR ID ASSIGN range statement
    (63) statement -> . WHILE ( expression ) code_block
    (64) statement -> . WHILE ( expression ) statement
    (65) statement -> . IF ( expression ) statement
    (66) statement -> . IF ( expression ) code_block
    (67) statement -> . IF ( expression ) statement else_block
    (68) statement -> . IF ( expression ) code_block else_block
    (71) statement -> . PRINT inner_table ;
    (72) statement -> . PRINT expression ;
    (57) code_block -> . { statements_list }
    (58) code_block -> . { statement }
    (39) slice -> . ID [ expression ]
    (40) slice -> . ID [ range ]
    (41) slice -> . ID [ expression , expression ]
    (42) slice -> . ID [ expression , range ]
    (43) slice -> . ID [ range , expression ]
    (44) slice -> . ID [ range , range ]

    ID              shift and go to state 5
    RETURN          shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 11
    IF              shift and go to state 12
    PRINT           shift and go to state 13
    {               shift and go to state 16

    statement                      shift and go to state 156
    code_block                     shift and go to state 157
    slice                          shift and go to state 6

state 155

    (68) statement -> IF ( expression ) code_block else_block .

    ID              reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    RETURN          reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    BREAK           reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    CONTINUE        reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    FOR             reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    WHILE           reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    IF              reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    PRINT           reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    {               reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    $end            reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    }               reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)
    ELSE            reduce using rule 68 (statement -> IF ( expression ) code_block else_block .)


state 156

    (69) else_block -> ELSE statement .

    ID              reduce using rule 69 (else_block -> ELSE statement .)
    RETURN          reduce using rule 69 (else_block -> ELSE statement .)
    BREAK           reduce using rule 69 (else_block -> ELSE statement .)
    CONTINUE        reduce using rule 69 (else_block -> ELSE statement .)
    FOR             reduce using rule 69 (else_block -> ELSE statement .)
    WHILE           reduce using rule 69 (else_block -> ELSE statement .)
    IF              reduce using rule 69 (else_block -> ELSE statement .)
    PRINT           reduce using rule 69 (else_block -> ELSE statement .)
    {               reduce using rule 69 (else_block -> ELSE statement .)
    $end            reduce using rule 69 (else_block -> ELSE statement .)
    }               reduce using rule 69 (else_block -> ELSE statement .)
    ELSE            reduce using rule 69 (else_block -> ELSE statement .)


state 157

    (70) else_block -> ELSE code_block .

    ID              reduce using rule 70 (else_block -> ELSE code_block .)
    RETURN          reduce using rule 70 (else_block -> ELSE code_block .)
    BREAK           reduce using rule 70 (else_block -> ELSE code_block .)
    CONTINUE        reduce using rule 70 (else_block -> ELSE code_block .)
    FOR             reduce using rule 70 (else_block -> ELSE code_block .)
    WHILE           reduce using rule 70 (else_block -> ELSE code_block .)
    IF              reduce using rule 70 (else_block -> ELSE code_block .)
    PRINT           reduce using rule 70 (else_block -> ELSE code_block .)
    {               reduce using rule 70 (else_block -> ELSE code_block .)
    $end            reduce using rule 70 (else_block -> ELSE code_block .)
    }               reduce using rule 70 (else_block -> ELSE code_block .)
    ELSE            reduce using rule 70 (else_block -> ELSE code_block .)

