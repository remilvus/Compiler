Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statements_list
Rule 2     program -> empty
Rule 3     empty -> <empty>
Rule 4     number -> INT
Rule 5     number -> FLOAT
Rule 6     expression -> slice_or_id
Rule 7     expression -> number
Rule 8     expression -> STRING
Rule 9     inner_table -> inner_table , expression
Rule 10    inner_table -> expression
Rule 11    expression -> [ inner_table ]
Rule 12    expression -> ZEROS ( expression )
Rule 13    expression -> EYE ( expression )
Rule 14    expression -> ONES ( expression )
Rule 15    range -> expression : expression
Rule 16    expression -> MINUS expression
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> expression PLUS_MAT expression
Rule 22    expression -> expression MINUS_MAT expression
Rule 23    expression -> expression TIMES_MAT expression
Rule 24    expression -> expression DIVIDE_MAT expression
Rule 25    expression -> expression TRANSPOSE
Rule 26    expression -> expression EQ expression
Rule 27    expression -> expression NE expression
Rule 28    expression -> expression GT expression
Rule 29    expression -> expression GE expression
Rule 30    expression -> expression LT expression
Rule 31    expression -> expression LE expression
Rule 32    slice -> ID [ expression ]
Rule 33    slice -> ID [ range ]
Rule 34    slice -> ID [ expression , expression ]
Rule 35    slice -> ID [ expression , range ]
Rule 36    slice -> ID [ range , expression ]
Rule 37    slice -> ID [ range , range ]
Rule 38    slice_or_id -> ID
Rule 39    slice_or_id -> slice
Rule 40    statement -> slice_or_id ASSIGN expression ;
Rule 41    statement -> slice_or_id MINUS_ASSIGN expression ;
Rule 42    statement -> slice_or_id PLUS_ASSIGN expression ;
Rule 43    statement -> slice_or_id TIMES_ASSIGN expression ;
Rule 44    statement -> slice_or_id DIVIDE_ASSIGN expression ;
Rule 45    statements_list -> statements_list statement
Rule 46    statements_list -> statement
Rule 47    statement -> RETURN ;
Rule 48    statement -> RETURN expression ;
Rule 49    statement -> { statements_list }
Rule 50    statement -> BREAK ;
Rule 51    statement -> CONTINUE ;
Rule 52    statement -> FOR ID ASSIGN range statement
Rule 53    statement -> WHILE ( expression ) statement
Rule 54    statement -> IF ( expression ) statement
Rule 55    statement -> IF ( expression ) statement ELSE statement
Rule 56    statement -> PRINT inner_table ;

Terminals, with rules where they appear

(                    : 12 13 14 53 54 55
)                    : 12 13 14 53 54 55
,                    : 9 34 35 36 37
:                    : 15
;                    : 40 41 42 43 44 47 48 50 51 56
ASSIGN               : 40 52
BREAK                : 50
CONTINUE             : 51
DIVIDE               : 20
DIVIDE_ASSIGN        : 44
DIVIDE_MAT           : 24
ELSE                 : 55
EQ                   : 26
EYE                  : 13
FLOAT                : 5
FOR                  : 52
GE                   : 29
GT                   : 28
ID                   : 32 33 34 35 36 37 38 52
IF                   : 54 55
INT                  : 4
LE                   : 31
LT                   : 30
MINUS                : 16 18
MINUS_ASSIGN         : 41
MINUS_MAT            : 22
NE                   : 27
ONES                 : 14
PLUS                 : 17
PLUS_ASSIGN          : 42
PLUS_MAT             : 21
PRINT                : 56
RETURN               : 47 48
STRING               : 8
TIMES                : 19
TIMES_ASSIGN         : 43
TIMES_MAT            : 23
TRANSPOSE            : 25
WHILE                : 53
ZEROS                : 12
[                    : 11 32 33 34 35 36 37
]                    : 11 32 33 34 35 36 37
error                : 
{                    : 49
}                    : 49

Nonterminals, with rules where they appear

empty                : 2
expression           : 9 10 12 13 14 15 15 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 26 26 27 27 28 28 29 29 30 30 31 31 32 34 34 35 36 40 41 42 43 44 48 53 54 55
inner_table          : 9 11 56
number               : 7
program              : 0
range                : 33 35 36 37 37 52
slice                : 39
slice_or_id          : 6 40 41 42 43 44
statement            : 45 46 52 53 54 55 55
statements_list      : 1 45 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements_list
    (2) program -> . empty
    (45) statements_list -> . statements_list statement
    (46) statements_list -> . statement
    (3) empty -> .
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    $end            reduce using rule 3 (empty -> .)
    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    program                        shift and go to state 1
    statements_list                shift and go to state 2
    empty                          shift and go to state 3
    statement                      shift and go to state 4
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 1

    (0) S' -> program .



state 2

    (1) program -> statements_list .
    (45) statements_list -> statements_list . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    $end            reduce using rule 1 (program -> statements_list .)
    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 16
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 3

    (2) program -> empty .

    $end            reduce using rule 2 (program -> empty .)


state 4

    (46) statements_list -> statement .

    RETURN          reduce using rule 46 (statements_list -> statement .)
    {               reduce using rule 46 (statements_list -> statement .)
    BREAK           reduce using rule 46 (statements_list -> statement .)
    CONTINUE        reduce using rule 46 (statements_list -> statement .)
    FOR             reduce using rule 46 (statements_list -> statement .)
    WHILE           reduce using rule 46 (statements_list -> statement .)
    IF              reduce using rule 46 (statements_list -> statement .)
    PRINT           reduce using rule 46 (statements_list -> statement .)
    ID              reduce using rule 46 (statements_list -> statement .)
    $end            reduce using rule 46 (statements_list -> statement .)
    }               reduce using rule 46 (statements_list -> statement .)


state 5

    (40) statement -> slice_or_id . ASSIGN expression ;
    (41) statement -> slice_or_id . MINUS_ASSIGN expression ;
    (42) statement -> slice_or_id . PLUS_ASSIGN expression ;
    (43) statement -> slice_or_id . TIMES_ASSIGN expression ;
    (44) statement -> slice_or_id . DIVIDE_ASSIGN expression ;

    ASSIGN          shift and go to state 17
    MINUS_ASSIGN    shift and go to state 18
    PLUS_ASSIGN     shift and go to state 19
    TIMES_ASSIGN    shift and go to state 20
    DIVIDE_ASSIGN   shift and go to state 21


state 6

    (47) statement -> RETURN . ;
    (48) statement -> RETURN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    ;               shift and go to state 22
    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 23
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 7

    (49) statement -> { . statements_list }
    (45) statements_list -> . statements_list statement
    (46) statements_list -> . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statements_list                shift and go to state 34
    statement                      shift and go to state 4
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 8

    (50) statement -> BREAK . ;

    ;               shift and go to state 35


state 9

    (51) statement -> CONTINUE . ;

    ;               shift and go to state 36


state 10

    (52) statement -> FOR . ID ASSIGN range statement

    ID              shift and go to state 37


state 11

    (38) slice_or_id -> ID .
    (32) slice -> ID . [ expression ]
    (33) slice -> ID . [ range ]
    (34) slice -> ID . [ expression , expression ]
    (35) slice -> ID . [ expression , range ]
    (36) slice -> ID . [ range , expression ]
    (37) slice -> ID . [ range , range ]

    ASSIGN          reduce using rule 38 (slice_or_id -> ID .)
    MINUS_ASSIGN    reduce using rule 38 (slice_or_id -> ID .)
    PLUS_ASSIGN     reduce using rule 38 (slice_or_id -> ID .)
    TIMES_ASSIGN    reduce using rule 38 (slice_or_id -> ID .)
    DIVIDE_ASSIGN   reduce using rule 38 (slice_or_id -> ID .)
    ;               reduce using rule 38 (slice_or_id -> ID .)
    PLUS            reduce using rule 38 (slice_or_id -> ID .)
    MINUS           reduce using rule 38 (slice_or_id -> ID .)
    TIMES           reduce using rule 38 (slice_or_id -> ID .)
    DIVIDE          reduce using rule 38 (slice_or_id -> ID .)
    PLUS_MAT        reduce using rule 38 (slice_or_id -> ID .)
    MINUS_MAT       reduce using rule 38 (slice_or_id -> ID .)
    TIMES_MAT       reduce using rule 38 (slice_or_id -> ID .)
    DIVIDE_MAT      reduce using rule 38 (slice_or_id -> ID .)
    TRANSPOSE       reduce using rule 38 (slice_or_id -> ID .)
    EQ              reduce using rule 38 (slice_or_id -> ID .)
    NE              reduce using rule 38 (slice_or_id -> ID .)
    GT              reduce using rule 38 (slice_or_id -> ID .)
    GE              reduce using rule 38 (slice_or_id -> ID .)
    LT              reduce using rule 38 (slice_or_id -> ID .)
    LE              reduce using rule 38 (slice_or_id -> ID .)
    ,               reduce using rule 38 (slice_or_id -> ID .)
    ]               reduce using rule 38 (slice_or_id -> ID .)
    :               reduce using rule 38 (slice_or_id -> ID .)
    )               reduce using rule 38 (slice_or_id -> ID .)
    RETURN          reduce using rule 38 (slice_or_id -> ID .)
    {               reduce using rule 38 (slice_or_id -> ID .)
    BREAK           reduce using rule 38 (slice_or_id -> ID .)
    CONTINUE        reduce using rule 38 (slice_or_id -> ID .)
    FOR             reduce using rule 38 (slice_or_id -> ID .)
    WHILE           reduce using rule 38 (slice_or_id -> ID .)
    IF              reduce using rule 38 (slice_or_id -> ID .)
    PRINT           reduce using rule 38 (slice_or_id -> ID .)
    ID              reduce using rule 38 (slice_or_id -> ID .)
    [               shift and go to state 38


state 12

    (53) statement -> WHILE . ( expression ) statement

    (               shift and go to state 39


state 13

    (54) statement -> IF . ( expression ) statement
    (55) statement -> IF . ( expression ) statement ELSE statement

    (               shift and go to state 40


state 14

    (56) statement -> PRINT . inner_table ;
    (9) inner_table -> . inner_table , expression
    (10) inner_table -> . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    inner_table                    shift and go to state 41
    expression                     shift and go to state 42
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 15

    (39) slice_or_id -> slice .

    ASSIGN          reduce using rule 39 (slice_or_id -> slice .)
    MINUS_ASSIGN    reduce using rule 39 (slice_or_id -> slice .)
    PLUS_ASSIGN     reduce using rule 39 (slice_or_id -> slice .)
    TIMES_ASSIGN    reduce using rule 39 (slice_or_id -> slice .)
    DIVIDE_ASSIGN   reduce using rule 39 (slice_or_id -> slice .)
    ;               reduce using rule 39 (slice_or_id -> slice .)
    PLUS            reduce using rule 39 (slice_or_id -> slice .)
    MINUS           reduce using rule 39 (slice_or_id -> slice .)
    TIMES           reduce using rule 39 (slice_or_id -> slice .)
    DIVIDE          reduce using rule 39 (slice_or_id -> slice .)
    PLUS_MAT        reduce using rule 39 (slice_or_id -> slice .)
    MINUS_MAT       reduce using rule 39 (slice_or_id -> slice .)
    TIMES_MAT       reduce using rule 39 (slice_or_id -> slice .)
    DIVIDE_MAT      reduce using rule 39 (slice_or_id -> slice .)
    TRANSPOSE       reduce using rule 39 (slice_or_id -> slice .)
    EQ              reduce using rule 39 (slice_or_id -> slice .)
    NE              reduce using rule 39 (slice_or_id -> slice .)
    GT              reduce using rule 39 (slice_or_id -> slice .)
    GE              reduce using rule 39 (slice_or_id -> slice .)
    LT              reduce using rule 39 (slice_or_id -> slice .)
    LE              reduce using rule 39 (slice_or_id -> slice .)
    ,               reduce using rule 39 (slice_or_id -> slice .)
    ]               reduce using rule 39 (slice_or_id -> slice .)
    :               reduce using rule 39 (slice_or_id -> slice .)
    )               reduce using rule 39 (slice_or_id -> slice .)
    RETURN          reduce using rule 39 (slice_or_id -> slice .)
    {               reduce using rule 39 (slice_or_id -> slice .)
    BREAK           reduce using rule 39 (slice_or_id -> slice .)
    CONTINUE        reduce using rule 39 (slice_or_id -> slice .)
    FOR             reduce using rule 39 (slice_or_id -> slice .)
    WHILE           reduce using rule 39 (slice_or_id -> slice .)
    IF              reduce using rule 39 (slice_or_id -> slice .)
    PRINT           reduce using rule 39 (slice_or_id -> slice .)
    ID              reduce using rule 39 (slice_or_id -> slice .)


state 16

    (45) statements_list -> statements_list statement .

    RETURN          reduce using rule 45 (statements_list -> statements_list statement .)
    {               reduce using rule 45 (statements_list -> statements_list statement .)
    BREAK           reduce using rule 45 (statements_list -> statements_list statement .)
    CONTINUE        reduce using rule 45 (statements_list -> statements_list statement .)
    FOR             reduce using rule 45 (statements_list -> statements_list statement .)
    WHILE           reduce using rule 45 (statements_list -> statements_list statement .)
    IF              reduce using rule 45 (statements_list -> statements_list statement .)
    PRINT           reduce using rule 45 (statements_list -> statements_list statement .)
    ID              reduce using rule 45 (statements_list -> statements_list statement .)
    $end            reduce using rule 45 (statements_list -> statements_list statement .)
    }               reduce using rule 45 (statements_list -> statements_list statement .)


state 17

    (40) statement -> slice_or_id ASSIGN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    slice_or_id                    shift and go to state 24
    expression                     shift and go to state 43
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 18

    (41) statement -> slice_or_id MINUS_ASSIGN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    slice_or_id                    shift and go to state 24
    expression                     shift and go to state 44
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 19

    (42) statement -> slice_or_id PLUS_ASSIGN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    slice_or_id                    shift and go to state 24
    expression                     shift and go to state 45
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 20

    (43) statement -> slice_or_id TIMES_ASSIGN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    slice_or_id                    shift and go to state 24
    expression                     shift and go to state 46
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 21

    (44) statement -> slice_or_id DIVIDE_ASSIGN . expression ;
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    slice_or_id                    shift and go to state 24
    expression                     shift and go to state 47
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 22

    (47) statement -> RETURN ; .

    RETURN          reduce using rule 47 (statement -> RETURN ; .)
    {               reduce using rule 47 (statement -> RETURN ; .)
    BREAK           reduce using rule 47 (statement -> RETURN ; .)
    CONTINUE        reduce using rule 47 (statement -> RETURN ; .)
    FOR             reduce using rule 47 (statement -> RETURN ; .)
    WHILE           reduce using rule 47 (statement -> RETURN ; .)
    IF              reduce using rule 47 (statement -> RETURN ; .)
    PRINT           reduce using rule 47 (statement -> RETURN ; .)
    ID              reduce using rule 47 (statement -> RETURN ; .)
    $end            reduce using rule 47 (statement -> RETURN ; .)
    }               reduce using rule 47 (statement -> RETURN ; .)
    ELSE            reduce using rule 47 (statement -> RETURN ; .)


state 23

    (48) statement -> RETURN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 48
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 24

    (6) expression -> slice_or_id .

    ;               reduce using rule 6 (expression -> slice_or_id .)
    PLUS            reduce using rule 6 (expression -> slice_or_id .)
    MINUS           reduce using rule 6 (expression -> slice_or_id .)
    TIMES           reduce using rule 6 (expression -> slice_or_id .)
    DIVIDE          reduce using rule 6 (expression -> slice_or_id .)
    PLUS_MAT        reduce using rule 6 (expression -> slice_or_id .)
    MINUS_MAT       reduce using rule 6 (expression -> slice_or_id .)
    TIMES_MAT       reduce using rule 6 (expression -> slice_or_id .)
    DIVIDE_MAT      reduce using rule 6 (expression -> slice_or_id .)
    TRANSPOSE       reduce using rule 6 (expression -> slice_or_id .)
    EQ              reduce using rule 6 (expression -> slice_or_id .)
    NE              reduce using rule 6 (expression -> slice_or_id .)
    GT              reduce using rule 6 (expression -> slice_or_id .)
    GE              reduce using rule 6 (expression -> slice_or_id .)
    LT              reduce using rule 6 (expression -> slice_or_id .)
    LE              reduce using rule 6 (expression -> slice_or_id .)
    ,               reduce using rule 6 (expression -> slice_or_id .)
    ]               reduce using rule 6 (expression -> slice_or_id .)
    :               reduce using rule 6 (expression -> slice_or_id .)
    )               reduce using rule 6 (expression -> slice_or_id .)
    RETURN          reduce using rule 6 (expression -> slice_or_id .)
    {               reduce using rule 6 (expression -> slice_or_id .)
    BREAK           reduce using rule 6 (expression -> slice_or_id .)
    CONTINUE        reduce using rule 6 (expression -> slice_or_id .)
    FOR             reduce using rule 6 (expression -> slice_or_id .)
    WHILE           reduce using rule 6 (expression -> slice_or_id .)
    IF              reduce using rule 6 (expression -> slice_or_id .)
    PRINT           reduce using rule 6 (expression -> slice_or_id .)
    ID              reduce using rule 6 (expression -> slice_or_id .)


state 25

    (7) expression -> number .

    ;               reduce using rule 7 (expression -> number .)
    PLUS            reduce using rule 7 (expression -> number .)
    MINUS           reduce using rule 7 (expression -> number .)
    TIMES           reduce using rule 7 (expression -> number .)
    DIVIDE          reduce using rule 7 (expression -> number .)
    PLUS_MAT        reduce using rule 7 (expression -> number .)
    MINUS_MAT       reduce using rule 7 (expression -> number .)
    TIMES_MAT       reduce using rule 7 (expression -> number .)
    DIVIDE_MAT      reduce using rule 7 (expression -> number .)
    TRANSPOSE       reduce using rule 7 (expression -> number .)
    EQ              reduce using rule 7 (expression -> number .)
    NE              reduce using rule 7 (expression -> number .)
    GT              reduce using rule 7 (expression -> number .)
    GE              reduce using rule 7 (expression -> number .)
    LT              reduce using rule 7 (expression -> number .)
    LE              reduce using rule 7 (expression -> number .)
    ,               reduce using rule 7 (expression -> number .)
    ]               reduce using rule 7 (expression -> number .)
    :               reduce using rule 7 (expression -> number .)
    )               reduce using rule 7 (expression -> number .)
    RETURN          reduce using rule 7 (expression -> number .)
    {               reduce using rule 7 (expression -> number .)
    BREAK           reduce using rule 7 (expression -> number .)
    CONTINUE        reduce using rule 7 (expression -> number .)
    FOR             reduce using rule 7 (expression -> number .)
    WHILE           reduce using rule 7 (expression -> number .)
    IF              reduce using rule 7 (expression -> number .)
    PRINT           reduce using rule 7 (expression -> number .)
    ID              reduce using rule 7 (expression -> number .)


state 26

    (8) expression -> STRING .

    ;               reduce using rule 8 (expression -> STRING .)
    PLUS            reduce using rule 8 (expression -> STRING .)
    MINUS           reduce using rule 8 (expression -> STRING .)
    TIMES           reduce using rule 8 (expression -> STRING .)
    DIVIDE          reduce using rule 8 (expression -> STRING .)
    PLUS_MAT        reduce using rule 8 (expression -> STRING .)
    MINUS_MAT       reduce using rule 8 (expression -> STRING .)
    TIMES_MAT       reduce using rule 8 (expression -> STRING .)
    DIVIDE_MAT      reduce using rule 8 (expression -> STRING .)
    TRANSPOSE       reduce using rule 8 (expression -> STRING .)
    EQ              reduce using rule 8 (expression -> STRING .)
    NE              reduce using rule 8 (expression -> STRING .)
    GT              reduce using rule 8 (expression -> STRING .)
    GE              reduce using rule 8 (expression -> STRING .)
    LT              reduce using rule 8 (expression -> STRING .)
    LE              reduce using rule 8 (expression -> STRING .)
    ,               reduce using rule 8 (expression -> STRING .)
    ]               reduce using rule 8 (expression -> STRING .)
    :               reduce using rule 8 (expression -> STRING .)
    )               reduce using rule 8 (expression -> STRING .)
    RETURN          reduce using rule 8 (expression -> STRING .)
    {               reduce using rule 8 (expression -> STRING .)
    BREAK           reduce using rule 8 (expression -> STRING .)
    CONTINUE        reduce using rule 8 (expression -> STRING .)
    FOR             reduce using rule 8 (expression -> STRING .)
    WHILE           reduce using rule 8 (expression -> STRING .)
    IF              reduce using rule 8 (expression -> STRING .)
    PRINT           reduce using rule 8 (expression -> STRING .)
    ID              reduce using rule 8 (expression -> STRING .)


state 27

    (11) expression -> [ . inner_table ]
    (9) inner_table -> . inner_table , expression
    (10) inner_table -> . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    inner_table                    shift and go to state 64
    expression                     shift and go to state 42
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 28

    (12) expression -> ZEROS . ( expression )

    (               shift and go to state 65


state 29

    (13) expression -> EYE . ( expression )

    (               shift and go to state 66


state 30

    (14) expression -> ONES . ( expression )

    (               shift and go to state 67


state 31

    (16) expression -> MINUS . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 68
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 32

    (4) number -> INT .

    ;               reduce using rule 4 (number -> INT .)
    PLUS            reduce using rule 4 (number -> INT .)
    MINUS           reduce using rule 4 (number -> INT .)
    TIMES           reduce using rule 4 (number -> INT .)
    DIVIDE          reduce using rule 4 (number -> INT .)
    PLUS_MAT        reduce using rule 4 (number -> INT .)
    MINUS_MAT       reduce using rule 4 (number -> INT .)
    TIMES_MAT       reduce using rule 4 (number -> INT .)
    DIVIDE_MAT      reduce using rule 4 (number -> INT .)
    TRANSPOSE       reduce using rule 4 (number -> INT .)
    EQ              reduce using rule 4 (number -> INT .)
    NE              reduce using rule 4 (number -> INT .)
    GT              reduce using rule 4 (number -> INT .)
    GE              reduce using rule 4 (number -> INT .)
    LT              reduce using rule 4 (number -> INT .)
    LE              reduce using rule 4 (number -> INT .)
    ,               reduce using rule 4 (number -> INT .)
    ]               reduce using rule 4 (number -> INT .)
    :               reduce using rule 4 (number -> INT .)
    )               reduce using rule 4 (number -> INT .)
    RETURN          reduce using rule 4 (number -> INT .)
    {               reduce using rule 4 (number -> INT .)
    BREAK           reduce using rule 4 (number -> INT .)
    CONTINUE        reduce using rule 4 (number -> INT .)
    FOR             reduce using rule 4 (number -> INT .)
    WHILE           reduce using rule 4 (number -> INT .)
    IF              reduce using rule 4 (number -> INT .)
    PRINT           reduce using rule 4 (number -> INT .)
    ID              reduce using rule 4 (number -> INT .)


state 33

    (5) number -> FLOAT .

    ;               reduce using rule 5 (number -> FLOAT .)
    PLUS            reduce using rule 5 (number -> FLOAT .)
    MINUS           reduce using rule 5 (number -> FLOAT .)
    TIMES           reduce using rule 5 (number -> FLOAT .)
    DIVIDE          reduce using rule 5 (number -> FLOAT .)
    PLUS_MAT        reduce using rule 5 (number -> FLOAT .)
    MINUS_MAT       reduce using rule 5 (number -> FLOAT .)
    TIMES_MAT       reduce using rule 5 (number -> FLOAT .)
    DIVIDE_MAT      reduce using rule 5 (number -> FLOAT .)
    TRANSPOSE       reduce using rule 5 (number -> FLOAT .)
    EQ              reduce using rule 5 (number -> FLOAT .)
    NE              reduce using rule 5 (number -> FLOAT .)
    GT              reduce using rule 5 (number -> FLOAT .)
    GE              reduce using rule 5 (number -> FLOAT .)
    LT              reduce using rule 5 (number -> FLOAT .)
    LE              reduce using rule 5 (number -> FLOAT .)
    ,               reduce using rule 5 (number -> FLOAT .)
    ]               reduce using rule 5 (number -> FLOAT .)
    :               reduce using rule 5 (number -> FLOAT .)
    )               reduce using rule 5 (number -> FLOAT .)
    RETURN          reduce using rule 5 (number -> FLOAT .)
    {               reduce using rule 5 (number -> FLOAT .)
    BREAK           reduce using rule 5 (number -> FLOAT .)
    CONTINUE        reduce using rule 5 (number -> FLOAT .)
    FOR             reduce using rule 5 (number -> FLOAT .)
    WHILE           reduce using rule 5 (number -> FLOAT .)
    IF              reduce using rule 5 (number -> FLOAT .)
    PRINT           reduce using rule 5 (number -> FLOAT .)
    ID              reduce using rule 5 (number -> FLOAT .)


state 34

    (49) statement -> { statements_list . }
    (45) statements_list -> statements_list . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    }               shift and go to state 69
    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 16
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 35

    (50) statement -> BREAK ; .

    RETURN          reduce using rule 50 (statement -> BREAK ; .)
    {               reduce using rule 50 (statement -> BREAK ; .)
    BREAK           reduce using rule 50 (statement -> BREAK ; .)
    CONTINUE        reduce using rule 50 (statement -> BREAK ; .)
    FOR             reduce using rule 50 (statement -> BREAK ; .)
    WHILE           reduce using rule 50 (statement -> BREAK ; .)
    IF              reduce using rule 50 (statement -> BREAK ; .)
    PRINT           reduce using rule 50 (statement -> BREAK ; .)
    ID              reduce using rule 50 (statement -> BREAK ; .)
    $end            reduce using rule 50 (statement -> BREAK ; .)
    }               reduce using rule 50 (statement -> BREAK ; .)
    ELSE            reduce using rule 50 (statement -> BREAK ; .)


state 36

    (51) statement -> CONTINUE ; .

    RETURN          reduce using rule 51 (statement -> CONTINUE ; .)
    {               reduce using rule 51 (statement -> CONTINUE ; .)
    BREAK           reduce using rule 51 (statement -> CONTINUE ; .)
    CONTINUE        reduce using rule 51 (statement -> CONTINUE ; .)
    FOR             reduce using rule 51 (statement -> CONTINUE ; .)
    WHILE           reduce using rule 51 (statement -> CONTINUE ; .)
    IF              reduce using rule 51 (statement -> CONTINUE ; .)
    PRINT           reduce using rule 51 (statement -> CONTINUE ; .)
    ID              reduce using rule 51 (statement -> CONTINUE ; .)
    $end            reduce using rule 51 (statement -> CONTINUE ; .)
    }               reduce using rule 51 (statement -> CONTINUE ; .)
    ELSE            reduce using rule 51 (statement -> CONTINUE ; .)


state 37

    (52) statement -> FOR ID . ASSIGN range statement

    ASSIGN          shift and go to state 70


state 38

    (32) slice -> ID [ . expression ]
    (33) slice -> ID [ . range ]
    (34) slice -> ID [ . expression , expression ]
    (35) slice -> ID [ . expression , range ]
    (36) slice -> ID [ . range , expression ]
    (37) slice -> ID [ . range , range ]
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (15) range -> . expression : expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 71
    range                          shift and go to state 72
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 39

    (53) statement -> WHILE ( . expression ) statement
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 73
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 40

    (54) statement -> IF ( . expression ) statement
    (55) statement -> IF ( . expression ) statement ELSE statement
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 74
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 41

    (56) statement -> PRINT inner_table . ;
    (9) inner_table -> inner_table . , expression

    ;               shift and go to state 75
    ,               shift and go to state 76


state 42

    (10) inner_table -> expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 10 (inner_table -> expression .)
    ,               reduce using rule 10 (inner_table -> expression .)
    ]               reduce using rule 10 (inner_table -> expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 43

    (40) statement -> slice_or_id ASSIGN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 77
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 44

    (41) statement -> slice_or_id MINUS_ASSIGN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 78
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 45

    (42) statement -> slice_or_id PLUS_ASSIGN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 79
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 46

    (43) statement -> slice_or_id TIMES_ASSIGN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 80
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 47

    (44) statement -> slice_or_id DIVIDE_ASSIGN expression . ;
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               shift and go to state 81
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 48

    (48) statement -> RETURN expression ; .

    RETURN          reduce using rule 48 (statement -> RETURN expression ; .)
    {               reduce using rule 48 (statement -> RETURN expression ; .)
    BREAK           reduce using rule 48 (statement -> RETURN expression ; .)
    CONTINUE        reduce using rule 48 (statement -> RETURN expression ; .)
    FOR             reduce using rule 48 (statement -> RETURN expression ; .)
    WHILE           reduce using rule 48 (statement -> RETURN expression ; .)
    IF              reduce using rule 48 (statement -> RETURN expression ; .)
    PRINT           reduce using rule 48 (statement -> RETURN expression ; .)
    ID              reduce using rule 48 (statement -> RETURN expression ; .)
    $end            reduce using rule 48 (statement -> RETURN expression ; .)
    }               reduce using rule 48 (statement -> RETURN expression ; .)
    ELSE            reduce using rule 48 (statement -> RETURN expression ; .)


state 49

    (17) expression -> expression PLUS . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 82
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 50

    (18) expression -> expression MINUS . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 83
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 51

    (19) expression -> expression TIMES . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 84
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 52

    (20) expression -> expression DIVIDE . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 85
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 53

    (21) expression -> expression PLUS_MAT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 86
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 54

    (22) expression -> expression MINUS_MAT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 87
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 55

    (23) expression -> expression TIMES_MAT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 88
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 56

    (24) expression -> expression DIVIDE_MAT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 89
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 57

    (25) expression -> expression TRANSPOSE .

    ;               reduce using rule 25 (expression -> expression TRANSPOSE .)
    PLUS            reduce using rule 25 (expression -> expression TRANSPOSE .)
    MINUS           reduce using rule 25 (expression -> expression TRANSPOSE .)
    TIMES           reduce using rule 25 (expression -> expression TRANSPOSE .)
    DIVIDE          reduce using rule 25 (expression -> expression TRANSPOSE .)
    PLUS_MAT        reduce using rule 25 (expression -> expression TRANSPOSE .)
    MINUS_MAT       reduce using rule 25 (expression -> expression TRANSPOSE .)
    TIMES_MAT       reduce using rule 25 (expression -> expression TRANSPOSE .)
    DIVIDE_MAT      reduce using rule 25 (expression -> expression TRANSPOSE .)
    TRANSPOSE       reduce using rule 25 (expression -> expression TRANSPOSE .)
    EQ              reduce using rule 25 (expression -> expression TRANSPOSE .)
    NE              reduce using rule 25 (expression -> expression TRANSPOSE .)
    GT              reduce using rule 25 (expression -> expression TRANSPOSE .)
    GE              reduce using rule 25 (expression -> expression TRANSPOSE .)
    LT              reduce using rule 25 (expression -> expression TRANSPOSE .)
    LE              reduce using rule 25 (expression -> expression TRANSPOSE .)
    ,               reduce using rule 25 (expression -> expression TRANSPOSE .)
    ]               reduce using rule 25 (expression -> expression TRANSPOSE .)
    :               reduce using rule 25 (expression -> expression TRANSPOSE .)
    )               reduce using rule 25 (expression -> expression TRANSPOSE .)
    RETURN          reduce using rule 25 (expression -> expression TRANSPOSE .)
    {               reduce using rule 25 (expression -> expression TRANSPOSE .)
    BREAK           reduce using rule 25 (expression -> expression TRANSPOSE .)
    CONTINUE        reduce using rule 25 (expression -> expression TRANSPOSE .)
    FOR             reduce using rule 25 (expression -> expression TRANSPOSE .)
    WHILE           reduce using rule 25 (expression -> expression TRANSPOSE .)
    IF              reduce using rule 25 (expression -> expression TRANSPOSE .)
    PRINT           reduce using rule 25 (expression -> expression TRANSPOSE .)
    ID              reduce using rule 25 (expression -> expression TRANSPOSE .)


state 58

    (26) expression -> expression EQ . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 90
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 59

    (27) expression -> expression NE . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 91
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 60

    (28) expression -> expression GT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 92
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 61

    (29) expression -> expression GE . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 93
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 62

    (30) expression -> expression LT . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 94
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 63

    (31) expression -> expression LE . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 95
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 64

    (11) expression -> [ inner_table . ]
    (9) inner_table -> inner_table . , expression

    ]               shift and go to state 96
    ,               shift and go to state 76


state 65

    (12) expression -> ZEROS ( . expression )
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 97
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 66

    (13) expression -> EYE ( . expression )
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 98
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 67

    (14) expression -> ONES ( . expression )
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 99
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 68

    (16) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 16 (expression -> MINUS expression .)
    PLUS            reduce using rule 16 (expression -> MINUS expression .)
    MINUS           reduce using rule 16 (expression -> MINUS expression .)
    TRANSPOSE       reduce using rule 16 (expression -> MINUS expression .)
    EQ              reduce using rule 16 (expression -> MINUS expression .)
    NE              reduce using rule 16 (expression -> MINUS expression .)
    GT              reduce using rule 16 (expression -> MINUS expression .)
    GE              reduce using rule 16 (expression -> MINUS expression .)
    LT              reduce using rule 16 (expression -> MINUS expression .)
    LE              reduce using rule 16 (expression -> MINUS expression .)
    ,               reduce using rule 16 (expression -> MINUS expression .)
    ]               reduce using rule 16 (expression -> MINUS expression .)
    :               reduce using rule 16 (expression -> MINUS expression .)
    )               reduce using rule 16 (expression -> MINUS expression .)
    RETURN          reduce using rule 16 (expression -> MINUS expression .)
    {               reduce using rule 16 (expression -> MINUS expression .)
    BREAK           reduce using rule 16 (expression -> MINUS expression .)
    CONTINUE        reduce using rule 16 (expression -> MINUS expression .)
    FOR             reduce using rule 16 (expression -> MINUS expression .)
    WHILE           reduce using rule 16 (expression -> MINUS expression .)
    IF              reduce using rule 16 (expression -> MINUS expression .)
    PRINT           reduce using rule 16 (expression -> MINUS expression .)
    ID              reduce using rule 16 (expression -> MINUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! TIMES           [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 16 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 69

    (49) statement -> { statements_list } .

    RETURN          reduce using rule 49 (statement -> { statements_list } .)
    {               reduce using rule 49 (statement -> { statements_list } .)
    BREAK           reduce using rule 49 (statement -> { statements_list } .)
    CONTINUE        reduce using rule 49 (statement -> { statements_list } .)
    FOR             reduce using rule 49 (statement -> { statements_list } .)
    WHILE           reduce using rule 49 (statement -> { statements_list } .)
    IF              reduce using rule 49 (statement -> { statements_list } .)
    PRINT           reduce using rule 49 (statement -> { statements_list } .)
    ID              reduce using rule 49 (statement -> { statements_list } .)
    $end            reduce using rule 49 (statement -> { statements_list } .)
    }               reduce using rule 49 (statement -> { statements_list } .)
    ELSE            reduce using rule 49 (statement -> { statements_list } .)


state 70

    (52) statement -> FOR ID ASSIGN . range statement
    (15) range -> . expression : expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    range                          shift and go to state 100
    expression                     shift and go to state 101
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 71

    (32) slice -> ID [ expression . ]
    (34) slice -> ID [ expression . , expression ]
    (35) slice -> ID [ expression . , range ]
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression
    (15) range -> expression . : expression

    ]               shift and go to state 102
    ,               shift and go to state 103
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63
    :               shift and go to state 104


state 72

    (33) slice -> ID [ range . ]
    (36) slice -> ID [ range . , expression ]
    (37) slice -> ID [ range . , range ]

    ]               shift and go to state 105
    ,               shift and go to state 106


state 73

    (53) statement -> WHILE ( expression . ) statement
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    )               shift and go to state 107
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 74

    (54) statement -> IF ( expression . ) statement
    (55) statement -> IF ( expression . ) statement ELSE statement
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    )               shift and go to state 108
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 75

    (56) statement -> PRINT inner_table ; .

    RETURN          reduce using rule 56 (statement -> PRINT inner_table ; .)
    {               reduce using rule 56 (statement -> PRINT inner_table ; .)
    BREAK           reduce using rule 56 (statement -> PRINT inner_table ; .)
    CONTINUE        reduce using rule 56 (statement -> PRINT inner_table ; .)
    FOR             reduce using rule 56 (statement -> PRINT inner_table ; .)
    WHILE           reduce using rule 56 (statement -> PRINT inner_table ; .)
    IF              reduce using rule 56 (statement -> PRINT inner_table ; .)
    PRINT           reduce using rule 56 (statement -> PRINT inner_table ; .)
    ID              reduce using rule 56 (statement -> PRINT inner_table ; .)
    $end            reduce using rule 56 (statement -> PRINT inner_table ; .)
    }               reduce using rule 56 (statement -> PRINT inner_table ; .)
    ELSE            reduce using rule 56 (statement -> PRINT inner_table ; .)


state 76

    (9) inner_table -> inner_table , . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 109
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 77

    (40) statement -> slice_or_id ASSIGN expression ; .

    RETURN          reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    {               reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    BREAK           reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    CONTINUE        reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    FOR             reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    WHILE           reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    IF              reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    PRINT           reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    ID              reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    $end            reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    }               reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)
    ELSE            reduce using rule 40 (statement -> slice_or_id ASSIGN expression ; .)


state 78

    (41) statement -> slice_or_id MINUS_ASSIGN expression ; .

    RETURN          reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    {               reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    BREAK           reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    FOR             reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    WHILE           reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    IF              reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    PRINT           reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    ID              reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    $end            reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    }               reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)
    ELSE            reduce using rule 41 (statement -> slice_or_id MINUS_ASSIGN expression ; .)


state 79

    (42) statement -> slice_or_id PLUS_ASSIGN expression ; .

    RETURN          reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    {               reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    BREAK           reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    CONTINUE        reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    FOR             reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    WHILE           reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    IF              reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    PRINT           reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    ID              reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    $end            reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    }               reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)
    ELSE            reduce using rule 42 (statement -> slice_or_id PLUS_ASSIGN expression ; .)


state 80

    (43) statement -> slice_or_id TIMES_ASSIGN expression ; .

    RETURN          reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    {               reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    BREAK           reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    CONTINUE        reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    FOR             reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    WHILE           reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    IF              reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    PRINT           reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    ID              reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    $end            reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    }               reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)
    ELSE            reduce using rule 43 (statement -> slice_or_id TIMES_ASSIGN expression ; .)


state 81

    (44) statement -> slice_or_id DIVIDE_ASSIGN expression ; .

    RETURN          reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    {               reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    BREAK           reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    CONTINUE        reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    FOR             reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    WHILE           reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    IF              reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    PRINT           reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    ID              reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    $end            reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    }               reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)
    ELSE            reduce using rule 44 (statement -> slice_or_id DIVIDE_ASSIGN expression ; .)


state 82

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 17 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    TRANSPOSE       reduce using rule 17 (expression -> expression PLUS expression .)
    EQ              reduce using rule 17 (expression -> expression PLUS expression .)
    NE              reduce using rule 17 (expression -> expression PLUS expression .)
    GT              reduce using rule 17 (expression -> expression PLUS expression .)
    GE              reduce using rule 17 (expression -> expression PLUS expression .)
    LT              reduce using rule 17 (expression -> expression PLUS expression .)
    LE              reduce using rule 17 (expression -> expression PLUS expression .)
    ,               reduce using rule 17 (expression -> expression PLUS expression .)
    ]               reduce using rule 17 (expression -> expression PLUS expression .)
    :               reduce using rule 17 (expression -> expression PLUS expression .)
    )               reduce using rule 17 (expression -> expression PLUS expression .)
    RETURN          reduce using rule 17 (expression -> expression PLUS expression .)
    {               reduce using rule 17 (expression -> expression PLUS expression .)
    BREAK           reduce using rule 17 (expression -> expression PLUS expression .)
    CONTINUE        reduce using rule 17 (expression -> expression PLUS expression .)
    FOR             reduce using rule 17 (expression -> expression PLUS expression .)
    WHILE           reduce using rule 17 (expression -> expression PLUS expression .)
    IF              reduce using rule 17 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 17 (expression -> expression PLUS expression .)
    ID              reduce using rule 17 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 83

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 18 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    TRANSPOSE       reduce using rule 18 (expression -> expression MINUS expression .)
    EQ              reduce using rule 18 (expression -> expression MINUS expression .)
    NE              reduce using rule 18 (expression -> expression MINUS expression .)
    GT              reduce using rule 18 (expression -> expression MINUS expression .)
    GE              reduce using rule 18 (expression -> expression MINUS expression .)
    LT              reduce using rule 18 (expression -> expression MINUS expression .)
    LE              reduce using rule 18 (expression -> expression MINUS expression .)
    ,               reduce using rule 18 (expression -> expression MINUS expression .)
    ]               reduce using rule 18 (expression -> expression MINUS expression .)
    :               reduce using rule 18 (expression -> expression MINUS expression .)
    )               reduce using rule 18 (expression -> expression MINUS expression .)
    RETURN          reduce using rule 18 (expression -> expression MINUS expression .)
    {               reduce using rule 18 (expression -> expression MINUS expression .)
    BREAK           reduce using rule 18 (expression -> expression MINUS expression .)
    CONTINUE        reduce using rule 18 (expression -> expression MINUS expression .)
    FOR             reduce using rule 18 (expression -> expression MINUS expression .)
    WHILE           reduce using rule 18 (expression -> expression MINUS expression .)
    IF              reduce using rule 18 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 18 (expression -> expression MINUS expression .)
    ID              reduce using rule 18 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS_MAT        [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! MINUS_MAT       [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! TIMES_MAT       [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 84

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    TRANSPOSE       reduce using rule 19 (expression -> expression TIMES expression .)
    EQ              reduce using rule 19 (expression -> expression TIMES expression .)
    NE              reduce using rule 19 (expression -> expression TIMES expression .)
    GT              reduce using rule 19 (expression -> expression TIMES expression .)
    GE              reduce using rule 19 (expression -> expression TIMES expression .)
    LT              reduce using rule 19 (expression -> expression TIMES expression .)
    LE              reduce using rule 19 (expression -> expression TIMES expression .)
    ,               reduce using rule 19 (expression -> expression TIMES expression .)
    ]               reduce using rule 19 (expression -> expression TIMES expression .)
    :               reduce using rule 19 (expression -> expression TIMES expression .)
    )               reduce using rule 19 (expression -> expression TIMES expression .)
    RETURN          reduce using rule 19 (expression -> expression TIMES expression .)
    {               reduce using rule 19 (expression -> expression TIMES expression .)
    BREAK           reduce using rule 19 (expression -> expression TIMES expression .)
    CONTINUE        reduce using rule 19 (expression -> expression TIMES expression .)
    FOR             reduce using rule 19 (expression -> expression TIMES expression .)
    WHILE           reduce using rule 19 (expression -> expression TIMES expression .)
    IF              reduce using rule 19 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 19 (expression -> expression TIMES expression .)
    ID              reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS_MAT        [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! MINUS_MAT       [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! TIMES_MAT       [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 19 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 85

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    TRANSPOSE       reduce using rule 20 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 20 (expression -> expression DIVIDE expression .)
    NE              reduce using rule 20 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 20 (expression -> expression DIVIDE expression .)
    GE              reduce using rule 20 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 20 (expression -> expression DIVIDE expression .)
    LE              reduce using rule 20 (expression -> expression DIVIDE expression .)
    ,               reduce using rule 20 (expression -> expression DIVIDE expression .)
    ]               reduce using rule 20 (expression -> expression DIVIDE expression .)
    :               reduce using rule 20 (expression -> expression DIVIDE expression .)
    )               reduce using rule 20 (expression -> expression DIVIDE expression .)
    RETURN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    {               reduce using rule 20 (expression -> expression DIVIDE expression .)
    BREAK           reduce using rule 20 (expression -> expression DIVIDE expression .)
    CONTINUE        reduce using rule 20 (expression -> expression DIVIDE expression .)
    FOR             reduce using rule 20 (expression -> expression DIVIDE expression .)
    WHILE           reduce using rule 20 (expression -> expression DIVIDE expression .)
    IF              reduce using rule 20 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 20 (expression -> expression DIVIDE expression .)
    ID              reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS_MAT        [ reduce using rule 20 (expression -> expression DIVIDE expression .) ]
  ! MINUS_MAT       [ reduce using rule 20 (expression -> expression DIVIDE expression .) ]
  ! TIMES_MAT       [ reduce using rule 20 (expression -> expression DIVIDE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 20 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 86

    (21) expression -> expression PLUS_MAT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    PLUS            reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    MINUS           reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    TIMES           reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    DIVIDE          reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    PLUS_MAT        reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    MINUS_MAT       reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    TRANSPOSE       reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    EQ              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    NE              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    GT              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    GE              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    LT              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    LE              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    ,               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    ]               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    :               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    )               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    RETURN          reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    {               reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    BREAK           reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    CONTINUE        reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    FOR             reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    WHILE           reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    IF              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    PRINT           reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    ID              reduce using rule 21 (expression -> expression PLUS_MAT expression .)
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! TIMES_MAT       [ reduce using rule 21 (expression -> expression PLUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 21 (expression -> expression PLUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! PLUS_MAT        [ shift and go to state 53 ]
  ! MINUS_MAT       [ shift and go to state 54 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 87

    (22) expression -> expression MINUS_MAT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    PLUS            reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    MINUS           reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    TIMES           reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    DIVIDE          reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    PLUS_MAT        reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    MINUS_MAT       reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    TRANSPOSE       reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    EQ              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    NE              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    GT              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    GE              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    LT              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    LE              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    ,               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    ]               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    :               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    )               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    RETURN          reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    {               reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    BREAK           reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    CONTINUE        reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    FOR             reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    WHILE           reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    IF              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    PRINT           reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    ID              reduce using rule 22 (expression -> expression MINUS_MAT expression .)
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! TIMES_MAT       [ reduce using rule 22 (expression -> expression MINUS_MAT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 22 (expression -> expression MINUS_MAT expression .) ]
  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! PLUS_MAT        [ shift and go to state 53 ]
  ! MINUS_MAT       [ shift and go to state 54 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 88

    (23) expression -> expression TIMES_MAT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    PLUS            reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    MINUS           reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    TIMES           reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    DIVIDE          reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    PLUS_MAT        reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    MINUS_MAT       reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    TIMES_MAT       reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    DIVIDE_MAT      reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    TRANSPOSE       reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    EQ              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    NE              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    GT              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    GE              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    LT              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    LE              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    ,               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    ]               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    :               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    )               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    RETURN          reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    {               reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    BREAK           reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    CONTINUE        reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    FOR             reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    WHILE           reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    IF              reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    PRINT           reduce using rule 23 (expression -> expression TIMES_MAT expression .)
    ID              reduce using rule 23 (expression -> expression TIMES_MAT expression .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! PLUS_MAT        [ shift and go to state 53 ]
  ! MINUS_MAT       [ shift and go to state 54 ]
  ! TIMES_MAT       [ shift and go to state 55 ]
  ! DIVIDE_MAT      [ shift and go to state 56 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 89

    (24) expression -> expression DIVIDE_MAT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    PLUS            reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    MINUS           reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    TIMES           reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE          reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    PLUS_MAT        reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    MINUS_MAT       reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    TIMES_MAT       reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    DIVIDE_MAT      reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    TRANSPOSE       reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    EQ              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    NE              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    GT              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    GE              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    LT              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    LE              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    ,               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    ]               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    :               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    )               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    RETURN          reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    {               reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    BREAK           reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    CONTINUE        reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    FOR             reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    WHILE           reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    IF              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    PRINT           reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)
    ID              reduce using rule 24 (expression -> expression DIVIDE_MAT expression .)

  ! PLUS            [ shift and go to state 49 ]
  ! MINUS           [ shift and go to state 50 ]
  ! TIMES           [ shift and go to state 51 ]
  ! DIVIDE          [ shift and go to state 52 ]
  ! PLUS_MAT        [ shift and go to state 53 ]
  ! MINUS_MAT       [ shift and go to state 54 ]
  ! TIMES_MAT       [ shift and go to state 55 ]
  ! DIVIDE_MAT      [ shift and go to state 56 ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 90

    (26) expression -> expression EQ expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 26 (expression -> expression EQ expression .)
    TRANSPOSE       reduce using rule 26 (expression -> expression EQ expression .)
    EQ              reduce using rule 26 (expression -> expression EQ expression .)
    NE              reduce using rule 26 (expression -> expression EQ expression .)
    GT              reduce using rule 26 (expression -> expression EQ expression .)
    GE              reduce using rule 26 (expression -> expression EQ expression .)
    LT              reduce using rule 26 (expression -> expression EQ expression .)
    LE              reduce using rule 26 (expression -> expression EQ expression .)
    ,               reduce using rule 26 (expression -> expression EQ expression .)
    ]               reduce using rule 26 (expression -> expression EQ expression .)
    :               reduce using rule 26 (expression -> expression EQ expression .)
    )               reduce using rule 26 (expression -> expression EQ expression .)
    RETURN          reduce using rule 26 (expression -> expression EQ expression .)
    {               reduce using rule 26 (expression -> expression EQ expression .)
    BREAK           reduce using rule 26 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 26 (expression -> expression EQ expression .)
    FOR             reduce using rule 26 (expression -> expression EQ expression .)
    WHILE           reduce using rule 26 (expression -> expression EQ expression .)
    IF              reduce using rule 26 (expression -> expression EQ expression .)
    PRINT           reduce using rule 26 (expression -> expression EQ expression .)
    ID              reduce using rule 26 (expression -> expression EQ expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! PLUS_MAT        [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! MINUS_MAT       [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! TIMES_MAT       [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 26 (expression -> expression EQ expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 91

    (27) expression -> expression NE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 27 (expression -> expression NE expression .)
    TRANSPOSE       reduce using rule 27 (expression -> expression NE expression .)
    EQ              reduce using rule 27 (expression -> expression NE expression .)
    NE              reduce using rule 27 (expression -> expression NE expression .)
    GT              reduce using rule 27 (expression -> expression NE expression .)
    GE              reduce using rule 27 (expression -> expression NE expression .)
    LT              reduce using rule 27 (expression -> expression NE expression .)
    LE              reduce using rule 27 (expression -> expression NE expression .)
    ,               reduce using rule 27 (expression -> expression NE expression .)
    ]               reduce using rule 27 (expression -> expression NE expression .)
    :               reduce using rule 27 (expression -> expression NE expression .)
    )               reduce using rule 27 (expression -> expression NE expression .)
    RETURN          reduce using rule 27 (expression -> expression NE expression .)
    {               reduce using rule 27 (expression -> expression NE expression .)
    BREAK           reduce using rule 27 (expression -> expression NE expression .)
    CONTINUE        reduce using rule 27 (expression -> expression NE expression .)
    FOR             reduce using rule 27 (expression -> expression NE expression .)
    WHILE           reduce using rule 27 (expression -> expression NE expression .)
    IF              reduce using rule 27 (expression -> expression NE expression .)
    PRINT           reduce using rule 27 (expression -> expression NE expression .)
    ID              reduce using rule 27 (expression -> expression NE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! TIMES           [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DIVIDE          [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! PLUS_MAT        [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! MINUS_MAT       [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! TIMES_MAT       [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 27 (expression -> expression NE expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 92

    (28) expression -> expression GT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 28 (expression -> expression GT expression .)
    TRANSPOSE       reduce using rule 28 (expression -> expression GT expression .)
    EQ              reduce using rule 28 (expression -> expression GT expression .)
    NE              reduce using rule 28 (expression -> expression GT expression .)
    GT              reduce using rule 28 (expression -> expression GT expression .)
    GE              reduce using rule 28 (expression -> expression GT expression .)
    LT              reduce using rule 28 (expression -> expression GT expression .)
    LE              reduce using rule 28 (expression -> expression GT expression .)
    ,               reduce using rule 28 (expression -> expression GT expression .)
    ]               reduce using rule 28 (expression -> expression GT expression .)
    :               reduce using rule 28 (expression -> expression GT expression .)
    )               reduce using rule 28 (expression -> expression GT expression .)
    RETURN          reduce using rule 28 (expression -> expression GT expression .)
    {               reduce using rule 28 (expression -> expression GT expression .)
    BREAK           reduce using rule 28 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 28 (expression -> expression GT expression .)
    FOR             reduce using rule 28 (expression -> expression GT expression .)
    WHILE           reduce using rule 28 (expression -> expression GT expression .)
    IF              reduce using rule 28 (expression -> expression GT expression .)
    PRINT           reduce using rule 28 (expression -> expression GT expression .)
    ID              reduce using rule 28 (expression -> expression GT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! PLUS_MAT        [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! MINUS_MAT       [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! TIMES_MAT       [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 28 (expression -> expression GT expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 93

    (29) expression -> expression GE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 29 (expression -> expression GE expression .)
    TRANSPOSE       reduce using rule 29 (expression -> expression GE expression .)
    EQ              reduce using rule 29 (expression -> expression GE expression .)
    NE              reduce using rule 29 (expression -> expression GE expression .)
    GT              reduce using rule 29 (expression -> expression GE expression .)
    GE              reduce using rule 29 (expression -> expression GE expression .)
    LT              reduce using rule 29 (expression -> expression GE expression .)
    LE              reduce using rule 29 (expression -> expression GE expression .)
    ,               reduce using rule 29 (expression -> expression GE expression .)
    ]               reduce using rule 29 (expression -> expression GE expression .)
    :               reduce using rule 29 (expression -> expression GE expression .)
    )               reduce using rule 29 (expression -> expression GE expression .)
    RETURN          reduce using rule 29 (expression -> expression GE expression .)
    {               reduce using rule 29 (expression -> expression GE expression .)
    BREAK           reduce using rule 29 (expression -> expression GE expression .)
    CONTINUE        reduce using rule 29 (expression -> expression GE expression .)
    FOR             reduce using rule 29 (expression -> expression GE expression .)
    WHILE           reduce using rule 29 (expression -> expression GE expression .)
    IF              reduce using rule 29 (expression -> expression GE expression .)
    PRINT           reduce using rule 29 (expression -> expression GE expression .)
    ID              reduce using rule 29 (expression -> expression GE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! PLUS_MAT        [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! MINUS_MAT       [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! TIMES_MAT       [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 29 (expression -> expression GE expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 94

    (30) expression -> expression LT expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 30 (expression -> expression LT expression .)
    TRANSPOSE       reduce using rule 30 (expression -> expression LT expression .)
    EQ              reduce using rule 30 (expression -> expression LT expression .)
    NE              reduce using rule 30 (expression -> expression LT expression .)
    GT              reduce using rule 30 (expression -> expression LT expression .)
    GE              reduce using rule 30 (expression -> expression LT expression .)
    LT              reduce using rule 30 (expression -> expression LT expression .)
    LE              reduce using rule 30 (expression -> expression LT expression .)
    ,               reduce using rule 30 (expression -> expression LT expression .)
    ]               reduce using rule 30 (expression -> expression LT expression .)
    :               reduce using rule 30 (expression -> expression LT expression .)
    )               reduce using rule 30 (expression -> expression LT expression .)
    RETURN          reduce using rule 30 (expression -> expression LT expression .)
    {               reduce using rule 30 (expression -> expression LT expression .)
    BREAK           reduce using rule 30 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 30 (expression -> expression LT expression .)
    FOR             reduce using rule 30 (expression -> expression LT expression .)
    WHILE           reduce using rule 30 (expression -> expression LT expression .)
    IF              reduce using rule 30 (expression -> expression LT expression .)
    PRINT           reduce using rule 30 (expression -> expression LT expression .)
    ID              reduce using rule 30 (expression -> expression LT expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! PLUS_MAT        [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! MINUS_MAT       [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! TIMES_MAT       [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 30 (expression -> expression LT expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 95

    (31) expression -> expression LE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 31 (expression -> expression LE expression .)
    TRANSPOSE       reduce using rule 31 (expression -> expression LE expression .)
    EQ              reduce using rule 31 (expression -> expression LE expression .)
    NE              reduce using rule 31 (expression -> expression LE expression .)
    GT              reduce using rule 31 (expression -> expression LE expression .)
    GE              reduce using rule 31 (expression -> expression LE expression .)
    LT              reduce using rule 31 (expression -> expression LE expression .)
    LE              reduce using rule 31 (expression -> expression LE expression .)
    ,               reduce using rule 31 (expression -> expression LE expression .)
    ]               reduce using rule 31 (expression -> expression LE expression .)
    :               reduce using rule 31 (expression -> expression LE expression .)
    )               reduce using rule 31 (expression -> expression LE expression .)
    RETURN          reduce using rule 31 (expression -> expression LE expression .)
    {               reduce using rule 31 (expression -> expression LE expression .)
    BREAK           reduce using rule 31 (expression -> expression LE expression .)
    CONTINUE        reduce using rule 31 (expression -> expression LE expression .)
    FOR             reduce using rule 31 (expression -> expression LE expression .)
    WHILE           reduce using rule 31 (expression -> expression LE expression .)
    IF              reduce using rule 31 (expression -> expression LE expression .)
    PRINT           reduce using rule 31 (expression -> expression LE expression .)
    ID              reduce using rule 31 (expression -> expression LE expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56

  ! PLUS            [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! PLUS_MAT        [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! MINUS_MAT       [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! TIMES_MAT       [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! DIVIDE_MAT      [ reduce using rule 31 (expression -> expression LE expression .) ]
  ! TRANSPOSE       [ shift and go to state 57 ]
  ! EQ              [ shift and go to state 58 ]
  ! NE              [ shift and go to state 59 ]
  ! GT              [ shift and go to state 60 ]
  ! GE              [ shift and go to state 61 ]
  ! LT              [ shift and go to state 62 ]
  ! LE              [ shift and go to state 63 ]


state 96

    (11) expression -> [ inner_table ] .

    ;               reduce using rule 11 (expression -> [ inner_table ] .)
    PLUS            reduce using rule 11 (expression -> [ inner_table ] .)
    MINUS           reduce using rule 11 (expression -> [ inner_table ] .)
    TIMES           reduce using rule 11 (expression -> [ inner_table ] .)
    DIVIDE          reduce using rule 11 (expression -> [ inner_table ] .)
    PLUS_MAT        reduce using rule 11 (expression -> [ inner_table ] .)
    MINUS_MAT       reduce using rule 11 (expression -> [ inner_table ] .)
    TIMES_MAT       reduce using rule 11 (expression -> [ inner_table ] .)
    DIVIDE_MAT      reduce using rule 11 (expression -> [ inner_table ] .)
    TRANSPOSE       reduce using rule 11 (expression -> [ inner_table ] .)
    EQ              reduce using rule 11 (expression -> [ inner_table ] .)
    NE              reduce using rule 11 (expression -> [ inner_table ] .)
    GT              reduce using rule 11 (expression -> [ inner_table ] .)
    GE              reduce using rule 11 (expression -> [ inner_table ] .)
    LT              reduce using rule 11 (expression -> [ inner_table ] .)
    LE              reduce using rule 11 (expression -> [ inner_table ] .)
    ,               reduce using rule 11 (expression -> [ inner_table ] .)
    ]               reduce using rule 11 (expression -> [ inner_table ] .)
    :               reduce using rule 11 (expression -> [ inner_table ] .)
    )               reduce using rule 11 (expression -> [ inner_table ] .)
    RETURN          reduce using rule 11 (expression -> [ inner_table ] .)
    {               reduce using rule 11 (expression -> [ inner_table ] .)
    BREAK           reduce using rule 11 (expression -> [ inner_table ] .)
    CONTINUE        reduce using rule 11 (expression -> [ inner_table ] .)
    FOR             reduce using rule 11 (expression -> [ inner_table ] .)
    WHILE           reduce using rule 11 (expression -> [ inner_table ] .)
    IF              reduce using rule 11 (expression -> [ inner_table ] .)
    PRINT           reduce using rule 11 (expression -> [ inner_table ] .)
    ID              reduce using rule 11 (expression -> [ inner_table ] .)


state 97

    (12) expression -> ZEROS ( expression . )
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    )               shift and go to state 110
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 98

    (13) expression -> EYE ( expression . )
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    )               shift and go to state 111
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 99

    (14) expression -> ONES ( expression . )
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    )               shift and go to state 112
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 100

    (52) statement -> FOR ID ASSIGN range . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 113
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 101

    (15) range -> expression . : expression
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    :               shift and go to state 104
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 102

    (32) slice -> ID [ expression ] .

    ASSIGN          reduce using rule 32 (slice -> ID [ expression ] .)
    MINUS_ASSIGN    reduce using rule 32 (slice -> ID [ expression ] .)
    PLUS_ASSIGN     reduce using rule 32 (slice -> ID [ expression ] .)
    TIMES_ASSIGN    reduce using rule 32 (slice -> ID [ expression ] .)
    DIVIDE_ASSIGN   reduce using rule 32 (slice -> ID [ expression ] .)
    ;               reduce using rule 32 (slice -> ID [ expression ] .)
    PLUS            reduce using rule 32 (slice -> ID [ expression ] .)
    MINUS           reduce using rule 32 (slice -> ID [ expression ] .)
    TIMES           reduce using rule 32 (slice -> ID [ expression ] .)
    DIVIDE          reduce using rule 32 (slice -> ID [ expression ] .)
    PLUS_MAT        reduce using rule 32 (slice -> ID [ expression ] .)
    MINUS_MAT       reduce using rule 32 (slice -> ID [ expression ] .)
    TIMES_MAT       reduce using rule 32 (slice -> ID [ expression ] .)
    DIVIDE_MAT      reduce using rule 32 (slice -> ID [ expression ] .)
    TRANSPOSE       reduce using rule 32 (slice -> ID [ expression ] .)
    EQ              reduce using rule 32 (slice -> ID [ expression ] .)
    NE              reduce using rule 32 (slice -> ID [ expression ] .)
    GT              reduce using rule 32 (slice -> ID [ expression ] .)
    GE              reduce using rule 32 (slice -> ID [ expression ] .)
    LT              reduce using rule 32 (slice -> ID [ expression ] .)
    LE              reduce using rule 32 (slice -> ID [ expression ] .)
    ,               reduce using rule 32 (slice -> ID [ expression ] .)
    ]               reduce using rule 32 (slice -> ID [ expression ] .)
    :               reduce using rule 32 (slice -> ID [ expression ] .)
    )               reduce using rule 32 (slice -> ID [ expression ] .)
    RETURN          reduce using rule 32 (slice -> ID [ expression ] .)
    {               reduce using rule 32 (slice -> ID [ expression ] .)
    BREAK           reduce using rule 32 (slice -> ID [ expression ] .)
    CONTINUE        reduce using rule 32 (slice -> ID [ expression ] .)
    FOR             reduce using rule 32 (slice -> ID [ expression ] .)
    WHILE           reduce using rule 32 (slice -> ID [ expression ] .)
    IF              reduce using rule 32 (slice -> ID [ expression ] .)
    PRINT           reduce using rule 32 (slice -> ID [ expression ] .)
    ID              reduce using rule 32 (slice -> ID [ expression ] .)


state 103

    (34) slice -> ID [ expression , . expression ]
    (35) slice -> ID [ expression , . range ]
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (15) range -> . expression : expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 114
    range                          shift and go to state 115
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 104

    (15) range -> expression : . expression
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    expression                     shift and go to state 116
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 105

    (33) slice -> ID [ range ] .

    ASSIGN          reduce using rule 33 (slice -> ID [ range ] .)
    MINUS_ASSIGN    reduce using rule 33 (slice -> ID [ range ] .)
    PLUS_ASSIGN     reduce using rule 33 (slice -> ID [ range ] .)
    TIMES_ASSIGN    reduce using rule 33 (slice -> ID [ range ] .)
    DIVIDE_ASSIGN   reduce using rule 33 (slice -> ID [ range ] .)
    ;               reduce using rule 33 (slice -> ID [ range ] .)
    PLUS            reduce using rule 33 (slice -> ID [ range ] .)
    MINUS           reduce using rule 33 (slice -> ID [ range ] .)
    TIMES           reduce using rule 33 (slice -> ID [ range ] .)
    DIVIDE          reduce using rule 33 (slice -> ID [ range ] .)
    PLUS_MAT        reduce using rule 33 (slice -> ID [ range ] .)
    MINUS_MAT       reduce using rule 33 (slice -> ID [ range ] .)
    TIMES_MAT       reduce using rule 33 (slice -> ID [ range ] .)
    DIVIDE_MAT      reduce using rule 33 (slice -> ID [ range ] .)
    TRANSPOSE       reduce using rule 33 (slice -> ID [ range ] .)
    EQ              reduce using rule 33 (slice -> ID [ range ] .)
    NE              reduce using rule 33 (slice -> ID [ range ] .)
    GT              reduce using rule 33 (slice -> ID [ range ] .)
    GE              reduce using rule 33 (slice -> ID [ range ] .)
    LT              reduce using rule 33 (slice -> ID [ range ] .)
    LE              reduce using rule 33 (slice -> ID [ range ] .)
    ,               reduce using rule 33 (slice -> ID [ range ] .)
    ]               reduce using rule 33 (slice -> ID [ range ] .)
    :               reduce using rule 33 (slice -> ID [ range ] .)
    )               reduce using rule 33 (slice -> ID [ range ] .)
    RETURN          reduce using rule 33 (slice -> ID [ range ] .)
    {               reduce using rule 33 (slice -> ID [ range ] .)
    BREAK           reduce using rule 33 (slice -> ID [ range ] .)
    CONTINUE        reduce using rule 33 (slice -> ID [ range ] .)
    FOR             reduce using rule 33 (slice -> ID [ range ] .)
    WHILE           reduce using rule 33 (slice -> ID [ range ] .)
    IF              reduce using rule 33 (slice -> ID [ range ] .)
    PRINT           reduce using rule 33 (slice -> ID [ range ] .)
    ID              reduce using rule 33 (slice -> ID [ range ] .)


state 106

    (36) slice -> ID [ range , . expression ]
    (37) slice -> ID [ range , . range ]
    (6) expression -> . slice_or_id
    (7) expression -> . number
    (8) expression -> . STRING
    (11) expression -> . [ inner_table ]
    (12) expression -> . ZEROS ( expression )
    (13) expression -> . EYE ( expression )
    (14) expression -> . ONES ( expression )
    (16) expression -> . MINUS expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . expression PLUS_MAT expression
    (22) expression -> . expression MINUS_MAT expression
    (23) expression -> . expression TIMES_MAT expression
    (24) expression -> . expression DIVIDE_MAT expression
    (25) expression -> . expression TRANSPOSE
    (26) expression -> . expression EQ expression
    (27) expression -> . expression NE expression
    (28) expression -> . expression GT expression
    (29) expression -> . expression GE expression
    (30) expression -> . expression LT expression
    (31) expression -> . expression LE expression
    (15) range -> . expression : expression
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (4) number -> . INT
    (5) number -> . FLOAT
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    STRING          shift and go to state 26
    [               shift and go to state 27
    ZEROS           shift and go to state 28
    EYE             shift and go to state 29
    ONES            shift and go to state 30
    MINUS           shift and go to state 31
    ID              shift and go to state 11
    INT             shift and go to state 32
    FLOAT           shift and go to state 33

    range                          shift and go to state 117
    expression                     shift and go to state 118
    slice_or_id                    shift and go to state 24
    number                         shift and go to state 25
    slice                          shift and go to state 15

state 107

    (53) statement -> WHILE ( expression ) . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 119
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 108

    (54) statement -> IF ( expression ) . statement
    (55) statement -> IF ( expression ) . statement ELSE statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 120
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 109

    (9) inner_table -> inner_table , expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ;               reduce using rule 9 (inner_table -> inner_table , expression .)
    ,               reduce using rule 9 (inner_table -> inner_table , expression .)
    ]               reduce using rule 9 (inner_table -> inner_table , expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 110

    (12) expression -> ZEROS ( expression ) .

    ;               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    PLUS            reduce using rule 12 (expression -> ZEROS ( expression ) .)
    MINUS           reduce using rule 12 (expression -> ZEROS ( expression ) .)
    TIMES           reduce using rule 12 (expression -> ZEROS ( expression ) .)
    DIVIDE          reduce using rule 12 (expression -> ZEROS ( expression ) .)
    PLUS_MAT        reduce using rule 12 (expression -> ZEROS ( expression ) .)
    MINUS_MAT       reduce using rule 12 (expression -> ZEROS ( expression ) .)
    TIMES_MAT       reduce using rule 12 (expression -> ZEROS ( expression ) .)
    DIVIDE_MAT      reduce using rule 12 (expression -> ZEROS ( expression ) .)
    TRANSPOSE       reduce using rule 12 (expression -> ZEROS ( expression ) .)
    EQ              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    NE              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    GT              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    GE              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    LT              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    LE              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    ,               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    ]               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    :               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    )               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    RETURN          reduce using rule 12 (expression -> ZEROS ( expression ) .)
    {               reduce using rule 12 (expression -> ZEROS ( expression ) .)
    BREAK           reduce using rule 12 (expression -> ZEROS ( expression ) .)
    CONTINUE        reduce using rule 12 (expression -> ZEROS ( expression ) .)
    FOR             reduce using rule 12 (expression -> ZEROS ( expression ) .)
    WHILE           reduce using rule 12 (expression -> ZEROS ( expression ) .)
    IF              reduce using rule 12 (expression -> ZEROS ( expression ) .)
    PRINT           reduce using rule 12 (expression -> ZEROS ( expression ) .)
    ID              reduce using rule 12 (expression -> ZEROS ( expression ) .)


state 111

    (13) expression -> EYE ( expression ) .

    ;               reduce using rule 13 (expression -> EYE ( expression ) .)
    PLUS            reduce using rule 13 (expression -> EYE ( expression ) .)
    MINUS           reduce using rule 13 (expression -> EYE ( expression ) .)
    TIMES           reduce using rule 13 (expression -> EYE ( expression ) .)
    DIVIDE          reduce using rule 13 (expression -> EYE ( expression ) .)
    PLUS_MAT        reduce using rule 13 (expression -> EYE ( expression ) .)
    MINUS_MAT       reduce using rule 13 (expression -> EYE ( expression ) .)
    TIMES_MAT       reduce using rule 13 (expression -> EYE ( expression ) .)
    DIVIDE_MAT      reduce using rule 13 (expression -> EYE ( expression ) .)
    TRANSPOSE       reduce using rule 13 (expression -> EYE ( expression ) .)
    EQ              reduce using rule 13 (expression -> EYE ( expression ) .)
    NE              reduce using rule 13 (expression -> EYE ( expression ) .)
    GT              reduce using rule 13 (expression -> EYE ( expression ) .)
    GE              reduce using rule 13 (expression -> EYE ( expression ) .)
    LT              reduce using rule 13 (expression -> EYE ( expression ) .)
    LE              reduce using rule 13 (expression -> EYE ( expression ) .)
    ,               reduce using rule 13 (expression -> EYE ( expression ) .)
    ]               reduce using rule 13 (expression -> EYE ( expression ) .)
    :               reduce using rule 13 (expression -> EYE ( expression ) .)
    )               reduce using rule 13 (expression -> EYE ( expression ) .)
    RETURN          reduce using rule 13 (expression -> EYE ( expression ) .)
    {               reduce using rule 13 (expression -> EYE ( expression ) .)
    BREAK           reduce using rule 13 (expression -> EYE ( expression ) .)
    CONTINUE        reduce using rule 13 (expression -> EYE ( expression ) .)
    FOR             reduce using rule 13 (expression -> EYE ( expression ) .)
    WHILE           reduce using rule 13 (expression -> EYE ( expression ) .)
    IF              reduce using rule 13 (expression -> EYE ( expression ) .)
    PRINT           reduce using rule 13 (expression -> EYE ( expression ) .)
    ID              reduce using rule 13 (expression -> EYE ( expression ) .)


state 112

    (14) expression -> ONES ( expression ) .

    ;               reduce using rule 14 (expression -> ONES ( expression ) .)
    PLUS            reduce using rule 14 (expression -> ONES ( expression ) .)
    MINUS           reduce using rule 14 (expression -> ONES ( expression ) .)
    TIMES           reduce using rule 14 (expression -> ONES ( expression ) .)
    DIVIDE          reduce using rule 14 (expression -> ONES ( expression ) .)
    PLUS_MAT        reduce using rule 14 (expression -> ONES ( expression ) .)
    MINUS_MAT       reduce using rule 14 (expression -> ONES ( expression ) .)
    TIMES_MAT       reduce using rule 14 (expression -> ONES ( expression ) .)
    DIVIDE_MAT      reduce using rule 14 (expression -> ONES ( expression ) .)
    TRANSPOSE       reduce using rule 14 (expression -> ONES ( expression ) .)
    EQ              reduce using rule 14 (expression -> ONES ( expression ) .)
    NE              reduce using rule 14 (expression -> ONES ( expression ) .)
    GT              reduce using rule 14 (expression -> ONES ( expression ) .)
    GE              reduce using rule 14 (expression -> ONES ( expression ) .)
    LT              reduce using rule 14 (expression -> ONES ( expression ) .)
    LE              reduce using rule 14 (expression -> ONES ( expression ) .)
    ,               reduce using rule 14 (expression -> ONES ( expression ) .)
    ]               reduce using rule 14 (expression -> ONES ( expression ) .)
    :               reduce using rule 14 (expression -> ONES ( expression ) .)
    )               reduce using rule 14 (expression -> ONES ( expression ) .)
    RETURN          reduce using rule 14 (expression -> ONES ( expression ) .)
    {               reduce using rule 14 (expression -> ONES ( expression ) .)
    BREAK           reduce using rule 14 (expression -> ONES ( expression ) .)
    CONTINUE        reduce using rule 14 (expression -> ONES ( expression ) .)
    FOR             reduce using rule 14 (expression -> ONES ( expression ) .)
    WHILE           reduce using rule 14 (expression -> ONES ( expression ) .)
    IF              reduce using rule 14 (expression -> ONES ( expression ) .)
    PRINT           reduce using rule 14 (expression -> ONES ( expression ) .)
    ID              reduce using rule 14 (expression -> ONES ( expression ) .)


state 113

    (52) statement -> FOR ID ASSIGN range statement .

    RETURN          reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    {               reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    BREAK           reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    CONTINUE        reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    FOR             reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    WHILE           reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    IF              reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    PRINT           reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    ID              reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    $end            reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    }               reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)
    ELSE            reduce using rule 52 (statement -> FOR ID ASSIGN range statement .)


state 114

    (34) slice -> ID [ expression , expression . ]
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression
    (15) range -> expression . : expression

    ]               shift and go to state 121
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63
    :               shift and go to state 104


state 115

    (35) slice -> ID [ expression , range . ]

    ]               shift and go to state 122


state 116

    (15) range -> expression : expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression

    ]               reduce using rule 15 (range -> expression : expression .)
    ,               reduce using rule 15 (range -> expression : expression .)
    RETURN          reduce using rule 15 (range -> expression : expression .)
    {               reduce using rule 15 (range -> expression : expression .)
    BREAK           reduce using rule 15 (range -> expression : expression .)
    CONTINUE        reduce using rule 15 (range -> expression : expression .)
    FOR             reduce using rule 15 (range -> expression : expression .)
    WHILE           reduce using rule 15 (range -> expression : expression .)
    IF              reduce using rule 15 (range -> expression : expression .)
    PRINT           reduce using rule 15 (range -> expression : expression .)
    ID              reduce using rule 15 (range -> expression : expression .)
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63


state 117

    (37) slice -> ID [ range , range . ]

    ]               shift and go to state 123


state 118

    (36) slice -> ID [ range , expression . ]
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression
    (21) expression -> expression . PLUS_MAT expression
    (22) expression -> expression . MINUS_MAT expression
    (23) expression -> expression . TIMES_MAT expression
    (24) expression -> expression . DIVIDE_MAT expression
    (25) expression -> expression . TRANSPOSE
    (26) expression -> expression . EQ expression
    (27) expression -> expression . NE expression
    (28) expression -> expression . GT expression
    (29) expression -> expression . GE expression
    (30) expression -> expression . LT expression
    (31) expression -> expression . LE expression
    (15) range -> expression . : expression

    ]               shift and go to state 124
    PLUS            shift and go to state 49
    MINUS           shift and go to state 50
    TIMES           shift and go to state 51
    DIVIDE          shift and go to state 52
    PLUS_MAT        shift and go to state 53
    MINUS_MAT       shift and go to state 54
    TIMES_MAT       shift and go to state 55
    DIVIDE_MAT      shift and go to state 56
    TRANSPOSE       shift and go to state 57
    EQ              shift and go to state 58
    NE              shift and go to state 59
    GT              shift and go to state 60
    GE              shift and go to state 61
    LT              shift and go to state 62
    LE              shift and go to state 63
    :               shift and go to state 104


state 119

    (53) statement -> WHILE ( expression ) statement .

    RETURN          reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    {               reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    FOR             reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    IF              reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    PRINT           reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    ID              reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    $end            reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    }               reduce using rule 53 (statement -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 53 (statement -> WHILE ( expression ) statement .)


state 120

    (54) statement -> IF ( expression ) statement .
    (55) statement -> IF ( expression ) statement . ELSE statement

    RETURN          reduce using rule 54 (statement -> IF ( expression ) statement .)
    {               reduce using rule 54 (statement -> IF ( expression ) statement .)
    BREAK           reduce using rule 54 (statement -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 54 (statement -> IF ( expression ) statement .)
    FOR             reduce using rule 54 (statement -> IF ( expression ) statement .)
    WHILE           reduce using rule 54 (statement -> IF ( expression ) statement .)
    IF              reduce using rule 54 (statement -> IF ( expression ) statement .)
    PRINT           reduce using rule 54 (statement -> IF ( expression ) statement .)
    ID              reduce using rule 54 (statement -> IF ( expression ) statement .)
    $end            reduce using rule 54 (statement -> IF ( expression ) statement .)
    }               reduce using rule 54 (statement -> IF ( expression ) statement .)
    ELSE            shift and go to state 125

  ! ELSE            [ reduce using rule 54 (statement -> IF ( expression ) statement .) ]


state 121

    (34) slice -> ID [ expression , expression ] .

    ASSIGN          reduce using rule 34 (slice -> ID [ expression , expression ] .)
    MINUS_ASSIGN    reduce using rule 34 (slice -> ID [ expression , expression ] .)
    PLUS_ASSIGN     reduce using rule 34 (slice -> ID [ expression , expression ] .)
    TIMES_ASSIGN    reduce using rule 34 (slice -> ID [ expression , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 34 (slice -> ID [ expression , expression ] .)
    ;               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    PLUS            reduce using rule 34 (slice -> ID [ expression , expression ] .)
    MINUS           reduce using rule 34 (slice -> ID [ expression , expression ] .)
    TIMES           reduce using rule 34 (slice -> ID [ expression , expression ] .)
    DIVIDE          reduce using rule 34 (slice -> ID [ expression , expression ] .)
    PLUS_MAT        reduce using rule 34 (slice -> ID [ expression , expression ] .)
    MINUS_MAT       reduce using rule 34 (slice -> ID [ expression , expression ] .)
    TIMES_MAT       reduce using rule 34 (slice -> ID [ expression , expression ] .)
    DIVIDE_MAT      reduce using rule 34 (slice -> ID [ expression , expression ] .)
    TRANSPOSE       reduce using rule 34 (slice -> ID [ expression , expression ] .)
    EQ              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    NE              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    GT              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    GE              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    LT              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    LE              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    ,               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    ]               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    :               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    )               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    RETURN          reduce using rule 34 (slice -> ID [ expression , expression ] .)
    {               reduce using rule 34 (slice -> ID [ expression , expression ] .)
    BREAK           reduce using rule 34 (slice -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 34 (slice -> ID [ expression , expression ] .)
    FOR             reduce using rule 34 (slice -> ID [ expression , expression ] .)
    WHILE           reduce using rule 34 (slice -> ID [ expression , expression ] .)
    IF              reduce using rule 34 (slice -> ID [ expression , expression ] .)
    PRINT           reduce using rule 34 (slice -> ID [ expression , expression ] .)
    ID              reduce using rule 34 (slice -> ID [ expression , expression ] .)


state 122

    (35) slice -> ID [ expression , range ] .

    ASSIGN          reduce using rule 35 (slice -> ID [ expression , range ] .)
    MINUS_ASSIGN    reduce using rule 35 (slice -> ID [ expression , range ] .)
    PLUS_ASSIGN     reduce using rule 35 (slice -> ID [ expression , range ] .)
    TIMES_ASSIGN    reduce using rule 35 (slice -> ID [ expression , range ] .)
    DIVIDE_ASSIGN   reduce using rule 35 (slice -> ID [ expression , range ] .)
    ;               reduce using rule 35 (slice -> ID [ expression , range ] .)
    PLUS            reduce using rule 35 (slice -> ID [ expression , range ] .)
    MINUS           reduce using rule 35 (slice -> ID [ expression , range ] .)
    TIMES           reduce using rule 35 (slice -> ID [ expression , range ] .)
    DIVIDE          reduce using rule 35 (slice -> ID [ expression , range ] .)
    PLUS_MAT        reduce using rule 35 (slice -> ID [ expression , range ] .)
    MINUS_MAT       reduce using rule 35 (slice -> ID [ expression , range ] .)
    TIMES_MAT       reduce using rule 35 (slice -> ID [ expression , range ] .)
    DIVIDE_MAT      reduce using rule 35 (slice -> ID [ expression , range ] .)
    TRANSPOSE       reduce using rule 35 (slice -> ID [ expression , range ] .)
    EQ              reduce using rule 35 (slice -> ID [ expression , range ] .)
    NE              reduce using rule 35 (slice -> ID [ expression , range ] .)
    GT              reduce using rule 35 (slice -> ID [ expression , range ] .)
    GE              reduce using rule 35 (slice -> ID [ expression , range ] .)
    LT              reduce using rule 35 (slice -> ID [ expression , range ] .)
    LE              reduce using rule 35 (slice -> ID [ expression , range ] .)
    ,               reduce using rule 35 (slice -> ID [ expression , range ] .)
    ]               reduce using rule 35 (slice -> ID [ expression , range ] .)
    :               reduce using rule 35 (slice -> ID [ expression , range ] .)
    )               reduce using rule 35 (slice -> ID [ expression , range ] .)
    RETURN          reduce using rule 35 (slice -> ID [ expression , range ] .)
    {               reduce using rule 35 (slice -> ID [ expression , range ] .)
    BREAK           reduce using rule 35 (slice -> ID [ expression , range ] .)
    CONTINUE        reduce using rule 35 (slice -> ID [ expression , range ] .)
    FOR             reduce using rule 35 (slice -> ID [ expression , range ] .)
    WHILE           reduce using rule 35 (slice -> ID [ expression , range ] .)
    IF              reduce using rule 35 (slice -> ID [ expression , range ] .)
    PRINT           reduce using rule 35 (slice -> ID [ expression , range ] .)
    ID              reduce using rule 35 (slice -> ID [ expression , range ] .)


state 123

    (37) slice -> ID [ range , range ] .

    ASSIGN          reduce using rule 37 (slice -> ID [ range , range ] .)
    MINUS_ASSIGN    reduce using rule 37 (slice -> ID [ range , range ] .)
    PLUS_ASSIGN     reduce using rule 37 (slice -> ID [ range , range ] .)
    TIMES_ASSIGN    reduce using rule 37 (slice -> ID [ range , range ] .)
    DIVIDE_ASSIGN   reduce using rule 37 (slice -> ID [ range , range ] .)
    ;               reduce using rule 37 (slice -> ID [ range , range ] .)
    PLUS            reduce using rule 37 (slice -> ID [ range , range ] .)
    MINUS           reduce using rule 37 (slice -> ID [ range , range ] .)
    TIMES           reduce using rule 37 (slice -> ID [ range , range ] .)
    DIVIDE          reduce using rule 37 (slice -> ID [ range , range ] .)
    PLUS_MAT        reduce using rule 37 (slice -> ID [ range , range ] .)
    MINUS_MAT       reduce using rule 37 (slice -> ID [ range , range ] .)
    TIMES_MAT       reduce using rule 37 (slice -> ID [ range , range ] .)
    DIVIDE_MAT      reduce using rule 37 (slice -> ID [ range , range ] .)
    TRANSPOSE       reduce using rule 37 (slice -> ID [ range , range ] .)
    EQ              reduce using rule 37 (slice -> ID [ range , range ] .)
    NE              reduce using rule 37 (slice -> ID [ range , range ] .)
    GT              reduce using rule 37 (slice -> ID [ range , range ] .)
    GE              reduce using rule 37 (slice -> ID [ range , range ] .)
    LT              reduce using rule 37 (slice -> ID [ range , range ] .)
    LE              reduce using rule 37 (slice -> ID [ range , range ] .)
    ,               reduce using rule 37 (slice -> ID [ range , range ] .)
    ]               reduce using rule 37 (slice -> ID [ range , range ] .)
    :               reduce using rule 37 (slice -> ID [ range , range ] .)
    )               reduce using rule 37 (slice -> ID [ range , range ] .)
    RETURN          reduce using rule 37 (slice -> ID [ range , range ] .)
    {               reduce using rule 37 (slice -> ID [ range , range ] .)
    BREAK           reduce using rule 37 (slice -> ID [ range , range ] .)
    CONTINUE        reduce using rule 37 (slice -> ID [ range , range ] .)
    FOR             reduce using rule 37 (slice -> ID [ range , range ] .)
    WHILE           reduce using rule 37 (slice -> ID [ range , range ] .)
    IF              reduce using rule 37 (slice -> ID [ range , range ] .)
    PRINT           reduce using rule 37 (slice -> ID [ range , range ] .)
    ID              reduce using rule 37 (slice -> ID [ range , range ] .)


state 124

    (36) slice -> ID [ range , expression ] .

    ASSIGN          reduce using rule 36 (slice -> ID [ range , expression ] .)
    MINUS_ASSIGN    reduce using rule 36 (slice -> ID [ range , expression ] .)
    PLUS_ASSIGN     reduce using rule 36 (slice -> ID [ range , expression ] .)
    TIMES_ASSIGN    reduce using rule 36 (slice -> ID [ range , expression ] .)
    DIVIDE_ASSIGN   reduce using rule 36 (slice -> ID [ range , expression ] .)
    ;               reduce using rule 36 (slice -> ID [ range , expression ] .)
    PLUS            reduce using rule 36 (slice -> ID [ range , expression ] .)
    MINUS           reduce using rule 36 (slice -> ID [ range , expression ] .)
    TIMES           reduce using rule 36 (slice -> ID [ range , expression ] .)
    DIVIDE          reduce using rule 36 (slice -> ID [ range , expression ] .)
    PLUS_MAT        reduce using rule 36 (slice -> ID [ range , expression ] .)
    MINUS_MAT       reduce using rule 36 (slice -> ID [ range , expression ] .)
    TIMES_MAT       reduce using rule 36 (slice -> ID [ range , expression ] .)
    DIVIDE_MAT      reduce using rule 36 (slice -> ID [ range , expression ] .)
    TRANSPOSE       reduce using rule 36 (slice -> ID [ range , expression ] .)
    EQ              reduce using rule 36 (slice -> ID [ range , expression ] .)
    NE              reduce using rule 36 (slice -> ID [ range , expression ] .)
    GT              reduce using rule 36 (slice -> ID [ range , expression ] .)
    GE              reduce using rule 36 (slice -> ID [ range , expression ] .)
    LT              reduce using rule 36 (slice -> ID [ range , expression ] .)
    LE              reduce using rule 36 (slice -> ID [ range , expression ] .)
    ,               reduce using rule 36 (slice -> ID [ range , expression ] .)
    ]               reduce using rule 36 (slice -> ID [ range , expression ] .)
    :               reduce using rule 36 (slice -> ID [ range , expression ] .)
    )               reduce using rule 36 (slice -> ID [ range , expression ] .)
    RETURN          reduce using rule 36 (slice -> ID [ range , expression ] .)
    {               reduce using rule 36 (slice -> ID [ range , expression ] .)
    BREAK           reduce using rule 36 (slice -> ID [ range , expression ] .)
    CONTINUE        reduce using rule 36 (slice -> ID [ range , expression ] .)
    FOR             reduce using rule 36 (slice -> ID [ range , expression ] .)
    WHILE           reduce using rule 36 (slice -> ID [ range , expression ] .)
    IF              reduce using rule 36 (slice -> ID [ range , expression ] .)
    PRINT           reduce using rule 36 (slice -> ID [ range , expression ] .)
    ID              reduce using rule 36 (slice -> ID [ range , expression ] .)


state 125

    (55) statement -> IF ( expression ) statement ELSE . statement
    (40) statement -> . slice_or_id ASSIGN expression ;
    (41) statement -> . slice_or_id MINUS_ASSIGN expression ;
    (42) statement -> . slice_or_id PLUS_ASSIGN expression ;
    (43) statement -> . slice_or_id TIMES_ASSIGN expression ;
    (44) statement -> . slice_or_id DIVIDE_ASSIGN expression ;
    (47) statement -> . RETURN ;
    (48) statement -> . RETURN expression ;
    (49) statement -> . { statements_list }
    (50) statement -> . BREAK ;
    (51) statement -> . CONTINUE ;
    (52) statement -> . FOR ID ASSIGN range statement
    (53) statement -> . WHILE ( expression ) statement
    (54) statement -> . IF ( expression ) statement
    (55) statement -> . IF ( expression ) statement ELSE statement
    (56) statement -> . PRINT inner_table ;
    (38) slice_or_id -> . ID
    (39) slice_or_id -> . slice
    (32) slice -> . ID [ expression ]
    (33) slice -> . ID [ range ]
    (34) slice -> . ID [ expression , expression ]
    (35) slice -> . ID [ expression , range ]
    (36) slice -> . ID [ range , expression ]
    (37) slice -> . ID [ range , range ]

    RETURN          shift and go to state 6
    {               shift and go to state 7
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    FOR             shift and go to state 10
    WHILE           shift and go to state 12
    IF              shift and go to state 13
    PRINT           shift and go to state 14
    ID              shift and go to state 11

    statement                      shift and go to state 126
    slice_or_id                    shift and go to state 5
    slice                          shift and go to state 15

state 126

    (55) statement -> IF ( expression ) statement ELSE statement .

    RETURN          reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    {               reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    BREAK           reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    CONTINUE        reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    FOR             reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    WHILE           reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    IF              reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    PRINT           reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    ID              reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    $end            reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    }               reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)
    ELSE            reduce using rule 55 (statement -> IF ( expression ) statement ELSE statement .)

