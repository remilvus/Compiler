
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT TRANSPOSE WHILE ZEROSprogram : statements_list\n               | statement\n               | emptyempty :number : INT\n              | FLOATexpression : ID\n                  | number\n                  | STRINGinner_table : expression ',' expression\n                   | inner_table ',' expression\n       expression  : '[' expression ']'\n                   | '[' inner_table ']' expression : ZEROS '(' expression ')'\n                  | EYE '(' expression ')'\n                  | ONES '(' expression ')' range : expression ':' expressionexpression : MINUS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionstatement : ID ASSIGN expression ';'\n                 | ID MINUS_ASSIGN expression ';'\n                 | ID PLUS_ASSIGN expression ';'\n                 | ID TIMES_ASSIGN expression ';'\n                 | ID DIVIDE_ASSIGN expression ';' slice : ID '[' expression ']'\n             | ID '[' range ']'\n             | ID '[' expression ',' expression ']'\n             | ID '[' expression ',' range ']'\n             | ID '[' range ',' expression ']'\n             | ID '[' range ',' range ']' statement : slice ASSIGN expression ';'\n                 | slice MINUS_ASSIGN expression ';'\n                 | slice PLUS_ASSIGN expression ';'\n                 | slice TIMES_ASSIGN expression ';'\n                 | slice DIVIDE_ASSIGN expression ';'\n        expression : slicestatements_list : statements_list statement\n                       | statements_list code_block\n                       | statement statement\n                       | statement code_blockstatement : RETURN ';'\n                 | RETURN expression ';' code_block : '{' statements_list '}'\n                  | '{' statement '}' statement : BREAK ';'\n                 | CONTINUE ';' statement : FOR ID ASSIGN range code_block\n                 | FOR ID ASSIGN range statement\n                 | WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' statementstatement  : IF '(' expression ')' statement %prec JUST_IF\n                  | IF '(' expression ')' code_block %prec JUST_IF\n                  | IF '(' expression ')' statement else_block\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE statement\n                  | ELSE code_blockstatement : PRINT inner_table ';'\n                 | PRINT expression ';' "
    
_lr_action_items = {'ID':([0,2,3,7,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,34,35,39,40,41,42,43,44,46,47,50,51,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[5,5,5,32,45,32,-51,-52,5,-53,-54,32,32,32,32,32,32,32,32,32,32,32,-55,-7,-8,-9,32,32,-50,-5,-6,-59,-60,32,32,5,5,-56,32,32,32,32,32,32,32,32,-27,32,32,32,32,32,32,32,32,32,-18,32,-71,32,-72,32,-57,-58,-34,-35,-36,-37,-38,-39,32,32,-40,32,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,5,5,5,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,5,-68,-69,-70,]),'RETURN':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[7,7,7,-51,-52,7,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,7,7,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,7,7,7,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,7,-68,-69,-70,]),'BREAK':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[8,8,8,-51,-52,8,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,8,8,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,8,8,8,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,8,-68,-69,-70,]),'CONTINUE':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[9,9,9,-51,-52,9,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,9,9,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,9,9,9,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,9,-68,-69,-70,]),'FOR':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[10,10,10,-51,-52,10,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,10,10,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,10,10,10,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,10,-68,-69,-70,]),'WHILE':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[11,11,11,-51,-52,11,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,11,11,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,11,11,11,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,11,-68,-69,-70,]),'IF':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[12,12,12,-51,-52,12,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,12,12,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,12,12,12,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,12,-68,-69,-70,]),'PRINT':([0,2,3,14,15,16,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[13,13,13,-51,-52,13,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,13,13,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,13,13,13,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,13,-68,-69,-70,]),'$end':([0,1,2,3,4,14,15,17,18,30,43,44,64,89,91,93,94,95,96,97,98,99,105,106,107,108,109,143,144,145,146,147,148,153,155,156,157,],[-4,0,-1,-2,-3,-51,-52,-53,-54,-55,-59,-60,-56,-71,-72,-57,-58,-34,-35,-36,-37,-38,-45,-46,-47,-48,-49,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,]),'{':([2,3,14,15,17,18,30,32,33,34,40,41,42,43,44,50,51,64,73,85,89,91,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,129,131,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,],[16,16,-51,-52,-53,-54,-55,-7,-8,-9,-50,-5,-6,-59,-60,16,16,-56,-27,-18,-71,-72,-57,-58,-34,-35,-36,-37,-38,-39,-40,-45,-46,-47,-48,-49,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,16,16,16,-17,-14,-15,-16,-61,-62,-63,-64,-65,-66,-41,-42,-44,-43,-67,16,-68,-69,-70,]),'ASSIGN':([5,6,45,100,103,149,150,151,152,],[19,25,86,-39,-40,-41,-42,-44,-43,]),'MINUS_ASSIGN':([5,6,100,103,149,150,151,152,],[20,26,-39,-40,-41,-42,-44,-43,]),'PLUS_ASSIGN':([5,6,100,103,149,150,151,152,],[21,27,-39,-40,-41,-42,-44,-43,]),'TIMES_ASSIGN':([5,6,100,103,149,150,151,152,],[22,28,-39,-40,-41,-42,-44,-43,]),'DIVIDE_ASSIGN':([5,6,100,103,149,150,151,152,],[23,29,-39,-40,-41,-42,-44,-43,]),'[':([5,7,13,19,20,21,22,23,24,25,26,27,28,29,32,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[24,35,35,35,35,35,35,35,35,35,35,35,35,35,24,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),';':([7,8,9,31,32,33,34,40,41,42,48,49,52,53,54,55,56,59,60,61,62,63,73,85,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,140,141,142,149,150,151,152,],[30,43,44,64,-7,-8,-9,-50,-5,-6,89,91,95,96,97,98,99,105,106,107,108,109,-27,-18,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,-11,-10,-14,-15,-16,-41,-42,-44,-43,]),'STRING':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'ZEROS':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'EYE':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ONES':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'MINUS':([7,13,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,39,40,41,42,46,47,49,52,53,54,55,56,57,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,82,83,84,85,86,87,88,90,92,100,101,102,103,104,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[39,39,39,39,39,39,39,39,39,39,39,39,39,66,-7,-8,-9,39,39,-50,-5,-6,39,39,66,66,66,66,66,66,66,66,66,66,66,66,39,39,39,39,39,39,39,39,-27,39,39,39,39,39,39,66,39,39,39,-18,39,66,66,39,39,-39,39,39,-40,39,-19,-20,-21,-22,-23,-24,-25,-26,66,66,66,66,66,66,-12,-13,66,66,66,66,66,66,66,66,66,-14,-15,-16,-41,-42,-44,-43,]),'INT':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FLOAT':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'(':([11,12,36,37,38,],[46,47,82,83,84,]),'}':([14,15,17,18,30,43,44,50,51,64,89,91,93,94,95,96,97,98,99,105,106,107,108,109,143,144,145,146,147,148,153,155,156,157,],[-51,-52,-53,-54,-55,-59,-60,93,94,-56,-71,-72,-57,-58,-34,-35,-36,-37,-38,-45,-46,-47,-48,-49,-61,-62,-63,-64,-65,-66,-67,-68,-69,-70,]),'ELSE':([30,43,44,64,89,91,93,94,95,96,97,98,99,105,106,107,108,109,143,144,145,146,147,148,153,155,156,157,],[-55,-59,-60,-56,-71,-72,-57,-58,-34,-35,-36,-37,-38,-45,-46,-47,-48,-49,-61,-62,-63,-64,154,154,-67,-68,-69,-70,]),'PLUS':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[65,-7,-8,-9,-50,-5,-6,65,65,65,65,65,65,65,65,65,65,65,65,-27,65,-18,65,65,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,65,65,65,65,65,65,-12,-13,65,65,65,65,65,65,65,65,65,-14,-15,-16,-41,-42,-44,-43,]),'TIMES':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[67,-7,-8,-9,-50,-5,-6,67,67,67,67,67,67,67,67,67,67,67,67,-27,67,67,67,67,-39,-40,67,67,-21,-22,-23,-24,-25,-26,67,67,67,67,67,67,-12,-13,67,67,67,67,67,67,67,67,67,-14,-15,-16,-41,-42,-44,-43,]),'DIVIDE':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[68,-7,-8,-9,-50,-5,-6,68,68,68,68,68,68,68,68,68,68,68,68,-27,68,68,68,68,-39,-40,68,68,-21,-22,-23,-24,-25,-26,68,68,68,68,68,68,-12,-13,68,68,68,68,68,68,68,68,68,-14,-15,-16,-41,-42,-44,-43,]),'PLUS_MAT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[69,-7,-8,-9,-50,-5,-6,69,69,69,69,69,69,69,69,69,69,69,69,-27,69,69,69,69,-39,-40,69,69,69,69,-23,-24,-25,-26,69,69,69,69,69,69,-12,-13,69,69,69,69,69,69,69,69,69,-14,-15,-16,-41,-42,-44,-43,]),'MINUS_MAT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[70,-7,-8,-9,-50,-5,-6,70,70,70,70,70,70,70,70,70,70,70,70,-27,70,70,70,70,-39,-40,70,70,70,70,-23,-24,-25,-26,70,70,70,70,70,70,-12,-13,70,70,70,70,70,70,70,70,70,-14,-15,-16,-41,-42,-44,-43,]),'TIMES_MAT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[71,-7,-8,-9,-50,-5,-6,71,71,71,71,71,71,71,71,71,71,71,71,-27,71,71,71,71,-39,-40,71,71,71,71,71,71,-25,-26,71,71,71,71,71,71,-12,-13,71,71,71,71,71,71,71,71,71,-14,-15,-16,-41,-42,-44,-43,]),'DIVIDE_MAT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[72,-7,-8,-9,-50,-5,-6,72,72,72,72,72,72,72,72,72,72,72,72,-27,72,72,72,72,-39,-40,72,72,72,72,72,72,-25,-26,72,72,72,72,72,72,-12,-13,72,72,72,72,72,72,72,72,72,-14,-15,-16,-41,-42,-44,-43,]),'TRANSPOSE':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[73,-7,-8,-9,-50,-5,-6,73,73,73,73,73,73,73,73,73,73,73,73,-27,73,-18,73,73,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,73,73,73,73,73,73,73,73,73,-14,-15,-16,-41,-42,-44,-43,]),'EQ':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[74,-7,-8,-9,-50,-5,-6,74,74,74,74,74,74,74,74,74,74,74,74,-27,74,-18,74,74,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,74,74,74,74,74,74,74,74,74,-14,-15,-16,-41,-42,-44,-43,]),'NE':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[75,-7,-8,-9,-50,-5,-6,75,75,75,75,75,75,75,75,75,75,75,75,-27,75,-18,75,75,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,75,75,75,75,75,75,75,75,75,-14,-15,-16,-41,-42,-44,-43,]),'GT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[76,-7,-8,-9,-50,-5,-6,76,76,76,76,76,76,76,76,76,76,76,76,-27,76,-18,76,76,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,76,76,76,76,76,76,76,76,76,-14,-15,-16,-41,-42,-44,-43,]),'GE':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[77,-7,-8,-9,-50,-5,-6,77,77,77,77,77,77,77,77,77,77,77,77,-27,77,-18,77,77,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,77,77,77,77,77,77,77,77,77,-14,-15,-16,-41,-42,-44,-43,]),'LT':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[78,-7,-8,-9,-50,-5,-6,78,78,78,78,78,78,78,78,78,78,78,78,-27,78,-18,78,78,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,78,78,78,78,78,78,78,78,78,-14,-15,-16,-41,-42,-44,-43,]),'LE':([31,32,33,34,40,41,42,49,52,53,54,55,56,57,59,60,61,62,63,73,80,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,133,134,135,137,139,140,141,142,149,150,151,152,],[79,-7,-8,-9,-50,-5,-6,79,79,79,79,79,79,79,79,79,79,79,79,-27,79,-18,79,79,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,79,79,79,79,79,79,79,79,79,-14,-15,-16,-41,-42,-44,-43,]),',':([32,33,34,40,41,42,48,49,57,58,73,80,81,85,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,137,140,141,142,149,150,151,152,],[-7,-8,-9,-50,-5,-6,90,92,101,104,-27,92,90,-18,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,-11,-10,-17,-14,-15,-16,-41,-42,-44,-43,]),']':([32,33,34,40,41,42,57,58,73,80,81,85,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,133,134,135,136,137,138,139,140,141,142,149,150,151,152,],[-7,-8,-9,-50,-5,-6,100,103,-27,124,125,-18,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,-11,-10,149,150,-17,151,152,-14,-15,-16,-41,-42,-44,-43,]),':':([32,33,34,40,41,42,57,73,85,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,130,135,139,140,141,142,149,150,151,152,],[-7,-8,-9,-50,-5,-6,102,-27,-18,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,102,102,102,-14,-15,-16,-41,-42,-44,-43,]),')':([32,33,34,40,41,42,73,85,87,88,100,103,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,140,141,142,149,150,151,152,],[-7,-8,-9,-50,-5,-6,-27,-18,131,132,-39,-40,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-12,-13,140,141,142,-14,-15,-16,-41,-42,-44,-43,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements_list':([0,16,],[2,50,]),'statement':([0,2,3,16,50,51,129,131,132,154,],[3,14,17,51,14,17,144,146,147,156,]),'empty':([0,],[4,]),'slice':([0,2,3,7,13,16,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,50,51,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,129,131,132,154,],[6,6,6,40,40,6,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,6,6,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,6,6,6,6,]),'code_block':([2,3,50,51,129,131,132,154,],[15,18,15,18,143,145,148,157,]),'expression':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[31,49,52,53,54,55,56,57,59,60,61,62,63,80,85,87,88,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,130,133,134,135,137,139,]),'number':([7,13,19,20,21,22,23,24,25,26,27,28,29,35,39,46,47,65,66,67,68,69,70,71,72,74,75,76,77,78,79,82,83,84,86,90,92,101,102,104,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'inner_table':([13,35,],[48,81,]),'range':([24,86,101,104,],[58,129,136,138,]),'else_block':([147,148,],[153,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements_list','program',1,'p_program','parser.py',18),
  ('program -> statement','program',1,'p_program','parser.py',19),
  ('program -> empty','program',1,'p_program','parser.py',20),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',24),
  ('number -> INT','number',1,'p_number','parser.py',28),
  ('number -> FLOAT','number',1,'p_number','parser.py',29),
  ('expression -> ID','expression',1,'p_expression','parser.py',33),
  ('expression -> number','expression',1,'p_expression','parser.py',34),
  ('expression -> STRING','expression',1,'p_expression','parser.py',35),
  ('inner_table -> expression , expression','inner_table',3,'p_table','parser.py',39),
  ('inner_table -> inner_table , expression','inner_table',3,'p_table','parser.py',40),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',41),
  ('expression -> [ inner_table ]','expression',3,'p_table','parser.py',42),
  ('expression -> ZEROS ( expression )','expression',4,'p_matrix_maker','parser.py',46),
  ('expression -> EYE ( expression )','expression',4,'p_matrix_maker','parser.py',47),
  ('expression -> ONES ( expression )','expression',4,'p_matrix_maker','parser.py',48),
  ('range -> expression : expression','range',3,'p_range','parser.py',52),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',56),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',60),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',61),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',62),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',63),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',67),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',68),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',69),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',70),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',74),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',78),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',79),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',83),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',84),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',88),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',89),
  ('statement -> ID ASSIGN expression ;','statement',4,'p_statement','parser.py',93),
  ('statement -> ID MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',94),
  ('statement -> ID PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',95),
  ('statement -> ID TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',96),
  ('statement -> ID DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',97),
  ('slice -> ID [ expression ]','slice',4,'p_slice','parser.py',101),
  ('slice -> ID [ range ]','slice',4,'p_slice','parser.py',102),
  ('slice -> ID [ expression , expression ]','slice',6,'p_slice','parser.py',103),
  ('slice -> ID [ expression , range ]','slice',6,'p_slice','parser.py',104),
  ('slice -> ID [ range , expression ]','slice',6,'p_slice','parser.py',105),
  ('slice -> ID [ range , range ]','slice',6,'p_slice','parser.py',106),
  ('statement -> slice ASSIGN expression ;','statement',4,'p_slicing','parser.py',110),
  ('statement -> slice MINUS_ASSIGN expression ;','statement',4,'p_slicing','parser.py',111),
  ('statement -> slice PLUS_ASSIGN expression ;','statement',4,'p_slicing','parser.py',112),
  ('statement -> slice TIMES_ASSIGN expression ;','statement',4,'p_slicing','parser.py',113),
  ('statement -> slice DIVIDE_ASSIGN expression ;','statement',4,'p_slicing','parser.py',114),
  ('expression -> slice','expression',1,'p_slicing','parser.py',115),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','parser.py',119),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',120),
  ('statements_list -> statement statement','statements_list',2,'p_statements_list','parser.py',121),
  ('statements_list -> statement code_block','statements_list',2,'p_statements_list','parser.py',122),
  ('statement -> RETURN ;','statement',2,'p_return_statement','parser.py',126),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',127),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',131),
  ('code_block -> { statement }','code_block',3,'p_code_block','parser.py',132),
  ('statement -> BREAK ;','statement',2,'p_loop_statement','parser.py',136),
  ('statement -> CONTINUE ;','statement',2,'p_loop_statement','parser.py',137),
  ('statement -> FOR ID ASSIGN range code_block','statement',5,'p_loop','parser.py',141),
  ('statement -> FOR ID ASSIGN range statement','statement',5,'p_loop','parser.py',142),
  ('statement -> WHILE ( expression ) code_block','statement',5,'p_loop','parser.py',143),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',144),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',148),
  ('statement -> IF ( expression ) code_block','statement',5,'p_if_statement','parser.py',149),
  ('statement -> IF ( expression ) statement else_block','statement',6,'p_if_statement','parser.py',150),
  ('statement -> IF ( expression ) code_block else_block','statement',6,'p_if_statement','parser.py',151),
  ('else_block -> ELSE statement','else_block',2,'p_if_statement','parser.py',152),
  ('else_block -> ELSE code_block','else_block',2,'p_if_statement','parser.py',153),
  ('statement -> PRINT inner_table ;','statement',3,'p_print','parser.py',157),
  ('statement -> PRINT expression ;','statement',3,'p_print','parser.py',158),
]
