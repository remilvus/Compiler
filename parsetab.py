
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ASSIGN BREAK COMMENT CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING THEN TIMES TIMES_ASSIGN TIMES_MAT WHILE ZEROSterm : INTterm : term PLUS term\n                  | term MINUS term\n                  | term '' term\n                  | term '/' term"
    
_lr_action_items = {'INT':([0,3,4,5,6,],[2,2,2,2,2,]),'$end':([1,2,7,8,9,10,],[0,-1,-2,-3,-4,-5,]),'PLUS':([1,2,7,8,9,10,],[3,-1,3,3,3,3,]),'MINUS':([1,2,7,8,9,10,],[4,-1,4,4,4,4,]),'':([1,2,7,8,9,10,],[5,-1,5,5,5,5,]),'/':([1,2,7,8,9,10,],[6,-1,6,6,6,6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,4,5,6,],[1,7,8,9,10,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> term","S'",1,None,None,None),
  ('term -> INT','term',1,'p_term','parser.py',7),
  ('term -> term PLUS term','term',3,'p_binary_operators','parser.py',12),
  ('term -> term MINUS term','term',3,'p_binary_operators','parser.py',13),
  ('term -> term  term','term',3,'p_binary_operators','parser.py',14),
  ('term -> term / term','term',3,'p_binary_operators','parser.py',15),
]
