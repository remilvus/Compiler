
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "programnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT TRANSPOSE WHILE ZEROSprogram : statements_list\n               | emptyempty :number : INT\n              | FLOATexpression : slice_or_id\n                  | number\n                  | STRINGinner_table : inner_table ',' expression\n                   | expression\n       expression  : '[' inner_table ']' expression : ZEROS '(' expression ')'\n                  | EYE '(' expression ')'\n                  | ONES '(' expression ')' range : expression ':' expressionexpression : MINUS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionslice : ID '[' expression ']'\n             | ID '[' range ']'\n             | ID '[' expression ',' expression ']'\n             | ID '[' expression ',' range ']'\n             | ID '[' range ',' expression ']'\n             | ID '[' range ',' range ']' slice_or_id : ID\n                   | slicestatement : slice_or_id ASSIGN expression ';'\n                 | slice_or_id MINUS_ASSIGN expression ';'\n                 | slice_or_id PLUS_ASSIGN expression ';'\n                 | slice_or_id TIMES_ASSIGN expression ';'\n                 | slice_or_id DIVIDE_ASSIGN expression ';' statements_list : statements_list statement\n                       | statementstatement : RETURN ';'\n                 | RETURN expression ';' statement : '{' statements_list '}' statement : BREAK ';'\n                 | CONTINUE ';' statement : FOR ID ASSIGN range statement\n                 | WHILE '(' expression ')' statementstatement : IF '(' expression ')' statement %prec JUST_IF\n                 | IF '(' expression ')' statement ELSE statementstatement : PRINT inner_table ';'"
    
_lr_action_items = {'$end':([0,1,2,3,4,16,22,35,36,48,69,75,77,78,79,80,81,113,119,120,126,],[-3,0,-1,-2,-46,-45,-47,-50,-51,-48,-49,-56,-40,-41,-42,-43,-44,-52,-53,-54,-55,]),'RETURN':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[6,6,-46,6,-38,-39,-45,-47,-6,-7,-8,-4,-5,6,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,6,-32,-33,6,6,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,6,-55,]),'{':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[7,7,-46,7,-38,-39,-45,-47,-6,-7,-8,-4,-5,7,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,7,-32,-33,7,7,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,7,-55,]),'BREAK':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[8,8,-46,8,-38,-39,-45,-47,-6,-7,-8,-4,-5,8,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,8,-32,-33,8,8,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,8,-55,]),'CONTINUE':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[9,9,-46,9,-38,-39,-45,-47,-6,-7,-8,-4,-5,9,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,9,-32,-33,9,9,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,9,-55,]),'FOR':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[10,10,-46,10,-38,-39,-45,-47,-6,-7,-8,-4,-5,10,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,10,-32,-33,10,10,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,10,-55,]),'WHILE':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[12,12,-46,12,-38,-39,-45,-47,-6,-7,-8,-4,-5,12,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,12,-32,-33,12,12,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,12,-55,]),'IF':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[13,13,-46,13,-38,-39,-45,-47,-6,-7,-8,-4,-5,13,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,13,-32,-33,13,13,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,13,-55,]),'PRINT':([0,2,4,7,11,15,16,22,24,25,26,32,33,34,35,36,48,57,68,69,75,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,105,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[14,14,-46,14,-38,-39,-45,-47,-6,-7,-8,-4,-5,14,-50,-51,-48,-25,-16,-49,-56,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,14,-32,-33,14,14,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,14,-55,]),'ID':([0,2,4,6,7,10,11,14,15,16,17,18,19,20,21,22,24,25,26,27,31,32,33,34,35,36,38,39,40,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,100,102,103,104,105,106,107,108,110,111,112,113,116,119,120,121,122,123,124,125,126,],[11,11,-46,11,11,37,-38,11,-39,-45,11,11,11,11,11,-47,-6,-7,-8,11,11,-4,-5,11,-50,-51,11,11,11,-48,11,11,11,11,11,11,11,11,-25,11,11,11,11,11,11,11,11,11,-16,-49,11,-56,11,-40,-41,-42,-43,-44,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,11,-32,11,11,-33,11,11,11,-12,-13,-14,-52,-15,-53,-54,-34,-35,-37,-36,11,-55,]),'}':([4,16,22,34,35,36,48,69,75,77,78,79,80,81,113,119,120,126,],[-46,-45,-47,69,-50,-51,-48,-49,-56,-40,-41,-42,-43,-44,-52,-53,-54,-55,]),'ASSIGN':([5,11,15,37,102,105,121,122,123,124,],[17,-38,-39,70,-32,-33,-34,-35,-37,-36,]),'MINUS_ASSIGN':([5,11,15,102,105,121,122,123,124,],[18,-38,-39,-32,-33,-34,-35,-37,-36,]),'PLUS_ASSIGN':([5,11,15,102,105,121,122,123,124,],[19,-38,-39,-32,-33,-34,-35,-37,-36,]),'TIMES_ASSIGN':([5,11,15,102,105,121,122,123,124,],[20,-38,-39,-32,-33,-34,-35,-37,-36,]),'DIVIDE_ASSIGN':([5,11,15,102,105,121,122,123,124,],[21,-38,-39,-32,-33,-34,-35,-37,-36,]),';':([6,8,9,11,15,23,24,25,26,32,33,41,42,43,44,45,46,47,57,68,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,105,109,110,111,112,121,122,123,124,],[22,35,36,-38,-39,48,-6,-7,-8,-4,-5,75,-10,77,78,79,80,81,-25,-16,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,-32,-33,-9,-12,-13,-14,-34,-35,-37,-36,]),'STRING':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'[':([6,11,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[27,38,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'ZEROS':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'EYE':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ONES':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'MINUS':([6,11,14,15,17,18,19,20,21,23,24,25,26,27,31,32,33,38,39,40,42,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,65,66,67,68,70,71,73,74,76,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,106,109,110,111,112,114,116,118,121,122,123,124,],[31,-38,31,-39,31,31,31,31,31,50,-6,-7,-8,31,31,-4,-5,31,31,31,50,50,50,50,50,50,31,31,31,31,31,31,31,31,-25,31,31,31,31,31,31,31,31,31,-16,31,50,50,50,31,-17,-18,-19,-20,-21,-22,-23,-24,50,50,50,50,50,50,-11,50,50,50,50,-32,31,31,-33,31,50,-12,-13,-14,50,50,50,-34,-35,-37,-36,]),'INT':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'FLOAT':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'PLUS':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,49,-6,-7,-8,-4,-5,49,49,49,49,49,49,-25,-16,49,49,49,-17,-18,-19,-20,-21,-22,-23,-24,49,49,49,49,49,49,-11,49,49,49,49,-32,-33,49,-12,-13,-14,49,49,49,-34,-35,-37,-36,]),'TIMES':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,51,-6,-7,-8,-4,-5,51,51,51,51,51,51,-25,51,51,51,51,51,51,-19,-20,-21,-22,-23,-24,51,51,51,51,51,51,-11,51,51,51,51,-32,-33,51,-12,-13,-14,51,51,51,-34,-35,-37,-36,]),'DIVIDE':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,52,-6,-7,-8,-4,-5,52,52,52,52,52,52,-25,52,52,52,52,52,52,-19,-20,-21,-22,-23,-24,52,52,52,52,52,52,-11,52,52,52,52,-32,-33,52,-12,-13,-14,52,52,52,-34,-35,-37,-36,]),'PLUS_MAT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,53,-6,-7,-8,-4,-5,53,53,53,53,53,53,-25,53,53,53,53,53,53,53,53,-21,-22,-23,-24,53,53,53,53,53,53,-11,53,53,53,53,-32,-33,53,-12,-13,-14,53,53,53,-34,-35,-37,-36,]),'MINUS_MAT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,54,-6,-7,-8,-4,-5,54,54,54,54,54,54,-25,54,54,54,54,54,54,54,54,-21,-22,-23,-24,54,54,54,54,54,54,-11,54,54,54,54,-32,-33,54,-12,-13,-14,54,54,54,-34,-35,-37,-36,]),'TIMES_MAT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,55,-6,-7,-8,-4,-5,55,55,55,55,55,55,-25,55,55,55,55,55,55,55,55,55,55,-23,-24,55,55,55,55,55,55,-11,55,55,55,55,-32,-33,55,-12,-13,-14,55,55,55,-34,-35,-37,-36,]),'DIVIDE_MAT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,56,-6,-7,-8,-4,-5,56,56,56,56,56,56,-25,56,56,56,56,56,56,56,56,56,56,-23,-24,56,56,56,56,56,56,-11,56,56,56,56,-32,-33,56,-12,-13,-14,56,56,56,-34,-35,-37,-36,]),'TRANSPOSE':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,57,-6,-7,-8,-4,-5,57,57,57,57,57,57,-25,-16,57,57,57,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,57,57,57,57,-32,-33,57,-12,-13,-14,57,57,57,-34,-35,-37,-36,]),'EQ':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,58,-6,-7,-8,-4,-5,58,58,58,58,58,58,-25,-16,58,58,58,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,58,58,58,58,-32,-33,58,-12,-13,-14,58,58,58,-34,-35,-37,-36,]),'NE':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,59,-6,-7,-8,-4,-5,59,59,59,59,59,59,-25,-16,59,59,59,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,59,59,59,59,-32,-33,59,-12,-13,-14,59,59,59,-34,-35,-37,-36,]),'GT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,60,-6,-7,-8,-4,-5,60,60,60,60,60,60,-25,-16,60,60,60,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,60,60,60,60,-32,-33,60,-12,-13,-14,60,60,60,-34,-35,-37,-36,]),'GE':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,61,-6,-7,-8,-4,-5,61,61,61,61,61,61,-25,-16,61,61,61,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,61,61,61,61,-32,-33,61,-12,-13,-14,61,61,61,-34,-35,-37,-36,]),'LT':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,62,-6,-7,-8,-4,-5,62,62,62,62,62,62,-25,-16,62,62,62,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,62,62,62,62,-32,-33,62,-12,-13,-14,62,62,62,-34,-35,-37,-36,]),'LE':([11,15,23,24,25,26,32,33,42,43,44,45,46,47,57,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,105,109,110,111,112,114,116,118,121,122,123,124,],[-38,-39,63,-6,-7,-8,-4,-5,63,63,63,63,63,63,-25,-16,63,63,63,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,63,63,63,63,-32,-33,63,-12,-13,-14,63,63,63,-34,-35,-37,-36,]),',':([11,15,24,25,26,32,33,41,42,57,64,68,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,105,109,110,111,112,116,121,122,123,124,],[-38,-39,-6,-7,-8,-4,-5,76,-10,-25,76,-16,103,106,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,-32,-33,-9,-12,-13,-14,-15,-34,-35,-37,-36,]),']':([11,15,24,25,26,32,33,42,57,64,68,71,72,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,102,105,109,110,111,112,114,115,116,117,118,121,122,123,124,],[-38,-39,-6,-7,-8,-4,-5,-10,-25,96,-16,102,105,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,-32,-33,-9,-12,-13,-14,121,122,-15,123,124,-34,-35,-37,-36,]),':':([11,15,24,25,26,32,33,57,68,71,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,105,110,111,112,114,118,121,122,123,124,],[-38,-39,-6,-7,-8,-4,-5,-25,-16,104,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,104,-32,-33,-12,-13,-14,104,104,-34,-35,-37,-36,]),')':([11,15,24,25,26,32,33,57,68,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,105,110,111,112,121,122,123,124,],[-38,-39,-6,-7,-8,-4,-5,-25,-16,107,108,-17,-18,-19,-20,-21,-22,-23,-24,-26,-27,-28,-29,-30,-31,-11,110,111,112,-32,-33,-12,-13,-14,-34,-35,-37,-36,]),'(':([12,13,28,29,30,],[39,40,65,66,67,]),'ELSE':([22,35,36,48,69,75,77,78,79,80,81,113,119,120,126,],[-47,-50,-51,-48,-49,-56,-40,-41,-42,-43,-44,-52,-53,125,-55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements_list':([0,7,],[2,34,]),'empty':([0,],[3,]),'statement':([0,2,7,34,100,107,108,125,],[4,16,4,16,113,119,120,126,]),'slice_or_id':([0,2,6,7,14,17,18,19,20,21,27,31,34,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,100,103,104,106,107,108,125,],[5,5,24,5,24,24,24,24,24,24,24,24,5,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,5,24,24,24,5,5,5,]),'slice':([0,2,6,7,14,17,18,19,20,21,27,31,34,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,100,103,104,106,107,108,125,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'expression':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[23,42,43,44,45,46,47,42,68,71,73,74,82,83,84,85,86,87,88,89,90,91,92,93,94,95,97,98,99,101,109,114,116,118,]),'number':([6,14,17,18,19,20,21,27,31,38,39,40,49,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,70,76,103,104,106,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'inner_table':([14,27,],[41,64,]),'range':([38,70,103,106,],[72,100,115,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements_list','program',1,'p_program','parser.py',18),
  ('program -> empty','program',1,'p_program','parser.py',19),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',23),
  ('number -> INT','number',1,'p_number','parser.py',27),
  ('number -> FLOAT','number',1,'p_number','parser.py',28),
  ('expression -> slice_or_id','expression',1,'p_expression','parser.py',32),
  ('expression -> number','expression',1,'p_expression','parser.py',33),
  ('expression -> STRING','expression',1,'p_expression','parser.py',34),
  ('inner_table -> inner_table , expression','inner_table',3,'p_table','parser.py',38),
  ('inner_table -> expression','inner_table',1,'p_table','parser.py',39),
  ('expression -> [ inner_table ]','expression',3,'p_table','parser.py',40),
  ('expression -> ZEROS ( expression )','expression',4,'p_matrix_maker','parser.py',44),
  ('expression -> EYE ( expression )','expression',4,'p_matrix_maker','parser.py',45),
  ('expression -> ONES ( expression )','expression',4,'p_matrix_maker','parser.py',46),
  ('range -> expression : expression','range',3,'p_range','parser.py',50),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',54),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',58),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',59),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',60),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',61),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',65),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',66),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',67),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',68),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',72),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',76),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',77),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',81),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',82),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',86),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',87),
  ('slice -> ID [ expression ]','slice',4,'p_slice','parser.py',91),
  ('slice -> ID [ range ]','slice',4,'p_slice','parser.py',92),
  ('slice -> ID [ expression , expression ]','slice',6,'p_slice','parser.py',93),
  ('slice -> ID [ expression , range ]','slice',6,'p_slice','parser.py',94),
  ('slice -> ID [ range , expression ]','slice',6,'p_slice','parser.py',95),
  ('slice -> ID [ range , range ]','slice',6,'p_slice','parser.py',96),
  ('slice_or_id -> ID','slice_or_id',1,'p_slice_or_id','parser.py',100),
  ('slice_or_id -> slice','slice_or_id',1,'p_slice_or_id','parser.py',101),
  ('statement -> slice_or_id ASSIGN expression ;','statement',4,'p_statement','parser.py',105),
  ('statement -> slice_or_id MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',106),
  ('statement -> slice_or_id PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',107),
  ('statement -> slice_or_id TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',108),
  ('statement -> slice_or_id DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',109),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','parser.py',113),
  ('statements_list -> statement','statements_list',1,'p_statements_list','parser.py',114),
  ('statement -> RETURN ;','statement',2,'p_return_statement','parser.py',118),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',119),
  ('statement -> { statements_list }','statement',3,'p_code_block','parser.py',123),
  ('statement -> BREAK ;','statement',2,'p_loop_statement','parser.py',127),
  ('statement -> CONTINUE ;','statement',2,'p_loop_statement','parser.py',128),
  ('statement -> FOR ID ASSIGN range statement','statement',5,'p_loop','parser.py',132),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',133),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',137),
  ('statement -> IF ( expression ) statement ELSE statement','statement',7,'p_if_statement','parser.py',138),
  ('statement -> PRINT inner_table ;','statement',3,'p_print','parser.py',142),
]
