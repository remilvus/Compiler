
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocRANGEnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK COMMENT CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT WHILE ZEROSnumber : INT\n              | FLOATexpression : ID\n                  | number\n                  | STRING\n                  | matrixinner_vector : expression ',' expression\n                    | inner_vector ',' expression\n        vector      : '[' expression ']'\n                    | '[' inner_vector ']' inner_matrix : vector\n                    | inner_matrix ',' vector\n       matrix       : '[' inner_matrix ']' matrix : ZEROS\n              | EYE\n              | ONESrange : INT ':' INT %prec RANGEexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : MINUS expressionexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionstatement : ID ASSIGN expression ';'\n                 | ID MINUS_ASSIGN expression ';'\n                 | ID PLUS_ASSIGN expression ';'\n                 | ID TIMES_ASSIGN expression ';'\n                 | ID DIVIDE_ASSIGN expression ';' code_block      : '{' statements_list '}'\n                       | '{' statement '}'\n       statements_list : statements_list statement\n                       | statement statementstatement : FOR ID EQ range code_block\n                 | FOR ID EQ range statement\n                 | WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' statementstatement : IF '(' expression ')' statement %prec JUST_IF\n                 | IF '(' expression ')' code_block %prec JUST_IF\n                 | IF '(' expression ')' statement else_block\n                 | IF '(' expression ')' code_block else_block\n       else_block : ELSE statement\n                  | ELSE code_blockstatement : PRINT inner_vector ';'"
    
_lr_action_items = {'ID':([0,1,2,4,7,8,9,10,11,12,13,14,16,17,24,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,60,61,62,63,64,65,67,68,89,90,91,93,94,95,96,100,101,102,103,104,105,106,107,108,109,],[3,3,3,15,20,-40,-41,20,20,20,20,20,20,20,20,-52,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-33,-34,-35,-36,-37,3,3,3,-42,-43,3,-44,-45,-46,-47,3,3,-17,-48,3,-49,-38,-39,-50,-51,]),'FOR':([0,1,2,8,9,39,60,61,62,63,64,65,67,68,89,90,91,93,94,95,96,100,101,102,103,104,105,106,107,108,109,],[4,4,4,-40,-41,-52,-33,-34,-35,-36,-37,4,4,4,-42,-43,4,-44,-45,-46,-47,4,4,-17,-48,4,-49,-38,-39,-50,-51,]),'WHILE':([0,1,2,8,9,39,60,61,62,63,64,65,67,68,89,90,91,93,94,95,96,100,101,102,103,104,105,106,107,108,109,],[5,5,5,-40,-41,-52,-33,-34,-35,-36,-37,5,5,5,-42,-43,5,-44,-45,-46,-47,5,5,-17,-48,5,-49,-38,-39,-50,-51,]),'IF':([0,1,2,8,9,39,60,61,62,63,64,65,67,68,89,90,91,93,94,95,96,100,101,102,103,104,105,106,107,108,109,],[6,6,6,-40,-41,-52,-33,-34,-35,-36,-37,6,6,6,-42,-43,6,-44,-45,-46,-47,6,6,-17,-48,6,-49,-38,-39,-50,-51,]),'PRINT':([0,1,2,8,9,39,60,61,62,63,64,65,67,68,89,90,91,93,94,95,96,100,101,102,103,104,105,106,107,108,109,],[7,7,7,-40,-41,-52,-33,-34,-35,-36,-37,7,7,7,-42,-43,7,-44,-45,-46,-47,7,7,-17,-48,7,-49,-38,-39,-50,-51,]),'$end':([1,8,9,39,60,61,62,63,64,89,90,93,94,95,96,103,105,106,107,108,109,],[0,-40,-41,-52,-33,-34,-35,-36,-37,-42,-43,-44,-45,-46,-47,-48,-49,-38,-39,-50,-51,]),'ASSIGN':([3,],[10,]),'MINUS_ASSIGN':([3,],[11,]),'PLUS_ASSIGN':([3,],[12,]),'TIMES_ASSIGN':([3,],[13,]),'DIVIDE_ASSIGN':([3,],[14,]),'(':([5,6,],[16,17,]),'STRING':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'MINUS':([7,10,11,12,13,14,16,17,19,20,21,22,23,24,25,26,28,29,30,31,32,33,34,35,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[24,24,24,24,24,24,24,24,43,-3,-4,-5,-6,24,-1,-2,-14,-15,-16,43,43,43,43,43,43,43,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-26,24,43,43,-18,-19,-20,-21,-22,-23,-24,-25,43,43,43,43,43,43,43,-13,]),'INT':([7,10,11,12,13,14,16,17,24,36,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,92,],[25,25,25,25,25,25,25,25,25,66,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,102,]),'FLOAT':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'[':([7,10,11,12,13,14,16,17,24,27,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,88,],[27,27,27,27,27,27,27,27,27,57,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,57,]),'ZEROS':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'EYE':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ONES':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'}':([8,9,39,60,61,62,63,64,89,90,93,94,95,96,100,101,103,105,106,107,108,109,],[-40,-41,-52,-33,-34,-35,-36,-37,-42,-43,-44,-45,-46,-47,106,107,-48,-49,-38,-39,-50,-51,]),'EQ':([15,19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[36,50,-3,-4,-5,-6,-1,-2,-14,-15,-16,50,50,50,50,50,50,50,-26,50,50,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,50,-13,]),';':([18,20,21,22,23,25,26,28,29,30,31,32,33,34,35,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,],[39,-3,-4,-5,-6,-1,-2,-14,-15,-16,60,61,62,63,64,-26,-8,-7,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,-13,]),',':([18,19,20,21,22,23,25,26,28,29,30,56,58,59,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,97,98,99,],[40,41,-3,-4,-5,-6,-1,-2,-14,-15,-16,-26,88,-11,-8,-7,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,41,40,-13,-9,-10,-12,]),'PLUS':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[42,-3,-4,-5,-6,-1,-2,-14,-15,-16,42,42,42,42,42,42,42,-26,42,42,-18,-19,-20,-21,-22,-23,-24,-25,42,42,42,42,42,42,42,-13,]),'TIMES':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[44,-3,-4,-5,-6,-1,-2,-14,-15,-16,44,44,44,44,44,44,44,44,44,44,44,44,-20,-21,-22,-23,-24,-25,44,44,44,44,44,44,44,-13,]),'DIVIDE':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[45,-3,-4,-5,-6,-1,-2,-14,-15,-16,45,45,45,45,45,45,45,45,45,45,45,45,-20,-21,-22,-23,-24,-25,45,45,45,45,45,45,45,-13,]),'PLUS_MAT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[46,-3,-4,-5,-6,-1,-2,-14,-15,-16,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-22,-23,-24,-25,46,46,46,46,46,46,46,-13,]),'MINUS_MAT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[47,-3,-4,-5,-6,-1,-2,-14,-15,-16,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-22,-23,-24,-25,47,47,47,47,47,47,47,-13,]),'TIMES_MAT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[48,-3,-4,-5,-6,-1,-2,-14,-15,-16,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-24,-25,48,48,48,48,48,48,48,-13,]),'DIVIDE_MAT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[49,-3,-4,-5,-6,-1,-2,-14,-15,-16,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-24,-25,49,49,49,49,49,49,49,-13,]),'NE':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[51,-3,-4,-5,-6,-1,-2,-14,-15,-16,51,51,51,51,51,51,51,-26,51,51,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,51,-13,]),'GT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[52,-3,-4,-5,-6,-1,-2,-14,-15,-16,52,52,52,52,52,52,52,-26,52,52,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,52,-13,]),'GE':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[53,-3,-4,-5,-6,-1,-2,-14,-15,-16,53,53,53,53,53,53,53,-26,53,53,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,53,-13,]),'LT':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[54,-3,-4,-5,-6,-1,-2,-14,-15,-16,54,54,54,54,54,54,54,-26,54,54,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,54,-13,]),'LE':([19,20,21,22,23,25,26,28,29,30,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,],[55,-3,-4,-5,-6,-1,-2,-14,-15,-16,55,55,55,55,55,55,55,-26,55,55,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,55,-13,]),')':([20,21,22,23,25,26,28,29,30,37,38,56,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,],[-3,-4,-5,-6,-1,-2,-14,-15,-16,67,68,-26,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,-13,]),']':([20,21,22,23,25,26,28,29,30,56,58,59,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,97,98,99,],[-3,-4,-5,-6,-1,-2,-14,-15,-16,-26,87,-11,-8,-7,-18,-19,-20,-21,-22,-23,-24,-25,-27,-28,-29,-30,-31,-32,97,98,-13,-9,-10,-12,]),'ELSE':([39,60,61,62,63,64,89,90,93,94,95,96,103,105,106,107,108,109,],[-52,-33,-34,-35,-36,-37,-42,-43,-44,-45,104,104,-48,-49,-38,-39,-50,-51,]),'{':([65,67,68,102,104,],[91,91,91,-17,91,]),':':([66,],[92,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,91,],[1,100,]),'statement':([0,1,2,65,67,68,91,100,101,104,],[2,8,9,90,94,95,101,8,9,108,]),'inner_vector':([7,57,],[18,86,]),'expression':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[19,31,32,33,34,35,37,38,56,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,]),'number':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrix':([7,10,11,12,13,14,16,17,24,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,57,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'inner_matrix':([27,],[58,]),'vector':([27,88,],[59,99,]),'range':([36,],[65,]),'code_block':([65,67,68,104,],[89,93,96,109,]),'else_block':([95,96,],[103,105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INT','number',1,'p_number','parser.py',19),
  ('number -> FLOAT','number',1,'p_number','parser.py',20),
  ('expression -> ID','expression',1,'p_expression','parser.py',24),
  ('expression -> number','expression',1,'p_expression','parser.py',25),
  ('expression -> STRING','expression',1,'p_expression','parser.py',26),
  ('expression -> matrix','expression',1,'p_expression','parser.py',27),
  ('inner_vector -> expression , expression','inner_vector',3,'p_vector','parser.py',31),
  ('inner_vector -> inner_vector , expression','inner_vector',3,'p_vector','parser.py',32),
  ('vector -> [ expression ]','vector',3,'p_vector','parser.py',33),
  ('vector -> [ inner_vector ]','vector',3,'p_vector','parser.py',34),
  ('inner_matrix -> vector','inner_matrix',1,'p_matrix','parser.py',43),
  ('inner_matrix -> inner_matrix , vector','inner_matrix',3,'p_matrix','parser.py',44),
  ('matrix -> [ inner_matrix ]','matrix',3,'p_matrix','parser.py',45),
  ('matrix -> ZEROS','matrix',1,'p_matrix_maker','parser.py',49),
  ('matrix -> EYE','matrix',1,'p_matrix_maker','parser.py',50),
  ('matrix -> ONES','matrix',1,'p_matrix_maker','parser.py',51),
  ('range -> INT : INT','range',3,'p_range','parser.py',55),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',59),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',60),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',61),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',62),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',65),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',66),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',67),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',68),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',71),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',75),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',76),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',80),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',81),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',85),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',86),
  ('statement -> ID ASSIGN expression ;','statement',4,'p_statement','parser.py',90),
  ('statement -> ID MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',91),
  ('statement -> ID PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',92),
  ('statement -> ID TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',93),
  ('statement -> ID DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',94),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',98),
  ('code_block -> { statement }','code_block',3,'p_code_block','parser.py',99),
  ('statements_list -> statements_list statement','statements_list',2,'p_code_block','parser.py',100),
  ('statements_list -> statement statement','statements_list',2,'p_code_block','parser.py',101),
  ('statement -> FOR ID EQ range code_block','statement',5,'p_loop','parser.py',105),
  ('statement -> FOR ID EQ range statement','statement',5,'p_loop','parser.py',106),
  ('statement -> WHILE ( expression ) code_block','statement',5,'p_loop','parser.py',107),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',108),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',114),
  ('statement -> IF ( expression ) code_block','statement',5,'p_if_statement','parser.py',115),
  ('statement -> IF ( expression ) statement else_block','statement',6,'p_if_statement','parser.py',116),
  ('statement -> IF ( expression ) code_block else_block','statement',6,'p_if_statement','parser.py',117),
  ('else_block -> ELSE statement','else_block',2,'p_if_statement','parser.py',118),
  ('else_block -> ELSE code_block','else_block',2,'p_if_statement','parser.py',119),
  ('statement -> PRINT inner_vector ;','statement',3,'p_print','parser.py',122),
]
