
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocRANGEnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT TRANSPOSE WHILE ZEROSnumber : INT\n              | FLOATexpression : ID\n                  | number\n                  | STRINGinner_table : expression ',' expression\n                   | inner_table ',' expression\n       expression  : '[' expression ']'\n                   | '[' inner_table ']' expression : ZEROS '(' expression ')'\n                  | EYE '(' expression ')'\n                  | ONES '(' expression ')' range : expression ':' expression %prec RANGEexpression : MINUS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionstatement : ID ASSIGN expression ';'\n                 | ID MINUS_ASSIGN expression ';'\n                 | ID PLUS_ASSIGN expression ';'\n                 | ID TIMES_ASSIGN expression ';'\n                 | ID DIVIDE_ASSIGN expression ';' slice : ID '[' expression ']'\n             | ID '[' range ']'\n             | ID '[' expression ',' expression ']'\n             | ID '[' expression ',' range ']'\n             | ID '[' range ',' expression ']'\n             | ID '[' range ',' range ']' statement : slice ASSIGN expression ';'\n                 | slice MINUS_ASSIGN expression ';'\n                 | slice PLUS_ASSIGN expression ';'\n                 | slice TIMES_ASSIGN expression ';'\n                 | slice DIVIDE_ASSIGN expression ';' statements_list : statements_list statement\n                       | statements_list code_block\n                       | statement statement\n                       | statement code_blockstatement : RETURN ';'\n                 | RETURN expression ';' code_block : '{' statements_list '}'\n                  | '{' statement '}' loop_statement : BREAK ';'\n                      | CONTINUE ';' loop_block           : '{' loop_statements_list '}'\n                            | '{' loop_statement '}'\n       loop_statements_list : loop_statements_list statement\n                            | statements_list loop_statement\n                            | loop_statement statement\n                            | statement loop_statementstatement : FOR ID ASSIGN range code_block\n                 | FOR ID ASSIGN range loop_block\n                 | FOR ID ASSIGN range statement\n                 | FOR ID ASSIGN range loop_statement\n                 | WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' loop_block\n                 | WHILE '(' expression ')' statement\n                 | WHILE '(' expression ')' loop_statementstatement  : IF '(' expression ')' statement %prec JUST_IF\n                  | IF '(' expression ')' code_block %prec JUST_IF\n                  | IF '(' expression ')' statement else_block\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE statement\n                  | ELSE code_blockloop_statement  : IF '(' expression ')' loop_statement %prec JUST_IF\n                       | IF '(' expression ')' loop_block %prec JUST_IF\n                       | IF '(' expression ')' loop_statement loop_else_block\n                       | IF '(' expression ')' statement loop_else_block\n                       | IF '(' expression ')' loop_statement else_block\n                       | IF '(' expression ')' loop_block loop_else_block\n                       | IF '(' expression ')' code_block loop_else_block\n                       | IF '(' expression ')' loop_block else_block\n       loop_else_block : ELSE loop_statement\n                       | ELSE loop_blockstatement : PRINT inner_table ';'\n                 | PRINT expression ';' "
    
_lr_action_items = {'ID':([0,1,2,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,31,35,36,37,39,40,43,44,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,77,78,79,82,83,84,85,86,87,88,89,90,91,92,94,95,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,190,191,192,194,195,196,],[3,3,3,28,38,28,-46,-47,3,-48,-49,28,28,28,28,28,28,28,28,28,28,28,-50,-3,-4,-5,28,28,-1,-2,28,28,3,3,-51,28,28,28,28,28,28,28,28,-23,28,28,28,28,28,28,28,28,28,-14,28,-86,28,-87,28,-52,-53,-30,-31,-32,-33,-34,28,28,28,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,3,3,3,-13,-10,-11,-12,-62,-63,-64,-65,3,-66,-67,-68,-69,-70,-71,3,3,3,3,28,-54,-55,-72,3,-73,-59,-61,-56,-58,-57,-60,-74,-75,3,-70,-71,-76,-77,-79,3,-82,-78,-80,3,-81,-83,-84,-85,3,28,3,3,3,-70,-71,]),'RETURN':([0,1,2,10,11,12,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[5,5,5,-46,-47,5,-48,-49,-50,-3,-4,-5,-1,-2,5,5,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,5,5,5,-13,-10,-11,-12,-62,-63,-64,-65,5,-66,-67,-68,-69,-70,-71,5,5,5,5,-54,-55,-72,5,-73,-59,-61,-56,-58,-57,-60,-74,-75,5,-70,-71,-76,-77,-79,5,-82,-78,-80,5,-81,-83,-84,-85,5,5,5,5,-70,-71,]),'FOR':([0,1,2,10,11,12,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[6,6,6,-46,-47,6,-48,-49,-50,-3,-4,-5,-1,-2,6,6,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,6,6,6,-13,-10,-11,-12,-62,-63,-64,-65,6,-66,-67,-68,-69,-70,-71,6,6,6,6,-54,-55,-72,6,-73,-59,-61,-56,-58,-57,-60,-74,-75,6,-70,-71,-76,-77,-79,6,-82,-78,-80,6,-81,-83,-84,-85,6,6,6,6,-70,-71,]),'WHILE':([0,1,2,10,11,12,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[7,7,7,-46,-47,7,-48,-49,-50,-3,-4,-5,-1,-2,7,7,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,7,7,7,-13,-10,-11,-12,-62,-63,-64,-65,7,-66,-67,-68,-69,-70,-71,7,7,7,7,-54,-55,-72,7,-73,-59,-61,-56,-58,-57,-60,-74,-75,7,-70,-71,-76,-77,-79,7,-82,-78,-80,7,-81,-83,-84,-85,7,7,7,7,-70,-71,]),'IF':([0,1,2,10,11,12,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[8,8,8,-46,-47,8,-48,-49,-50,-3,-4,-5,-1,-2,8,8,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,141,141,8,-13,-10,-11,-12,-62,-63,-64,-65,141,-66,-67,-68,-69,-70,-71,141,141,8,8,-54,-55,-72,8,-73,-59,-61,-56,-58,-57,-60,-74,-75,141,-70,-71,-76,-77,-79,141,-82,-78,-80,188,-81,-83,-84,-85,188,188,188,188,-70,-71,]),'PRINT':([0,1,2,10,11,12,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,140,144,145,146,147,148,149,154,155,156,157,159,160,161,162,163,164,165,166,167,168,169,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[9,9,9,-46,-47,9,-48,-49,-50,-3,-4,-5,-1,-2,9,9,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,9,9,9,-13,-10,-11,-12,-62,-63,-64,-65,9,-66,-67,-68,-69,-70,-71,9,9,9,9,-54,-55,-72,9,-73,-59,-61,-56,-58,-57,-60,-74,-75,9,-70,-71,-76,-77,-79,9,-82,-78,-80,9,-81,-83,-84,-85,9,9,9,9,-70,-71,]),'$end':([1,10,11,13,14,26,57,82,84,86,87,88,89,90,91,92,98,99,100,101,102,136,137,138,139,144,145,146,147,148,149,159,160,161,163,166,168,171,172,174,175,176,177,178,180,181,182,184,185,186,187,195,196,],[0,-46,-47,-48,-49,-50,-51,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,-54,-55,-72,-73,-56,-57,-74,-75,-70,-71,-76,-77,-79,-82,-78,-80,-81,-83,-84,-85,-70,-71,]),'{':([1,2,10,11,13,14,26,28,29,30,36,37,43,44,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,125,130,133,134,135,136,137,138,139,144,145,146,147,148,149,154,155,159,160,161,162,163,166,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,191,192,194,195,196,],[12,12,-46,-47,-48,-49,-50,-3,-4,-5,-1,-2,12,12,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,140,140,12,-13,-10,-11,-12,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,12,12,-54,-55,-72,12,-73,-56,-57,-74,-75,140,-70,-71,-76,-77,-79,140,-82,-78,-80,189,-81,-83,-84,-85,12,12,189,-70,-71,]),'ASSIGN':([3,4,38,93,96,150,151,152,153,],[15,21,79,-35,-36,-37,-38,-40,-39,]),'MINUS_ASSIGN':([3,4,93,96,150,151,152,153,],[16,22,-35,-36,-37,-38,-40,-39,]),'PLUS_ASSIGN':([3,4,93,96,150,151,152,153,],[17,23,-35,-36,-37,-38,-40,-39,]),'TIMES_ASSIGN':([3,4,93,96,150,151,152,153,],[18,24,-35,-36,-37,-38,-40,-39,]),'DIVIDE_ASSIGN':([3,4,93,96,150,151,152,153,],[19,25,-35,-36,-37,-38,-40,-39,]),'[':([3,5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),';':([5,27,28,29,30,36,37,41,42,45,46,47,48,49,52,53,54,55,56,66,78,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,133,134,135,142,143,],[26,57,-3,-4,-5,-1,-2,82,84,88,89,90,91,92,98,99,100,101,102,-23,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,-10,-11,-12,159,160,]),'STRING':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'ZEROS':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'EYE':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ONES':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'MINUS':([5,9,15,16,17,18,19,20,21,22,23,24,25,27,28,29,30,31,35,36,37,39,40,42,45,46,47,48,49,50,52,53,54,55,56,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,83,85,94,95,97,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,158,170,190,193,],[35,35,35,35,35,35,35,35,35,35,35,35,35,59,-3,-4,-5,35,35,-1,-2,35,35,59,59,59,59,59,59,59,59,59,59,59,59,35,35,35,35,35,35,35,35,-23,35,35,35,35,35,35,59,35,35,35,-14,35,59,59,35,35,35,35,35,-15,-16,-17,-18,-19,-20,-21,-22,59,59,59,59,59,59,-8,-9,59,59,59,59,59,59,59,59,59,-10,-11,-12,35,59,35,59,]),'INT':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'FLOAT':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'(':([7,8,32,33,34,141,188,],[39,40,75,76,77,158,190,]),'}':([10,11,13,14,26,43,44,57,82,84,86,87,88,89,90,91,92,98,99,100,101,102,136,137,138,139,144,145,146,147,148,149,154,155,156,157,159,160,161,163,164,165,166,167,168,169,171,172,174,175,176,177,178,180,181,182,184,185,186,187,191,192,195,196,],[-46,-47,-48,-49,-50,86,87,-51,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-62,-63,-64,-65,-66,-67,-68,-69,-70,-71,86,87,166,168,-54,-55,-72,-73,-59,-61,-56,-58,-57,-60,-74,-75,-70,-71,-76,-77,-79,-82,-78,-80,-81,-83,-84,-85,86,87,-70,-71,]),'BREAK':([10,11,13,14,26,28,29,30,36,37,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,130,133,134,135,136,137,138,139,140,144,145,146,147,154,155,159,160,161,163,166,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[-46,-47,-48,-49,-50,-3,-4,-5,-1,-2,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,142,142,-13,-10,-11,-12,-62,-63,-64,-65,142,-66,-67,-68,-69,142,142,-54,-55,-72,-73,-56,-57,-74,-75,142,-70,-71,-76,-77,-79,142,-82,-78,-80,142,-81,-83,-84,-85,142,142,142,142,-70,-71,]),'CONTINUE':([10,11,13,14,26,28,29,30,36,37,57,66,78,82,84,86,87,88,89,90,91,92,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,122,124,130,133,134,135,136,137,138,139,140,144,145,146,147,154,155,159,160,161,163,166,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,189,191,192,194,195,196,],[-46,-47,-48,-49,-50,-3,-4,-5,-1,-2,-51,-23,-14,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,143,143,-13,-10,-11,-12,-62,-63,-64,-65,143,-66,-67,-68,-69,143,143,-54,-55,-72,-73,-56,-57,-74,-75,143,-70,-71,-76,-77,-79,143,-82,-78,-80,143,-81,-83,-84,-85,143,143,143,143,-70,-71,]),'ELSE':([26,57,82,84,86,87,88,89,90,91,92,98,99,100,101,102,136,137,138,139,144,145,146,147,148,149,159,160,161,163,166,168,171,172,174,175,176,177,178,180,181,182,184,185,186,187,195,196,],[-50,-51,-86,-87,-52,-53,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-62,-63,-64,-65,-66,-67,-68,-69,162,162,-54,-55,-72,-73,-56,-57,-74,-75,179,179,183,183,-79,-82,-78,-80,-81,-83,-84,-85,183,183,]),'PLUS':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[58,-3,-4,-5,-1,-2,58,58,58,58,58,58,58,58,58,58,58,58,-23,58,-14,58,58,-15,-16,-17,-18,-19,-20,-21,-22,58,58,58,58,58,58,-8,-9,58,58,58,58,58,58,58,58,58,-10,-11,-12,58,58,]),'TIMES':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[60,-3,-4,-5,-1,-2,60,60,60,60,60,60,60,60,60,60,60,60,-23,60,60,60,60,60,60,-17,-18,-19,-20,-21,-22,60,60,60,60,60,60,-8,-9,60,60,60,60,60,60,60,60,60,-10,-11,-12,60,60,]),'DIVIDE':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[61,-3,-4,-5,-1,-2,61,61,61,61,61,61,61,61,61,61,61,61,-23,61,61,61,61,61,61,-17,-18,-19,-20,-21,-22,61,61,61,61,61,61,-8,-9,61,61,61,61,61,61,61,61,61,-10,-11,-12,61,61,]),'PLUS_MAT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[62,-3,-4,-5,-1,-2,62,62,62,62,62,62,62,62,62,62,62,62,-23,62,62,62,62,62,62,62,62,-19,-20,-21,-22,62,62,62,62,62,62,-8,-9,62,62,62,62,62,62,62,62,62,-10,-11,-12,62,62,]),'MINUS_MAT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[63,-3,-4,-5,-1,-2,63,63,63,63,63,63,63,63,63,63,63,63,-23,63,63,63,63,63,63,63,63,-19,-20,-21,-22,63,63,63,63,63,63,-8,-9,63,63,63,63,63,63,63,63,63,-10,-11,-12,63,63,]),'TIMES_MAT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[64,-3,-4,-5,-1,-2,64,64,64,64,64,64,64,64,64,64,64,64,-23,64,64,64,64,64,64,64,64,64,64,-21,-22,64,64,64,64,64,64,-8,-9,64,64,64,64,64,64,64,64,64,-10,-11,-12,64,64,]),'DIVIDE_MAT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[65,-3,-4,-5,-1,-2,65,65,65,65,65,65,65,65,65,65,65,65,-23,65,65,65,65,65,65,65,65,65,65,-21,-22,65,65,65,65,65,65,-8,-9,65,65,65,65,65,65,65,65,65,-10,-11,-12,65,65,]),'TRANSPOSE':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[66,-3,-4,-5,-1,-2,66,66,66,66,66,66,66,66,66,66,66,66,-23,66,-14,66,66,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,66,66,66,66,66,66,66,66,66,-10,-11,-12,66,66,]),'EQ':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[67,-3,-4,-5,-1,-2,67,67,67,67,67,67,67,67,67,67,67,67,-23,67,-14,67,67,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,67,67,67,67,67,67,67,67,67,-10,-11,-12,67,67,]),'NE':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[68,-3,-4,-5,-1,-2,68,68,68,68,68,68,68,68,68,68,68,68,-23,68,-14,68,68,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,68,68,68,68,68,68,68,68,68,-10,-11,-12,68,68,]),'GT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[69,-3,-4,-5,-1,-2,69,69,69,69,69,69,69,69,69,69,69,69,-23,69,-14,69,69,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,69,69,69,69,69,69,69,69,69,-10,-11,-12,69,69,]),'GE':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[70,-3,-4,-5,-1,-2,70,70,70,70,70,70,70,70,70,70,70,70,-23,70,-14,70,70,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,70,70,70,70,70,70,70,70,70,-10,-11,-12,70,70,]),'LT':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[71,-3,-4,-5,-1,-2,71,71,71,71,71,71,71,71,71,71,71,71,-23,71,-14,71,71,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,71,71,71,71,71,71,71,71,71,-10,-11,-12,71,71,]),'LE':([27,28,29,30,36,37,42,45,46,47,48,49,50,52,53,54,55,56,66,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,126,127,128,130,132,133,134,135,170,193,],[72,-3,-4,-5,-1,-2,72,72,72,72,72,72,72,72,72,72,72,72,-23,72,-14,72,72,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,72,72,72,72,72,72,72,72,72,-10,-11,-12,72,72,]),',':([28,29,30,36,37,41,42,50,51,66,73,74,78,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,130,133,134,135,],[-3,-4,-5,-1,-2,83,85,94,97,-23,85,83,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,-13,-10,-11,-12,]),']':([28,29,30,36,37,50,51,66,73,74,78,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,126,127,128,129,130,131,132,133,134,135,],[-3,-4,-5,-1,-2,93,96,-23,117,118,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,150,151,-13,152,153,-10,-11,-12,]),':':([28,29,30,36,37,50,66,78,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,123,128,132,133,134,135,],[-3,-4,-5,-1,-2,95,-23,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,95,95,95,-10,-11,-12,]),')':([28,29,30,36,37,66,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,133,134,135,170,193,],[-3,-4,-5,-1,-2,-23,-14,124,125,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,133,134,135,-10,-11,-12,173,194,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,12,140,189,],[1,43,154,191,]),'statement':([0,1,2,12,43,44,122,124,125,140,154,155,156,157,162,173,179,183,189,191,192,194,],[2,10,13,44,10,13,138,146,148,155,10,13,167,169,171,174,171,171,192,10,13,195,]),'slice':([0,1,2,12,43,44,122,124,125,140,154,155,156,157,162,173,179,183,189,191,192,194,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'code_block':([1,2,43,44,122,124,125,154,155,162,173,179,183,191,192,194,],[11,14,11,14,136,144,149,11,14,172,175,172,172,11,14,196,]),'expression':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[27,42,45,46,47,48,49,50,52,53,54,55,56,73,78,80,81,103,104,105,106,107,108,109,110,111,112,113,114,115,116,119,120,121,123,126,127,128,130,132,170,193,]),'number':([5,9,15,16,17,18,19,20,21,22,23,24,25,31,35,39,40,58,59,60,61,62,63,64,65,67,68,69,70,71,72,75,76,77,79,83,85,94,95,97,158,190,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'inner_table':([9,31,],[41,74,]),'range':([20,79,94,97,],[51,122,129,131,]),'loop_block':([122,124,173,179,183,194,],[137,145,177,187,187,177,]),'loop_statement':([122,124,140,154,155,173,179,183,189,191,192,194,],[139,147,157,164,165,176,186,186,157,164,165,176,]),'loop_statements_list':([140,189,],[156,156,]),'else_block':([148,149,174,175,176,177,195,196,],[161,163,161,163,182,185,161,163,]),'loop_else_block':([174,175,176,177,195,196,],[178,180,181,184,178,180,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INT','number',1,'p_number','parser.py',19),
  ('number -> FLOAT','number',1,'p_number','parser.py',20),
  ('expression -> ID','expression',1,'p_expression','parser.py',24),
  ('expression -> number','expression',1,'p_expression','parser.py',25),
  ('expression -> STRING','expression',1,'p_expression','parser.py',26),
  ('inner_table -> expression , expression','inner_table',3,'p_table','parser.py',30),
  ('inner_table -> inner_table , expression','inner_table',3,'p_table','parser.py',31),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',32),
  ('expression -> [ inner_table ]','expression',3,'p_table','parser.py',33),
  ('expression -> ZEROS ( expression )','expression',4,'p_matrix_maker','parser.py',37),
  ('expression -> EYE ( expression )','expression',4,'p_matrix_maker','parser.py',38),
  ('expression -> ONES ( expression )','expression',4,'p_matrix_maker','parser.py',39),
  ('range -> expression : expression','range',3,'p_range','parser.py',43),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',47),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',51),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',52),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',53),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',54),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',58),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',59),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',60),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',61),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',65),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',69),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',70),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',74),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',75),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',79),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',80),
  ('statement -> ID ASSIGN expression ;','statement',4,'p_statement','parser.py',84),
  ('statement -> ID MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',85),
  ('statement -> ID PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',86),
  ('statement -> ID TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',87),
  ('statement -> ID DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',88),
  ('slice -> ID [ expression ]','slice',4,'p_slice','parser.py',92),
  ('slice -> ID [ range ]','slice',4,'p_slice','parser.py',93),
  ('slice -> ID [ expression , expression ]','slice',6,'p_slice','parser.py',94),
  ('slice -> ID [ expression , range ]','slice',6,'p_slice','parser.py',95),
  ('slice -> ID [ range , expression ]','slice',6,'p_slice','parser.py',96),
  ('slice -> ID [ range , range ]','slice',6,'p_slice','parser.py',97),
  ('statement -> slice ASSIGN expression ;','statement',4,'p_slicing_statement','parser.py',101),
  ('statement -> slice MINUS_ASSIGN expression ;','statement',4,'p_slicing_statement','parser.py',102),
  ('statement -> slice PLUS_ASSIGN expression ;','statement',4,'p_slicing_statement','parser.py',103),
  ('statement -> slice TIMES_ASSIGN expression ;','statement',4,'p_slicing_statement','parser.py',104),
  ('statement -> slice DIVIDE_ASSIGN expression ;','statement',4,'p_slicing_statement','parser.py',105),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','parser.py',109),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',110),
  ('statements_list -> statement statement','statements_list',2,'p_statements_list','parser.py',111),
  ('statements_list -> statement code_block','statements_list',2,'p_statements_list','parser.py',112),
  ('statement -> RETURN ;','statement',2,'p_return_statement','parser.py',116),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',117),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',121),
  ('code_block -> { statement }','code_block',3,'p_code_block','parser.py',122),
  ('loop_statement -> BREAK ;','loop_statement',2,'p_loop_statement','parser.py',126),
  ('loop_statement -> CONTINUE ;','loop_statement',2,'p_loop_statement','parser.py',127),
  ('loop_block -> { loop_statements_list }','loop_block',3,'p_loop_block','parser.py',131),
  ('loop_block -> { loop_statement }','loop_block',3,'p_loop_block','parser.py',132),
  ('loop_statements_list -> loop_statements_list statement','loop_statements_list',2,'p_loop_block','parser.py',133),
  ('loop_statements_list -> statements_list loop_statement','loop_statements_list',2,'p_loop_block','parser.py',134),
  ('loop_statements_list -> loop_statement statement','loop_statements_list',2,'p_loop_block','parser.py',135),
  ('loop_statements_list -> statement loop_statement','loop_statements_list',2,'p_loop_block','parser.py',136),
  ('statement -> FOR ID ASSIGN range code_block','statement',5,'p_loop','parser.py',140),
  ('statement -> FOR ID ASSIGN range loop_block','statement',5,'p_loop','parser.py',141),
  ('statement -> FOR ID ASSIGN range statement','statement',5,'p_loop','parser.py',142),
  ('statement -> FOR ID ASSIGN range loop_statement','statement',5,'p_loop','parser.py',143),
  ('statement -> WHILE ( expression ) code_block','statement',5,'p_loop','parser.py',144),
  ('statement -> WHILE ( expression ) loop_block','statement',5,'p_loop','parser.py',145),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',146),
  ('statement -> WHILE ( expression ) loop_statement','statement',5,'p_loop','parser.py',147),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',152),
  ('statement -> IF ( expression ) code_block','statement',5,'p_if_statement','parser.py',153),
  ('statement -> IF ( expression ) statement else_block','statement',6,'p_if_statement','parser.py',154),
  ('statement -> IF ( expression ) code_block else_block','statement',6,'p_if_statement','parser.py',155),
  ('else_block -> ELSE statement','else_block',2,'p_if_statement','parser.py',156),
  ('else_block -> ELSE code_block','else_block',2,'p_if_statement','parser.py',157),
  ('loop_statement -> IF ( expression ) loop_statement','loop_statement',5,'p_loop_if_statement','parser.py',161),
  ('loop_statement -> IF ( expression ) loop_block','loop_statement',5,'p_loop_if_statement','parser.py',162),
  ('loop_statement -> IF ( expression ) loop_statement loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',163),
  ('loop_statement -> IF ( expression ) statement loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',164),
  ('loop_statement -> IF ( expression ) loop_statement else_block','loop_statement',6,'p_loop_if_statement','parser.py',165),
  ('loop_statement -> IF ( expression ) loop_block loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',166),
  ('loop_statement -> IF ( expression ) code_block loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',167),
  ('loop_statement -> IF ( expression ) loop_block else_block','loop_statement',6,'p_loop_if_statement','parser.py',168),
  ('loop_else_block -> ELSE loop_statement','loop_else_block',2,'p_loop_if_statement','parser.py',169),
  ('loop_else_block -> ELSE loop_block','loop_else_block',2,'p_loop_if_statement','parser.py',170),
  ('statement -> PRINT inner_table ;','statement',3,'p_print','parser.py',174),
  ('statement -> PRINT expression ;','statement',3,'p_print','parser.py',175),
]
