
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocRANGEnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT TRANSPOSE WHILE ZEROSnumber : INT\n              | FLOATexpression : ID\n                  | number\n                  | STRING\n                  | matrixinner_vector : expression ',' expression\n                    | inner_vector ',' expression\n        vector      : '[' expression ']'\n                    | '[' inner_vector ']' inner_matrix : vector\n                    | inner_matrix ',' vector\n       matrix       : '[' inner_matrix ']' matrix : ZEROS '(' expression ')'\n              | EYE '(' expression ')'\n              | ONES '(' expression ')' range : expression ':' expression %prec RANGEexpression : MINUS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionstatement : ID ASSIGN expression ';'\n                 | ID MINUS_ASSIGN expression ';'\n                 | ID PLUS_ASSIGN expression ';'\n                 | ID TIMES_ASSIGN expression ';'\n                 | ID DIVIDE_ASSIGN expression ';' statements_list : statements_list statement\n                       | statements_list code_block\n                       | statement statement\n                       | statement code_blockstatement : RETURN expression ';' code_block      : '{' statements_list '}'\n                       | '{' statement '}' loop_statement : BREAK ';'\n                      | CONTINUE ';' loop_block           : '{' loop_statements_list '}'\n                            | '{' loop_statement '}'\n       loop_statements_list : loop_statements_list statement\n                            | statements_list loop_statement\n                            | loop_statement statement\n                            | statement loop_statementstatement : FOR ID ASSIGN range code_block\n                 | FOR ID ASSIGN range loop_block\n                 | FOR ID ASSIGN range statement\n                 | FOR ID ASSIGN range loop_statement\n                 | WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' loop_block\n                 | WHILE '(' expression ')' statement\n                 | WHILE '(' expression ')' loop_statementstatement  : IF '(' expression ')' statement %prec JUST_IF\n                  | IF '(' expression ')' code_block %prec JUST_IF\n                  | IF '(' expression ')' statement else_block\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE statement\n                  | ELSE code_blockloop_statement  : IF '(' expression ')' loop_statement %prec JUST_IF\n                       | IF '(' expression ')' loop_block %prec JUST_IF\n                       | IF '(' expression ')' loop_statement loop_else_block\n                       | IF '(' expression ')' statement loop_else_block\n                       | IF '(' expression ')' loop_statement else_block\n                       | IF '(' expression ')' loop_block loop_else_block\n                       | IF '(' expression ')' code_block loop_else_block\n                       | IF '(' expression ')' loop_block else_block\n       loop_else_block : ELSE loop_statement\n                       | ELSE loop_blockstatement : PRINT inner_vector ';'\n                 | PRINT expression ';' "
    
_lr_action_items = {'ID':([0,1,2,4,5,8,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,32,33,36,37,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,166,167,169,170,171,],[3,3,3,20,31,20,-39,-40,3,-41,-42,20,20,20,20,20,-3,-4,-5,-6,20,-1,-2,20,20,3,3,-43,20,20,20,20,20,20,20,20,-27,20,20,20,20,20,20,-18,20,20,20,20,20,-78,20,-79,20,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,3,3,3,-14,-15,-16,-54,-55,-56,-57,3,20,-58,-59,-60,-61,-62,-63,3,3,3,3,20,-46,-47,-17,-64,3,-65,-51,-53,-48,-50,-49,-52,-66,-67,3,-62,-63,-68,-69,-71,3,-74,-70,-72,3,-73,-75,-76,-77,3,20,3,3,3,-62,-63,]),'RETURN':([0,1,2,9,10,11,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[4,4,4,-39,-40,4,-41,-42,-3,-4,-5,-6,-1,-2,4,4,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,4,4,4,-14,-15,-16,-54,-55,-56,-57,4,-58,-59,-60,-61,-62,-63,4,4,4,4,-46,-47,-17,-64,4,-65,-51,-53,-48,-50,-49,-52,-66,-67,4,-62,-63,-68,-69,-71,4,-74,-70,-72,4,-73,-75,-76,-77,4,4,4,4,-62,-63,]),'FOR':([0,1,2,9,10,11,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[5,5,5,-39,-40,5,-41,-42,-3,-4,-5,-6,-1,-2,5,5,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,5,5,5,-14,-15,-16,-54,-55,-56,-57,5,-58,-59,-60,-61,-62,-63,5,5,5,5,-46,-47,-17,-64,5,-65,-51,-53,-48,-50,-49,-52,-66,-67,5,-62,-63,-68,-69,-71,5,-74,-70,-72,5,-73,-75,-76,-77,5,5,5,5,-62,-63,]),'WHILE':([0,1,2,9,10,11,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[6,6,6,-39,-40,6,-41,-42,-3,-4,-5,-6,-1,-2,6,6,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,6,6,6,-14,-15,-16,-54,-55,-56,-57,6,-58,-59,-60,-61,-62,-63,6,6,6,6,-46,-47,-17,-64,6,-65,-51,-53,-48,-50,-49,-52,-66,-67,6,-62,-63,-68,-69,-71,6,-74,-70,-72,6,-73,-75,-76,-77,6,6,6,6,-62,-63,]),'IF':([0,1,2,9,10,11,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[7,7,7,-39,-40,7,-41,-42,-3,-4,-5,-6,-1,-2,7,7,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,118,118,7,-14,-15,-16,-54,-55,-56,-57,118,-58,-59,-60,-61,-62,-63,118,118,7,7,-46,-47,-17,-64,7,-65,-51,-53,-48,-50,-49,-52,-66,-67,118,-62,-63,-68,-69,-71,118,-74,-70,-72,163,-73,-75,-76,-77,163,163,163,163,-62,-63,]),'PRINT':([0,1,2,9,10,11,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,117,122,123,124,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[8,8,8,-39,-40,8,-41,-42,-3,-4,-5,-6,-1,-2,8,8,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,8,8,8,-14,-15,-16,-54,-55,-56,-57,8,-58,-59,-60,-61,-62,-63,8,8,8,8,-46,-47,-17,-64,8,-65,-51,-53,-48,-50,-49,-52,-66,-67,8,-62,-63,-68,-69,-71,8,-74,-70,-72,8,-73,-75,-76,-77,8,8,8,8,-62,-63,]),'$end':([1,9,10,12,13,43,69,71,73,74,75,76,77,78,79,113,114,115,116,122,123,124,125,126,127,133,134,136,138,141,143,146,147,149,150,151,152,153,155,156,157,159,160,161,162,170,171,],[0,-39,-40,-41,-42,-43,-78,-79,-44,-45,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,-46,-47,-64,-65,-48,-49,-66,-67,-62,-63,-68,-69,-71,-74,-70,-72,-73,-75,-76,-77,-62,-63,]),'{':([1,2,9,10,12,13,20,21,22,23,25,26,36,37,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,104,110,111,112,113,114,115,116,122,123,124,125,126,127,128,129,133,134,135,136,137,138,141,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,166,167,169,170,171,],[11,11,-39,-40,-41,-42,-3,-4,-5,-6,-1,-2,11,11,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,117,117,11,-14,-15,-16,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,11,11,-46,-47,-17,-64,11,-65,-48,-49,-66,-67,117,-62,-63,-68,-69,-71,117,-74,-70,-72,164,-73,-75,-76,-77,11,11,164,-62,-63,]),'ASSIGN':([3,31,],[14,66,]),'MINUS_ASSIGN':([3,],[15,]),'PLUS_ASSIGN':([3,],[16,]),'TIMES_ASSIGN':([3,],[17,]),'DIVIDE_ASSIGN':([3,],[18,]),'STRING':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'MINUS':([4,8,14,15,16,17,18,19,20,21,22,23,24,25,26,32,33,35,38,39,40,41,42,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,70,72,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,121,132,135,145,165,168,],[24,24,24,24,24,24,24,45,-3,-4,-5,-6,24,-1,-2,24,24,45,45,45,45,45,45,24,24,24,24,24,24,24,24,-27,24,24,24,24,24,24,-18,24,24,24,24,24,45,45,24,24,-19,-20,-21,-22,-23,-24,-25,-26,45,45,45,45,45,45,45,-13,45,45,45,45,45,45,-14,-15,-16,24,24,45,45,24,45,]),'INT':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'FLOAT':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'[':([4,8,14,15,16,17,18,24,27,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,97,121,132,165,],[27,27,27,27,27,27,27,27,60,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,60,27,27,27,]),'ZEROS':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'EYE':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'ONES':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'(':([6,7,28,29,30,118,163,],[32,33,63,64,65,132,165,]),'}':([9,10,12,13,36,37,43,69,71,73,74,75,76,77,78,79,113,114,115,116,122,123,124,125,126,127,128,129,130,131,133,134,136,138,139,140,141,142,143,144,146,147,149,150,151,152,153,155,156,157,159,160,161,162,166,167,170,171,],[-39,-40,-41,-42,73,74,-43,-78,-79,-44,-45,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,-59,-60,-61,-62,-63,73,74,141,143,-46,-47,-64,-65,-51,-53,-48,-50,-49,-52,-66,-67,-62,-63,-68,-69,-71,-74,-70,-72,-73,-75,-76,-77,73,74,-62,-63,]),'BREAK':([9,10,12,13,20,21,22,23,25,26,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,110,111,112,113,114,115,116,117,122,123,124,125,128,129,133,134,135,136,138,141,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[-39,-40,-41,-42,-3,-4,-5,-6,-1,-2,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,119,119,-14,-15,-16,-54,-55,-56,-57,119,-58,-59,-60,-61,119,119,-46,-47,-17,-64,-65,-48,-49,-66,-67,119,-62,-63,-68,-69,-71,119,-74,-70,-72,119,-73,-75,-76,-77,119,119,119,119,-62,-63,]),'CONTINUE':([9,10,12,13,20,21,22,23,25,26,43,52,59,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,101,103,110,111,112,113,114,115,116,117,122,123,124,125,128,129,133,134,135,136,138,141,143,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,166,167,169,170,171,],[-39,-40,-41,-42,-3,-4,-5,-6,-1,-2,-43,-27,-18,-78,-79,-44,-45,-34,-35,-36,-37,-38,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,120,120,-14,-15,-16,-54,-55,-56,-57,120,-58,-59,-60,-61,120,120,-46,-47,-17,-64,-65,-48,-49,-66,-67,120,-62,-63,-68,-69,-71,120,-74,-70,-72,120,-73,-75,-76,-77,120,120,120,120,-62,-63,]),';':([19,20,21,22,23,25,26,34,35,38,39,40,41,42,52,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,105,106,110,111,112,119,120,],[43,-3,-4,-5,-6,-1,-2,69,71,75,76,77,78,79,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,-8,-7,-14,-15,-16,133,134,]),'PLUS':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[44,-3,-4,-5,-6,-1,-2,44,44,44,44,44,44,-27,-18,44,44,-19,-20,-21,-22,-23,-24,-25,-26,44,44,44,44,44,44,44,-13,44,44,44,44,44,44,-14,-15,-16,44,44,44,]),'TIMES':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[46,-3,-4,-5,-6,-1,-2,46,46,46,46,46,46,-27,46,46,46,46,46,-21,-22,-23,-24,-25,-26,46,46,46,46,46,46,46,-13,46,46,46,46,46,46,-14,-15,-16,46,46,46,]),'DIVIDE':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[47,-3,-4,-5,-6,-1,-2,47,47,47,47,47,47,-27,47,47,47,47,47,-21,-22,-23,-24,-25,-26,47,47,47,47,47,47,47,-13,47,47,47,47,47,47,-14,-15,-16,47,47,47,]),'PLUS_MAT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[48,-3,-4,-5,-6,-1,-2,48,48,48,48,48,48,-27,48,48,48,48,48,48,48,-23,-24,-25,-26,48,48,48,48,48,48,48,-13,48,48,48,48,48,48,-14,-15,-16,48,48,48,]),'MINUS_MAT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[49,-3,-4,-5,-6,-1,-2,49,49,49,49,49,49,-27,49,49,49,49,49,49,49,-23,-24,-25,-26,49,49,49,49,49,49,49,-13,49,49,49,49,49,49,-14,-15,-16,49,49,49,]),'TIMES_MAT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[50,-3,-4,-5,-6,-1,-2,50,50,50,50,50,50,-27,50,50,50,50,50,50,50,50,50,-25,-26,50,50,50,50,50,50,50,-13,50,50,50,50,50,50,-14,-15,-16,50,50,50,]),'DIVIDE_MAT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[51,-3,-4,-5,-6,-1,-2,51,51,51,51,51,51,-27,51,51,51,51,51,51,51,51,51,-25,-26,51,51,51,51,51,51,51,-13,51,51,51,51,51,51,-14,-15,-16,51,51,51,]),'TRANSPOSE':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[52,-3,-4,-5,-6,-1,-2,52,52,52,52,52,52,-27,-18,52,52,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,52,-13,52,52,52,52,52,52,-14,-15,-16,52,52,52,]),'EQ':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[53,-3,-4,-5,-6,-1,-2,53,53,53,53,53,53,-27,-18,53,53,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,53,-13,53,53,53,53,53,53,-14,-15,-16,53,53,53,]),'NE':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[54,-3,-4,-5,-6,-1,-2,54,54,54,54,54,54,-27,-18,54,54,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,54,-13,54,54,54,54,54,54,-14,-15,-16,54,54,54,]),'GT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[55,-3,-4,-5,-6,-1,-2,55,55,55,55,55,55,-27,-18,55,55,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,55,-13,55,55,55,55,55,55,-14,-15,-16,55,55,55,]),'GE':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[56,-3,-4,-5,-6,-1,-2,56,56,56,56,56,56,-27,-18,56,56,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,56,-13,56,56,56,56,56,56,-14,-15,-16,56,56,56,]),'LT':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[57,-3,-4,-5,-6,-1,-2,57,57,57,57,57,57,-27,-18,57,57,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,57,-13,57,57,57,57,57,57,-14,-15,-16,57,57,57,]),'LE':([19,20,21,22,23,25,26,35,38,39,40,41,42,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,96,98,99,100,102,105,106,110,111,112,135,145,168,],[58,-3,-4,-5,-6,-1,-2,58,58,58,58,58,58,-27,-18,58,58,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,58,-13,58,58,58,58,58,58,-14,-15,-16,58,58,58,]),',':([20,21,22,23,25,26,34,35,52,59,61,62,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,106,107,108,109,110,111,112,],[-3,-4,-5,-6,-1,-2,70,72,-27,-18,97,-11,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,72,70,-13,-8,-7,-9,-10,-12,-14,-15,-16,]),')':([20,21,22,23,25,26,52,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,98,99,100,110,111,112,145,168,],[-3,-4,-5,-6,-1,-2,-27,-18,103,104,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,110,111,112,-14,-15,-16,148,169,]),']':([20,21,22,23,25,26,52,59,61,62,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,105,106,107,108,109,110,111,112,],[-3,-4,-5,-6,-1,-2,-27,-18,96,-11,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,107,108,-13,-8,-7,-9,-10,-12,-14,-15,-16,]),':':([20,21,22,23,25,26,52,59,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,102,110,111,112,],[-3,-4,-5,-6,-1,-2,-27,-18,-19,-20,-21,-22,-23,-24,-25,-26,-28,-29,-30,-31,-32,-33,-13,121,-14,-15,-16,]),'ELSE':([43,69,71,73,74,75,76,77,78,79,113,114,115,116,122,123,124,125,126,127,133,134,136,138,141,143,146,147,149,150,151,152,153,155,156,157,159,160,161,162,170,171,],[-43,-78,-79,-44,-45,-34,-35,-36,-37,-38,-54,-55,-56,-57,-58,-59,-60,-61,137,137,-46,-47,-64,-65,-48,-49,-66,-67,154,154,158,158,-71,-74,-70,-72,-73,-75,-76,-77,158,158,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,11,117,164,],[1,36,128,166,]),'statement':([0,1,2,11,36,37,101,103,104,117,128,129,130,131,137,148,154,158,164,166,167,169,],[2,9,12,37,9,12,115,124,126,129,9,12,142,144,146,149,146,146,167,9,12,170,]),'code_block':([1,2,36,37,101,103,104,128,129,137,148,154,158,166,167,169,],[10,13,10,13,113,122,127,10,13,147,150,147,147,10,13,171,]),'expression':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[19,35,38,39,40,41,42,59,67,68,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,98,99,100,102,105,106,135,145,168,]),'number':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'matrix':([4,8,14,15,16,17,18,24,32,33,44,45,46,47,48,49,50,51,53,54,55,56,57,58,60,63,64,65,66,70,72,121,132,165,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'inner_vector':([8,60,],[34,95,]),'inner_matrix':([27,],[61,]),'vector':([27,97,],[62,109,]),'range':([66,],[101,]),'loop_block':([101,103,148,154,158,169,],[114,123,152,162,162,152,]),'loop_statement':([101,103,117,128,129,148,154,158,164,166,167,169,],[116,125,131,139,140,151,161,161,131,139,140,151,]),'loop_statements_list':([117,164,],[130,130,]),'else_block':([126,127,149,150,151,152,170,171,],[136,138,136,138,157,160,136,138,]),'loop_else_block':([149,150,151,152,170,171,],[153,155,156,159,153,155,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INT','number',1,'p_number','parser.py',19),
  ('number -> FLOAT','number',1,'p_number','parser.py',20),
  ('expression -> ID','expression',1,'p_expression','parser.py',24),
  ('expression -> number','expression',1,'p_expression','parser.py',25),
  ('expression -> STRING','expression',1,'p_expression','parser.py',26),
  ('expression -> matrix','expression',1,'p_expression','parser.py',27),
  ('inner_vector -> expression , expression','inner_vector',3,'p_vector','parser.py',31),
  ('inner_vector -> inner_vector , expression','inner_vector',3,'p_vector','parser.py',32),
  ('vector -> [ expression ]','vector',3,'p_vector','parser.py',33),
  ('vector -> [ inner_vector ]','vector',3,'p_vector','parser.py',34),
  ('inner_matrix -> vector','inner_matrix',1,'p_matrix','parser.py',38),
  ('inner_matrix -> inner_matrix , vector','inner_matrix',3,'p_matrix','parser.py',39),
  ('matrix -> [ inner_matrix ]','matrix',3,'p_matrix','parser.py',40),
  ('matrix -> ZEROS ( expression )','matrix',4,'p_matrix_maker','parser.py',44),
  ('matrix -> EYE ( expression )','matrix',4,'p_matrix_maker','parser.py',45),
  ('matrix -> ONES ( expression )','matrix',4,'p_matrix_maker','parser.py',46),
  ('range -> expression : expression','range',3,'p_range','parser.py',50),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',54),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',58),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',59),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',60),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',61),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',65),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',66),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',67),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',68),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',72),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',76),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',77),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',81),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',82),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',86),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',87),
  ('statement -> ID ASSIGN expression ;','statement',4,'p_statement','parser.py',91),
  ('statement -> ID MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',92),
  ('statement -> ID PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',93),
  ('statement -> ID TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',94),
  ('statement -> ID DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',95),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','parser.py',99),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',100),
  ('statements_list -> statement statement','statements_list',2,'p_statements_list','parser.py',101),
  ('statements_list -> statement code_block','statements_list',2,'p_statements_list','parser.py',102),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',106),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',110),
  ('code_block -> { statement }','code_block',3,'p_code_block','parser.py',111),
  ('loop_statement -> BREAK ;','loop_statement',2,'p_loop_statement','parser.py',115),
  ('loop_statement -> CONTINUE ;','loop_statement',2,'p_loop_statement','parser.py',116),
  ('loop_block -> { loop_statements_list }','loop_block',3,'p_loop_block','parser.py',120),
  ('loop_block -> { loop_statement }','loop_block',3,'p_loop_block','parser.py',121),
  ('loop_statements_list -> loop_statements_list statement','loop_statements_list',2,'p_loop_block','parser.py',122),
  ('loop_statements_list -> statements_list loop_statement','loop_statements_list',2,'p_loop_block','parser.py',123),
  ('loop_statements_list -> loop_statement statement','loop_statements_list',2,'p_loop_block','parser.py',124),
  ('loop_statements_list -> statement loop_statement','loop_statements_list',2,'p_loop_block','parser.py',125),
  ('statement -> FOR ID ASSIGN range code_block','statement',5,'p_loop','parser.py',129),
  ('statement -> FOR ID ASSIGN range loop_block','statement',5,'p_loop','parser.py',130),
  ('statement -> FOR ID ASSIGN range statement','statement',5,'p_loop','parser.py',131),
  ('statement -> FOR ID ASSIGN range loop_statement','statement',5,'p_loop','parser.py',132),
  ('statement -> WHILE ( expression ) code_block','statement',5,'p_loop','parser.py',133),
  ('statement -> WHILE ( expression ) loop_block','statement',5,'p_loop','parser.py',134),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',135),
  ('statement -> WHILE ( expression ) loop_statement','statement',5,'p_loop','parser.py',136),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',141),
  ('statement -> IF ( expression ) code_block','statement',5,'p_if_statement','parser.py',142),
  ('statement -> IF ( expression ) statement else_block','statement',6,'p_if_statement','parser.py',143),
  ('statement -> IF ( expression ) code_block else_block','statement',6,'p_if_statement','parser.py',144),
  ('else_block -> ELSE statement','else_block',2,'p_if_statement','parser.py',145),
  ('else_block -> ELSE code_block','else_block',2,'p_if_statement','parser.py',146),
  ('loop_statement -> IF ( expression ) loop_statement','loop_statement',5,'p_loop_if_statement','parser.py',150),
  ('loop_statement -> IF ( expression ) loop_block','loop_statement',5,'p_loop_if_statement','parser.py',151),
  ('loop_statement -> IF ( expression ) loop_statement loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',152),
  ('loop_statement -> IF ( expression ) statement loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',153),
  ('loop_statement -> IF ( expression ) loop_statement else_block','loop_statement',6,'p_loop_if_statement','parser.py',154),
  ('loop_statement -> IF ( expression ) loop_block loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',155),
  ('loop_statement -> IF ( expression ) code_block loop_else_block','loop_statement',6,'p_loop_if_statement','parser.py',156),
  ('loop_statement -> IF ( expression ) loop_block else_block','loop_statement',6,'p_loop_if_statement','parser.py',157),
  ('loop_else_block -> ELSE loop_statement','loop_else_block',2,'p_loop_if_statement','parser.py',158),
  ('loop_else_block -> ELSE loop_block','loop_else_block',2,'p_loop_if_statement','parser.py',159),
  ('statement -> PRINT inner_vector ;','statement',3,'p_print','parser.py',163),
  ('statement -> PRINT expression ;','statement',3,'p_print','parser.py',164),
]
