
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "statements_listnonassocJUST_IFnonassocELSEnonassocASSIGNMINUS_ASSIGNPLUS_ASSIGNTIMES_ASSIGNDIVIDE_ASSIGNleftEQNEGTGELTLEleftPLUSMINUSleftTIMESDIVIDEleftPLUS_MATMINUS_MATleftTIMES_MATDIVIDE_MATASSIGN BREAK CONTINUE DIVIDE DIVIDE_ASSIGN DIVIDE_MAT ELSE EQ EYE FLOAT FOR GE GT ID IF INT LE LT MINUS MINUS_ASSIGN MINUS_MAT NE ONES PLUS PLUS_ASSIGN PLUS_MAT PRINT RETURN STRING TIMES TIMES_ASSIGN TIMES_MAT TRANSPOSE WHILE ZEROSnumber : INT\n              | FLOATexpression : ID\n                  | number\n                  | STRINGinner_table : expression ',' expression\n                   | inner_table ',' expression\n       expression  : '[' expression ']'\n                   | '[' inner_table ']' expression : ZEROS '(' expression ')'\n                  | EYE '(' expression ')'\n                  | ONES '(' expression ')' range : expression ':' expressionexpression : MINUS expressionexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expressionexpression : expression PLUS_MAT expression\n                  | expression MINUS_MAT expression\n                  | expression TIMES_MAT expression\n                  | expression DIVIDE_MAT expressionexpression : expression TRANSPOSEexpression : expression EQ expression\n                  | expression NE expressionexpression : expression GT expression\n                  | expression GE expressionexpression : expression LT expression\n                  | expression LE expressionstatement : ID ASSIGN expression ';'\n                 | ID MINUS_ASSIGN expression ';'\n                 | ID PLUS_ASSIGN expression ';'\n                 | ID TIMES_ASSIGN expression ';'\n                 | ID DIVIDE_ASSIGN expression ';' slice : ID '[' expression ']'\n             | ID '[' range ']'\n             | ID '[' expression ',' expression ']'\n             | ID '[' expression ',' range ']'\n             | ID '[' range ',' expression ']'\n             | ID '[' range ',' range ']' statement : slice ASSIGN expression ';'\n                 | slice MINUS_ASSIGN expression ';'\n                 | slice PLUS_ASSIGN expression ';'\n                 | slice TIMES_ASSIGN expression ';'\n                 | slice DIVIDE_ASSIGN expression ';'\n        expression : slicestatements_list : statements_list statement\n                       | statements_list code_block\n                       | statement statement\n                       | statement code_blockstatement : RETURN ';'\n                 | RETURN expression ';' code_block : '{' statements_list '}'\n                  | '{' statement '}' statement : BREAK ';'\n                 | CONTINUE ';' statement : FOR ID ASSIGN range code_block\n                 | FOR ID ASSIGN range statement\n                 | WHILE '(' expression ')' code_block\n                 | WHILE '(' expression ')' statementstatement  : IF '(' expression ')' statement %prec JUST_IF\n                  | IF '(' expression ')' code_block %prec JUST_IF\n                  | IF '(' expression ')' statement else_block\n                  | IF '(' expression ')' code_block else_block\n       else_block : ELSE statement\n                  | ELSE code_blockstatement : PRINT inner_table ';'\n                 | PRINT expression ';' "
    
_lr_action_items = {'ID':([0,1,2,5,8,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,37,38,39,40,41,42,44,45,48,49,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,80,81,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[3,3,3,30,43,30,-47,-48,3,-49,-50,30,30,30,30,30,30,30,30,30,30,30,-51,-3,-4,-5,30,30,-46,-1,-2,-55,-56,30,30,3,3,-52,30,30,30,30,30,30,30,30,-23,30,30,30,30,30,30,30,30,30,-14,30,-67,30,-68,30,-53,-54,-30,-31,-32,-33,-34,-35,30,30,-36,30,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,3,3,3,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,3,-64,-65,-66,]),'RETURN':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[5,5,5,-47,-48,5,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,5,5,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,5,5,5,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,5,-64,-65,-66,]),'BREAK':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[6,6,6,-47,-48,6,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,6,6,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,6,6,6,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,6,-64,-65,-66,]),'CONTINUE':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[7,7,7,-47,-48,7,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,7,7,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,7,7,7,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,7,-64,-65,-66,]),'FOR':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[8,8,8,-47,-48,8,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,8,8,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,8,8,8,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,8,-64,-65,-66,]),'WHILE':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[9,9,9,-47,-48,9,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,9,9,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,9,9,9,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,9,-64,-65,-66,]),'IF':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[10,10,10,-47,-48,10,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,10,10,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,10,10,10,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,10,-64,-65,-66,]),'PRINT':([0,1,2,12,13,14,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[11,11,11,-47,-48,11,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,11,11,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,11,11,11,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,11,-64,-65,-66,]),'$end':([1,12,13,15,16,28,41,42,62,87,89,91,92,93,94,95,96,97,103,104,105,106,107,141,142,143,144,145,146,151,153,154,155,],[0,-47,-48,-49,-50,-51,-55,-56,-52,-67,-68,-53,-54,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,]),'{':([1,2,12,13,15,16,28,30,31,32,38,39,40,41,42,48,49,62,71,83,87,89,91,92,93,94,95,96,97,98,101,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,127,129,130,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,],[14,14,-47,-48,-49,-50,-51,-3,-4,-5,-46,-1,-2,-55,-56,14,14,-52,-23,-14,-67,-68,-53,-54,-30,-31,-32,-33,-34,-35,-36,-41,-42,-43,-44,-45,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,14,14,14,-13,-10,-11,-12,-57,-58,-59,-60,-61,-62,-37,-38,-40,-39,-63,14,-64,-65,-66,]),'ASSIGN':([3,4,43,98,101,147,148,149,150,],[17,23,84,-35,-36,-37,-38,-40,-39,]),'MINUS_ASSIGN':([3,4,98,101,147,148,149,150,],[18,24,-35,-36,-37,-38,-40,-39,]),'PLUS_ASSIGN':([3,4,98,101,147,148,149,150,],[19,25,-35,-36,-37,-38,-40,-39,]),'TIMES_ASSIGN':([3,4,98,101,147,148,149,150,],[20,26,-35,-36,-37,-38,-40,-39,]),'DIVIDE_ASSIGN':([3,4,98,101,147,148,149,150,],[21,27,-35,-36,-37,-38,-40,-39,]),'[':([3,5,11,17,18,19,20,21,22,23,24,25,26,27,30,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[22,33,33,33,33,33,33,33,33,33,33,33,33,33,22,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),';':([5,6,7,29,30,31,32,38,39,40,46,47,50,51,52,53,54,57,58,59,60,61,71,83,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,132,138,139,140,147,148,149,150,],[28,41,42,62,-3,-4,-5,-46,-1,-2,87,89,93,94,95,96,97,103,104,105,106,107,-23,-14,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,-10,-11,-12,-37,-38,-40,-39,]),'STRING':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'ZEROS':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'EYE':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'ONES':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'MINUS':([5,11,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,37,38,39,40,44,45,47,50,51,52,53,54,55,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,83,84,85,86,88,90,98,99,100,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[37,37,37,37,37,37,37,37,37,37,37,37,37,64,-3,-4,-5,37,37,-46,-1,-2,37,37,64,64,64,64,64,64,64,64,64,64,64,64,37,37,37,37,37,37,37,37,-23,37,37,37,37,37,37,64,37,37,37,-14,37,64,64,37,37,-35,37,37,-36,37,-15,-16,-17,-18,-19,-20,-21,-22,64,64,64,64,64,64,-8,-9,64,64,64,64,64,64,64,64,64,-10,-11,-12,-37,-38,-40,-39,]),'INT':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'FLOAT':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'(':([9,10,34,35,36,],[44,45,80,81,82,]),'}':([12,13,15,16,28,41,42,48,49,62,87,89,91,92,93,94,95,96,97,103,104,105,106,107,141,142,143,144,145,146,151,153,154,155,],[-47,-48,-49,-50,-51,-55,-56,91,92,-52,-67,-68,-53,-54,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,]),'ELSE':([28,41,42,62,87,89,91,92,93,94,95,96,97,103,104,105,106,107,141,142,143,144,145,146,151,153,154,155,],[-51,-55,-56,-52,-67,-68,-53,-54,-30,-31,-32,-33,-34,-41,-42,-43,-44,-45,-57,-58,-59,-60,152,152,-63,-64,-65,-66,]),'PLUS':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[63,-3,-4,-5,-46,-1,-2,63,63,63,63,63,63,63,63,63,63,63,63,-23,63,-14,63,63,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,63,63,63,63,63,63,-8,-9,63,63,63,63,63,63,63,63,63,-10,-11,-12,-37,-38,-40,-39,]),'TIMES':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[65,-3,-4,-5,-46,-1,-2,65,65,65,65,65,65,65,65,65,65,65,65,-23,65,65,65,65,-35,-36,65,65,-17,-18,-19,-20,-21,-22,65,65,65,65,65,65,-8,-9,65,65,65,65,65,65,65,65,65,-10,-11,-12,-37,-38,-40,-39,]),'DIVIDE':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[66,-3,-4,-5,-46,-1,-2,66,66,66,66,66,66,66,66,66,66,66,66,-23,66,66,66,66,-35,-36,66,66,-17,-18,-19,-20,-21,-22,66,66,66,66,66,66,-8,-9,66,66,66,66,66,66,66,66,66,-10,-11,-12,-37,-38,-40,-39,]),'PLUS_MAT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[67,-3,-4,-5,-46,-1,-2,67,67,67,67,67,67,67,67,67,67,67,67,-23,67,67,67,67,-35,-36,67,67,67,67,-19,-20,-21,-22,67,67,67,67,67,67,-8,-9,67,67,67,67,67,67,67,67,67,-10,-11,-12,-37,-38,-40,-39,]),'MINUS_MAT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[68,-3,-4,-5,-46,-1,-2,68,68,68,68,68,68,68,68,68,68,68,68,-23,68,68,68,68,-35,-36,68,68,68,68,-19,-20,-21,-22,68,68,68,68,68,68,-8,-9,68,68,68,68,68,68,68,68,68,-10,-11,-12,-37,-38,-40,-39,]),'TIMES_MAT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[69,-3,-4,-5,-46,-1,-2,69,69,69,69,69,69,69,69,69,69,69,69,-23,69,69,69,69,-35,-36,69,69,69,69,69,69,-21,-22,69,69,69,69,69,69,-8,-9,69,69,69,69,69,69,69,69,69,-10,-11,-12,-37,-38,-40,-39,]),'DIVIDE_MAT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[70,-3,-4,-5,-46,-1,-2,70,70,70,70,70,70,70,70,70,70,70,70,-23,70,70,70,70,-35,-36,70,70,70,70,70,70,-21,-22,70,70,70,70,70,70,-8,-9,70,70,70,70,70,70,70,70,70,-10,-11,-12,-37,-38,-40,-39,]),'TRANSPOSE':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[71,-3,-4,-5,-46,-1,-2,71,71,71,71,71,71,71,71,71,71,71,71,-23,71,-14,71,71,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,71,71,71,71,71,71,71,71,71,-10,-11,-12,-37,-38,-40,-39,]),'EQ':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[72,-3,-4,-5,-46,-1,-2,72,72,72,72,72,72,72,72,72,72,72,72,-23,72,-14,72,72,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,72,72,72,72,72,72,72,72,72,-10,-11,-12,-37,-38,-40,-39,]),'NE':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[73,-3,-4,-5,-46,-1,-2,73,73,73,73,73,73,73,73,73,73,73,73,-23,73,-14,73,73,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,73,73,73,73,73,73,73,73,73,-10,-11,-12,-37,-38,-40,-39,]),'GT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[74,-3,-4,-5,-46,-1,-2,74,74,74,74,74,74,74,74,74,74,74,74,-23,74,-14,74,74,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,74,74,74,74,74,74,74,74,74,-10,-11,-12,-37,-38,-40,-39,]),'GE':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[75,-3,-4,-5,-46,-1,-2,75,75,75,75,75,75,75,75,75,75,75,75,-23,75,-14,75,75,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,75,75,75,75,75,75,75,75,75,-10,-11,-12,-37,-38,-40,-39,]),'LT':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[76,-3,-4,-5,-46,-1,-2,76,76,76,76,76,76,76,76,76,76,76,76,-23,76,-14,76,76,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,76,76,76,76,76,76,76,76,76,-10,-11,-12,-37,-38,-40,-39,]),'LE':([29,30,31,32,38,39,40,47,50,51,52,53,54,55,57,58,59,60,61,71,78,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,131,132,133,135,137,138,139,140,147,148,149,150,],[77,-3,-4,-5,-46,-1,-2,77,77,77,77,77,77,77,77,77,77,77,77,-23,77,-14,77,77,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,77,77,77,77,77,77,77,77,77,-10,-11,-12,-37,-38,-40,-39,]),',':([30,31,32,38,39,40,46,47,55,56,71,78,79,83,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,132,135,138,139,140,147,148,149,150,],[-3,-4,-5,-46,-1,-2,88,90,99,102,-23,90,88,-14,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,-13,-10,-11,-12,-37,-38,-40,-39,]),']':([30,31,32,38,39,40,55,56,71,78,79,83,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,131,132,133,134,135,136,137,138,139,140,147,148,149,150,],[-3,-4,-5,-46,-1,-2,98,101,-23,122,123,-14,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,-7,-6,147,148,-13,149,150,-10,-11,-12,-37,-38,-40,-39,]),':':([30,31,32,38,39,40,55,71,83,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,128,133,137,138,139,140,147,148,149,150,],[-3,-4,-5,-46,-1,-2,100,-23,-14,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,100,100,100,-10,-11,-12,-37,-38,-40,-39,]),')':([30,31,32,38,39,40,71,83,85,86,98,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,138,139,140,147,148,149,150,],[-3,-4,-5,-46,-1,-2,-23,-14,129,130,-35,-36,-15,-16,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-29,-8,-9,138,139,140,-10,-11,-12,-37,-38,-40,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements_list':([0,14,],[1,48,]),'statement':([0,1,2,14,48,49,127,129,130,152,],[2,12,15,49,12,15,142,144,145,154,]),'slice':([0,1,2,5,11,14,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,48,49,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,127,129,130,152,],[4,4,4,38,38,4,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,4,4,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,4,4,4,4,]),'code_block':([1,2,48,49,127,129,130,152,],[13,16,13,16,141,143,146,155,]),'expression':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[29,47,50,51,52,53,54,55,57,58,59,60,61,78,83,85,86,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,128,131,132,133,135,137,]),'number':([5,11,17,18,19,20,21,22,23,24,25,26,27,33,37,44,45,63,64,65,66,67,68,69,70,72,73,74,75,76,77,80,81,82,84,88,90,99,100,102,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'inner_table':([11,33,],[46,79,]),'range':([22,84,99,102,],[56,127,134,136,]),'else_block':([145,146,],[151,153,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements_list","S'",1,None,None,None),
  ('number -> INT','number',1,'p_number','parser.py',18),
  ('number -> FLOAT','number',1,'p_number','parser.py',19),
  ('expression -> ID','expression',1,'p_expression','parser.py',23),
  ('expression -> number','expression',1,'p_expression','parser.py',24),
  ('expression -> STRING','expression',1,'p_expression','parser.py',25),
  ('inner_table -> expression , expression','inner_table',3,'p_table','parser.py',29),
  ('inner_table -> inner_table , expression','inner_table',3,'p_table','parser.py',30),
  ('expression -> [ expression ]','expression',3,'p_table','parser.py',31),
  ('expression -> [ inner_table ]','expression',3,'p_table','parser.py',32),
  ('expression -> ZEROS ( expression )','expression',4,'p_matrix_maker','parser.py',36),
  ('expression -> EYE ( expression )','expression',4,'p_matrix_maker','parser.py',37),
  ('expression -> ONES ( expression )','expression',4,'p_matrix_maker','parser.py',38),
  ('range -> expression : expression','range',3,'p_range','parser.py',42),
  ('expression -> MINUS expression','expression',2,'p_negation','parser.py',46),
  ('expression -> expression PLUS expression','expression',3,'p_binary_operators','parser.py',50),
  ('expression -> expression MINUS expression','expression',3,'p_binary_operators','parser.py',51),
  ('expression -> expression TIMES expression','expression',3,'p_binary_operators','parser.py',52),
  ('expression -> expression DIVIDE expression','expression',3,'p_binary_operators','parser.py',53),
  ('expression -> expression PLUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',57),
  ('expression -> expression MINUS_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',58),
  ('expression -> expression TIMES_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',59),
  ('expression -> expression DIVIDE_MAT expression','expression',3,'p_matrix_binary_operators','parser.py',60),
  ('expression -> expression TRANSPOSE','expression',2,'p_transposition','parser.py',64),
  ('expression -> expression EQ expression','expression',3,'p_compare_equal','parser.py',68),
  ('expression -> expression NE expression','expression',3,'p_compare_equal','parser.py',69),
  ('expression -> expression GT expression','expression',3,'p_compare_greater','parser.py',73),
  ('expression -> expression GE expression','expression',3,'p_compare_greater','parser.py',74),
  ('expression -> expression LT expression','expression',3,'p_compare_lower','parser.py',78),
  ('expression -> expression LE expression','expression',3,'p_compare_lower','parser.py',79),
  ('statement -> ID ASSIGN expression ;','statement',4,'p_statement','parser.py',83),
  ('statement -> ID MINUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',84),
  ('statement -> ID PLUS_ASSIGN expression ;','statement',4,'p_statement','parser.py',85),
  ('statement -> ID TIMES_ASSIGN expression ;','statement',4,'p_statement','parser.py',86),
  ('statement -> ID DIVIDE_ASSIGN expression ;','statement',4,'p_statement','parser.py',87),
  ('slice -> ID [ expression ]','slice',4,'p_slice','parser.py',91),
  ('slice -> ID [ range ]','slice',4,'p_slice','parser.py',92),
  ('slice -> ID [ expression , expression ]','slice',6,'p_slice','parser.py',93),
  ('slice -> ID [ expression , range ]','slice',6,'p_slice','parser.py',94),
  ('slice -> ID [ range , expression ]','slice',6,'p_slice','parser.py',95),
  ('slice -> ID [ range , range ]','slice',6,'p_slice','parser.py',96),
  ('statement -> slice ASSIGN expression ;','statement',4,'p_slicing','parser.py',100),
  ('statement -> slice MINUS_ASSIGN expression ;','statement',4,'p_slicing','parser.py',101),
  ('statement -> slice PLUS_ASSIGN expression ;','statement',4,'p_slicing','parser.py',102),
  ('statement -> slice TIMES_ASSIGN expression ;','statement',4,'p_slicing','parser.py',103),
  ('statement -> slice DIVIDE_ASSIGN expression ;','statement',4,'p_slicing','parser.py',104),
  ('expression -> slice','expression',1,'p_slicing','parser.py',105),
  ('statements_list -> statements_list statement','statements_list',2,'p_statements_list','parser.py',109),
  ('statements_list -> statements_list code_block','statements_list',2,'p_statements_list','parser.py',110),
  ('statements_list -> statement statement','statements_list',2,'p_statements_list','parser.py',111),
  ('statements_list -> statement code_block','statements_list',2,'p_statements_list','parser.py',112),
  ('statement -> RETURN ;','statement',2,'p_return_statement','parser.py',116),
  ('statement -> RETURN expression ;','statement',3,'p_return_statement','parser.py',117),
  ('code_block -> { statements_list }','code_block',3,'p_code_block','parser.py',121),
  ('code_block -> { statement }','code_block',3,'p_code_block','parser.py',122),
  ('statement -> BREAK ;','statement',2,'p_loop_statement','parser.py',126),
  ('statement -> CONTINUE ;','statement',2,'p_loop_statement','parser.py',127),
  ('statement -> FOR ID ASSIGN range code_block','statement',5,'p_loop','parser.py',131),
  ('statement -> FOR ID ASSIGN range statement','statement',5,'p_loop','parser.py',132),
  ('statement -> WHILE ( expression ) code_block','statement',5,'p_loop','parser.py',133),
  ('statement -> WHILE ( expression ) statement','statement',5,'p_loop','parser.py',134),
  ('statement -> IF ( expression ) statement','statement',5,'p_if_statement','parser.py',138),
  ('statement -> IF ( expression ) code_block','statement',5,'p_if_statement','parser.py',139),
  ('statement -> IF ( expression ) statement else_block','statement',6,'p_if_statement','parser.py',140),
  ('statement -> IF ( expression ) code_block else_block','statement',6,'p_if_statement','parser.py',141),
  ('else_block -> ELSE statement','else_block',2,'p_if_statement','parser.py',142),
  ('else_block -> ELSE code_block','else_block',2,'p_if_statement','parser.py',143),
  ('statement -> PRINT inner_table ;','statement',3,'p_print','parser.py',147),
  ('statement -> PRINT expression ;','statement',3,'p_print','parser.py',148),
]
